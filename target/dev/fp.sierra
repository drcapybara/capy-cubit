type RangeCheck = RangeCheck;
type felt252 = felt252;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type fp::types::fp::FixedType = Struct<ut@fp::types::fp::FixedType, u128, core::bool>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<((),)> = Enum<ut@core::PanicResult::<((),)>, Tuple<Unit>, Array<felt252>>;
type Tuple<fp::types::fp::FixedType> = Struct<ut@Tuple, fp::types::fp::FixedType>;
type core::PanicResult::<(fp::types::fp::FixedType,)> = Enum<ut@core::PanicResult::<(fp::types::fp::FixedType,)>, Tuple<fp::types::fp::FixedType>, Array<felt252>>;
type Tuple<u128, u128> = Struct<ut@Tuple, u128, u128>;
type Tuple<Tuple<u128, u128>> = Struct<ut@Tuple, Tuple<u128, u128>>;
type core::PanicResult::<((core::integer::u128, core::integer::u128),)> = Enum<ut@core::PanicResult::<((core::integer::u128, core::integer::u128),)>, Tuple<Tuple<u128, u128>>, Array<felt252>>;
type Tuple<u128> = Struct<ut@Tuple, u128>;
type core::PanicResult::<(core::integer::u128,)> = Enum<ut@core::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Array<felt252>>;
type U128MulGuarantee = U128MulGuarantee;
type Tuple<core::integer::u256> = Struct<ut@Tuple, core::integer::u256>;
type core::PanicResult::<(core::integer::u256,)> = Enum<ut@core::PanicResult::<(core::integer::u256,)>, Tuple<core::integer::u256>, Array<felt252>>;
type GasBuiltin = GasBuiltin;
type Uninitialized<fp::types::fp::FixedType> = Uninitialized<fp::types::fp::FixedType>;
type Uninitialized<u128> = Uninitialized<u128>;
type BuiltinCosts = BuiltinCosts;
type NonZero<core::integer::u256> = NonZero<core::integer::u256>;
type Tuple<NonZero<core::integer::u256>> = Struct<ut@Tuple, NonZero<core::integer::u256>>;
type core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)> = Enum<ut@core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, Tuple<NonZero<core::integer::u256>>, Array<felt252>>;
type u64 = u64;
type NonZero<u128> = NonZero<u128>;
type Tuple<NonZero<u128>> = Struct<ut@Tuple, NonZero<u128>>;
type core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)> = Enum<ut@core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, Tuple<NonZero<u128>>, Array<felt252>>;
type NonZero<felt252> = NonZero<felt252>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;
type Tuple<core::option::Option::<core::integer::u128>> = Struct<ut@Tuple, core::option::Option::<core::integer::u128>>;
type core::PanicResult::<(core::option::Option::<core::integer::u128>,)> = Enum<ut@core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, Tuple<core::option::Option::<core::integer::u128>>, Array<felt252>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;
type core::option::Option::<core::zeroable::NonZero::<core::integer::u256>> = Enum<ut@core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, NonZero<core::integer::u256>, Unit>;
type core::option::Option::<core::zeroable::NonZero::<core::integer::u128>> = Enum<ut@core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, NonZero<u128>, Unit>;

libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::integer::u256_from_felt252> = function_call<user@core::integer::u256_from_felt252>;
libfunc felt252_const<1809251394333065606848661391547535052811553607665798349986546028067936010240> = felt252_const<1809251394333065606848661391547535052811553607665798349986546028067936010240>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::integer::u256> = rename<core::integer::u256>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@core::integer::U256PartialOrd::lt> = function_call<user@core::integer::U256PartialOrd::lt>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc dup<felt252> = dup<felt252>;
libfunc function_call<user@fp::types::fp::_felt_sign> = function_call<user@fp::types::fp::_felt_sign>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc bool_eq = bool_eq;
libfunc branch_align = branch_align;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_mul = felt252_mul;
libfunc felt252_const<-1> = felt252_const<-1>;
libfunc struct_deconstruct<fp::types::fp::FixedType> = struct_deconstruct<fp::types::fp::FixedType>;
libfunc u128_const<18446744073709551616> = u128_const<18446744073709551616>;
libfunc dup<u128> = dup<u128>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc drop<u128> = drop<u128>;
libfunc jump = jump;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc felt252_const<34494828803899176540909234021> = felt252_const<34494828803899176540909234021>;
libfunc function_call<user@core::assert> = function_call<user@core::assert>;
libfunc enum_match<core::PanicResult::<((),)>> = enum_match<core::PanicResult::<((),)>>;
libfunc drop<Tuple<Unit>> = drop<Tuple<Unit>>;
libfunc function_call<user@fp::types::fp::FixedImpl::new> = function_call<user@fp::types::fp::FixedImpl::new>;
libfunc struct_construct<fp::types::fp::FixedType> = struct_construct<fp::types::fp::FixedType>;
libfunc store_temp<fp::types::fp::FixedType> = store_temp<fp::types::fp::FixedType>;
libfunc dup<fp::types::fp::FixedType> = dup<fp::types::fp::FixedType>;
libfunc function_call<user@fp::math::core::mul> = function_call<user@fp::math::core::mul>;
libfunc enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>> = enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>;
libfunc struct_deconstruct<Tuple<fp::types::fp::FixedType>> = struct_deconstruct<Tuple<fp::types::fp::FixedType>>;
libfunc function_call<user@fp::math::core::sub> = function_call<user@fp::math::core::sub>;
libfunc function_call<user@fp::math::core::sqrt> = function_call<user@fp::math::core::sqrt>;
libfunc function_call<user@fp::math::trig::asin> = function_call<user@fp::math::trig::asin>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc struct_construct<Tuple<fp::types::fp::FixedType>> = struct_construct<Tuple<fp::types::fp::FixedType>>;
libfunc enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0> = enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>;
libfunc store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>> = store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>;
libfunc u128_const<57952155664616982739> = u128_const<57952155664616982739>;
libfunc enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1> = enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>;
libfunc drop<fp::types::fp::FixedType> = drop<fp::types::fp::FixedType>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc u128_eq = u128_eq;
libfunc function_call<user@fp::math::core::div> = function_call<user@fp::math::core::div>;
libfunc function_call<user@fp::math::trig::atan> = function_call<user@fp::math::trig::atan>;
libfunc u128_const<28976077832308491370> = u128_const<28976077832308491370>;
libfunc function_call<user@fp::math::core::abs> = function_call<user@fp::math::core::abs>;
libfunc dup<core::bool> = dup<core::bool>;
libfunc u128_const<12912720851596686131> = u128_const<12912720851596686131>;
libfunc u128_const<10650232656328343401> = u128_const<10650232656328343401>;
libfunc function_call<user@fp::math::core::add> = function_call<user@fp::math::core::add>;
libfunc u128_const<33784601907694228> = u128_const<33784601907694228>;
libfunc u128_const<863077567022907619> = u128_const<863077567022907619>;
libfunc u128_const<3582351446937658863> = u128_const<3582351446937658863>;
libfunc u128_const<4833057334070945981> = u128_const<4833057334070945981>;
libfunc u128_const<806366139934153963> = u128_const<806366139934153963>;
libfunc u128_const<3505955710573417812> = u128_const<3505955710573417812>;
libfunc u128_const<25330242983263508> = u128_const<25330242983263508>;
libfunc u128_const<6150896368532115927> = u128_const<6150896368532115927>;
libfunc u128_const<75835542453775> = u128_const<75835542453775>;
libfunc u128_const<18446743057812048409> = u128_const<18446743057812048409>;
libfunc u128_const<9658692610769497123> = u128_const<9658692610769497123>;
libfunc function_call<user@fp::types::fp::FixedInto::into> = function_call<user@fp::types::fp::FixedInto::into>;
libfunc felt252_add = felt252_add;
libfunc function_call<user@fp::types::fp::FixedImpl::from_felt> = function_call<user@fp::types::fp::FixedImpl::from_felt>;
libfunc rename<fp::types::fp::FixedType> = rename<fp::types::fp::FixedType>;
libfunc function_call<user@fp::math::core::_split_unsigned> = function_call<user@fp::math::core::_split_unsigned>;
libfunc enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>> = enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>;
libfunc struct_deconstruct<Tuple<Tuple<u128, u128>>> = struct_deconstruct<Tuple<Tuple<u128, u128>>>;
libfunc struct_deconstruct<Tuple<u128, u128>> = struct_deconstruct<Tuple<u128, u128>>;
libfunc u128_const<0> = u128_const<0>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt> = function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<(core::integer::u128,)>> = enum_match<core::PanicResult::<(core::integer::u128,)>>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc function_call<user@fp::types::fp::FixedImpl::new_unscaled> = function_call<user@fp::types::fp::FixedImpl::new_unscaled>;
libfunc bool_xor_impl = bool_xor_impl;
libfunc u128_guarantee_mul = u128_guarantee_mul;
libfunc store_temp<U128MulGuarantee> = store_temp<U128MulGuarantee>;
libfunc function_call<user@core::integer::U128MulGuaranteeDestruct::destruct> = function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>;
libfunc struct_construct<Tuple<u128, u128>> = struct_construct<Tuple<u128, u128>>;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc function_call<user@core::integer::U256Div::div> = function_call<user@core::integer::U256Div::div>;
libfunc enum_match<core::PanicResult::<(core::integer::u256,)>> = enum_match<core::PanicResult::<(core::integer::u256,)>>;
libfunc struct_deconstruct<Tuple<core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256>>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc felt252_const<593979512822486839219413268164276087> = felt252_const<593979512822486839219413268164276087>;
libfunc felt252_sub = felt252_sub;
libfunc bool_and_impl = bool_and_impl;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc u128_const<26613026195688644984> = u128_const<26613026195688644984>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc function_call<user@fp::math::core::exp2> = function_call<user@fp::math::core::exp2>;
libfunc alloc_local<fp::types::fp::FixedType> = alloc_local<fp::types::fp::FixedType>;
libfunc alloc_local<u128> = alloc_local<u128>;
libfunc finalize_locals = finalize_locals;
libfunc store_local<fp::types::fp::FixedType> = store_local<fp::types::fp::FixedType>;
libfunc u128_const<2> = u128_const<2>;
libfunc store_local<u128> = store_local<u128>;
libfunc function_call<user@fp::math::core::_pow_int> = function_call<user@fp::math::core::_pow_int>;
libfunc u128_const<41691949755436> = u128_const<41691949755436>;
libfunc u128_const<231817862090993> = u128_const<231817862090993>;
libfunc u128_const<2911875592466782> = u128_const<2911875592466782>;
libfunc u128_const<24539637786416367> = u128_const<24539637786416367>;
libfunc u128_const<177449490038807528> = u128_const<177449490038807528>;
libfunc u128_const<1023863119786103800> = u128_const<1023863119786103800>;
libfunc u128_const<4431397849999009866> = u128_const<4431397849999009866>;
libfunc u128_const<12786308590235521577> = u128_const<12786308590235521577>;
libfunc drop<Uninitialized<u128>> = drop<Uninitialized<u128>>;
libfunc drop<Uninitialized<fp::types::fp::FixedType>> = drop<Uninitialized<fp::types::fp::FixedType>>;
libfunc u128_const<12786308645202655660> = u128_const<12786308645202655660>;
libfunc function_call<user@fp::math::core::log2> = function_call<user@fp::math::core::log2>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc felt252_const<145495691950598149177832629628683515493> = felt252_const<145495691950598149177832629628683515493>;
libfunc function_call<user@core::integer::U128Div::div> = function_call<user@core::integer::U128Div::div>;
libfunc function_call<user@fp::math::core::_msb> = function_call<user@fp::math::core::_msb>;
libfunc u128_const<167660832607149504> = u128_const<167660832607149504>;
libfunc u128_const<2284550827067371376> = u128_const<2284550827067371376>;
libfunc u128_const<13804762162529339368> = u128_const<13804762162529339368>;
libfunc u128_const<48676798788932142400> = u128_const<48676798788932142400>;
libfunc u128_const<110928274989790216568> = u128_const<110928274989790216568>;
libfunc u128_const<171296190111888966192> = u128_const<171296190111888966192>;
libfunc u128_const<184599081115266689944> = u128_const<184599081115266689944>;
libfunc u128_const<150429590981271126408> = u128_const<150429590981271126408>;
libfunc u128_const<63187350828072553424> = u128_const<63187350828072553424>;
libfunc function_call<user@fp::math::core::neg> = function_call<user@fp::math::core::neg>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<5197639> = felt252_const<5197639>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc function_call<user@core::integer::u256_as_non_zero> = function_call<user@core::integer::u256_as_non_zero>;
libfunc enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>> = enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>;
libfunc struct_deconstruct<Tuple<NonZero<core::integer::u256>>> = struct_deconstruct<Tuple<NonZero<core::integer::u256>>>;
libfunc u256_safe_divmod = u256_safe_divmod;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc bool_not_impl = bool_not_impl;
libfunc bool_or_impl = bool_or_impl;
libfunc function_call<user@fp::math::core::ln> = function_call<user@fp::math::core::ln>;
libfunc function_call<user@fp::math::core::exp> = function_call<user@fp::math::core::exp>;
libfunc u128_const<9223372036854775808> = u128_const<9223372036854775808>;
libfunc function_call<user@core::integer::U128Mul::mul> = function_call<user@core::integer::U128Mul::mul>;
libfunc u128_sqrt = u128_sqrt;
libfunc upcast<u64, u128> = upcast<u64, u128>;
libfunc drop<u64> = drop<u64>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::PanicResult::<(core::integer::u128,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u128,)>> = store_temp<core::PanicResult::<(core::integer::u128,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::PanicResult::<(core::integer::u128,)>, 1>;
libfunc function_call<user@core::integer::u128_as_non_zero> = function_call<user@core::integer::u128_as_non_zero>;
libfunc enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>> = enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>;
libfunc struct_deconstruct<Tuple<NonZero<u128>>> = struct_deconstruct<Tuple<NonZero<u128>>>;
libfunc u128_safe_divmod = u128_safe_divmod;
libfunc struct_construct<Tuple<Tuple<u128, u128>>> = struct_construct<Tuple<Tuple<u128, u128>>>;
libfunc enum_init<core::PanicResult::<((core::integer::u128, core::integer::u128),)>, 0> = enum_init<core::PanicResult::<((core::integer::u128, core::integer::u128),)>, 0>;
libfunc store_temp<core::PanicResult::<((core::integer::u128, core::integer::u128),)>> = store_temp<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>;
libfunc enum_init<core::PanicResult::<((core::integer::u128, core::integer::u128),)>, 1> = enum_init<core::PanicResult::<((core::integer::u128, core::integer::u128),)>, 1>;
libfunc felt252_const<5> = felt252_const<5>;
libfunc felt252_const<18446744073709551616> = felt252_const<18446744073709551616>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_const<2138404743268917596156934978104436> = felt252_const<2138404743268917596156934978104436>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc u128_const<5> = u128_const<5>;
libfunc function_call<user@fp::types::fp::FixedTryIntoU128::try_into> = function_call<user@fp::types::fp::FixedTryIntoU128::try_into>;
libfunc enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>> = enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>;
libfunc struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>> = struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc u128_const<3> = u128_const<3>;
libfunc felt252_const<29721761890975875353235833581453094220424382983267374> = felt252_const<29721761890975875353235833581453094220424382983267374>;
libfunc felt252_const<340282366920938463463374607431768211456> = felt252_const<340282366920938463463374607431768211456>;
libfunc drop<Tuple<fp::types::fp::FixedType>> = drop<Tuple<fp::types::fp::FixedType>>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc drop<felt252> = drop<felt252>;
libfunc function_call<user@fp::types::fp::_felt_abs> = function_call<user@fp::types::fp::_felt_abs>;
libfunc felt252_const<2387862688623893971225018062752805883948424103049997348723> = felt252_const<2387862688623893971225018062752805883948424103049997348723>;
libfunc felt252_const<2387862688623893970531098741390777380361094451627706838899> = felt252_const<2387862688623893970531098741390777380361094451627706838899>;
libfunc felt252_const<555967606749360903478679020927831129604990771248> = felt252_const<555967606749360903478679020927831129604990771248>;
libfunc function_call<user@fp::math::trig::acos> = function_call<user@fp::math::trig::acos>;
libfunc felt252_const<127458855108554219970326117> = felt252_const<127458855108554219970326117>;
libfunc felt252_const<28976077832308491370> = felt252_const<28976077832308491370>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc felt252_const<20423289048683266000> = felt252_const<20423289048683266000>;
libfunc felt252_const<127458855108554219970656111> = felt252_const<127458855108554219970656111>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc function_call<user@fp::tests::helpers::assert_precise> = function_call<user@fp::tests::helpers::assert_precise>;
libfunc u128_const<184467440737> = u128_const<184467440737>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc felt252_const<53495557813757699680> = felt252_const<53495557813757699680>;
libfunc function_call<user@fp::math::core::ceil> = function_call<user@fp::math::core::ceil>;
libfunc felt252_const<3> = felt252_const<3>;
libfunc felt252_const<2351200880115526965453749945625035424647700844> = felt252_const<2351200880115526965453749945625035424647700844>;
libfunc function_call<user@fp::math::core::floor> = function_call<user@fp::math::core::floor>;
libfunc felt252_const<2> = felt252_const<2>;
libfunc function_call<user@fp::math::core::round> = function_call<user@fp::math::core::round>;
libfunc felt252_const<25> = felt252_const<25>;
libfunc felt252_const<35876478273247176597073241689804579499892> = felt252_const<35876478273247176597073241689804579499892>;
libfunc felt252_const<4> = felt252_const<4>;
libfunc function_call<user@fp::math::core::pow> = function_call<user@fp::math::core::pow>;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc felt252_const<81> = felt252_const<81>;
libfunc felt252_const<39446605025088300853242100847729956958735173621867890> = felt252_const<39446605025088300853242100847729956958735173621867890>;
libfunc u128_const<1844674407370> = u128_const<1844674407370>;
libfunc function_call<user@fp::types::fp::FixedPrint::print> = function_call<user@fp::types::fp::FixedPrint::print>;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc rename<felt252> = rename<felt252>;
libfunc function_call<user@core::integer::u128_try_from_felt252> = function_call<user@core::integer::u128_try_from_felt252>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_mul_guarantee_verify = u128_mul_guarantee_verify;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc struct_construct<Tuple<core::integer::u256>> = struct_construct<Tuple<core::integer::u256>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 0> = enum_init<core::PanicResult::<(core::integer::u256,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u256,)>> = store_temp<core::PanicResult::<(core::integer::u256,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 1> = enum_init<core::PanicResult::<(core::integer::u256,)>, 1>;
libfunc function_call<user@core::integer::u256_try_as_non_zero> = function_call<user@core::integer::u256_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc struct_construct<Tuple<NonZero<core::integer::u256>>> = struct_construct<Tuple<NonZero<core::integer::u256>>>;
libfunc enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0> = enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>> = store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>;
libfunc felt252_const<2161886914012515606576> = felt252_const<2161886914012515606576>;
libfunc enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1> = enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1>;
libfunc function_call<user@core::integer::u128_checked_mul> = function_call<user@core::integer::u128_checked_mul>;
libfunc felt252_const<39878429859761676908720221312622923640695> = felt252_const<39878429859761676908720221312622923640695>;
libfunc function_call<user@core::integer::u128_try_as_non_zero> = function_call<user@core::integer::u128_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>> = enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>;
libfunc struct_construct<Tuple<NonZero<u128>>> = struct_construct<Tuple<NonZero<u128>>>;
libfunc enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, 0> = enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>> = store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>;
libfunc felt252_const<2161814014192570802224> = felt252_const<2161814014192570802224>;
libfunc enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, 1> = enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, 1>;
libfunc enum_init<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, 1> = enum_init<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, 1>;
libfunc store_temp<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>> = store_temp<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>;
libfunc struct_construct<Tuple<core::option::Option::<core::integer::u128>>> = struct_construct<Tuple<core::option::Option::<core::integer::u128>>>;
libfunc enum_init<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, 0> = enum_init<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, 0>;
libfunc function_call<user@core::debug::BoolPrintImpl::print> = function_call<user@core::debug::BoolPrintImpl::print>;
libfunc function_call<user@core::debug::U128PrintImpl::print> = function_call<user@core::debug::U128PrintImpl::print>;
libfunc drop<Tuple<u128, u128>> = drop<Tuple<u128, u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc u256_is_zero = u256_is_zero;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>;
libfunc store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>;
libfunc rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc u128_is_zero = u128_is_zero;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, 1> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, 1>;
libfunc store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>> = store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, 0> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, 0>;
libfunc rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>> = rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>;
libfunc felt252_const<439721161573> = felt252_const<439721161573>;
libfunc function_call<user@core::debug::Felt252PrintImpl::print> = function_call<user@core::debug::Felt252PrintImpl::print>;
libfunc felt252_const<1953658213> = felt252_const<1953658213>;
libfunc function_call<user@core::debug::print_felt252> = function_call<user@core::debug::print_felt252>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc print = print;

store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@core::integer::u256_from_felt252>([4], [5]) -> ([2], [3]);
felt252_const<1809251394333065606848661391547535052811553607665798349986546028067936010240>() -> ([6]);
store_temp<RangeCheck>([2]) -> ([9]);
store_temp<felt252>([6]) -> ([10]);
function_call<user@core::integer::u256_from_felt252>([9], [10]) -> ([7], [8]);
rename<RangeCheck>([7]) -> ([13]);
rename<core::integer::u256>([8]) -> ([14]);
store_temp<core::integer::u256>([3]) -> ([15]);
function_call<user@core::integer::U256PartialOrd::lt>([13], [14], [15]) -> ([11], [12]);
rename<RangeCheck>([11]) -> ([16]);
rename<core::bool>([12]) -> ([17]);
return([16], [17]);
store_temp<RangeCheck>([0]) -> ([4]);
dup<felt252>([1]) -> ([1], [5]);
store_temp<felt252>([5]) -> ([5]);
function_call<user@fp::types::fp::_felt_sign>([4], [5]) -> ([2], [3]);
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 1>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([7]);
bool_eq([3], [7]) { fallthrough() 28() };
branch_align() -> ();
felt252_const<1>() -> ([8]);
felt252_mul([1], [8]) -> ([9]);
store_temp<RangeCheck>([2]) -> ([10]);
store_temp<felt252>([9]) -> ([11]);
return([10], [11]);
branch_align() -> ();
felt252_const<-1>() -> ([12]);
felt252_const<1>() -> ([13]);
store_temp<felt252>([13]) -> ([13]);
felt252_mul([13], [12]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
felt252_mul([1], [14]) -> ([15]);
store_temp<RangeCheck>([2]) -> ([16]);
store_temp<felt252>([15]) -> ([17]);
return([16], [17]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([2], [3]);
u128_const<18446744073709551616>() -> ([4]);
dup<u128>([2]) -> ([2], [5]);
store_temp<u128>([4]) -> ([4]);
u128_overflowing_sub([0], [4], [5]) { fallthrough([6], [7]) 50([8], [9]) };
branch_align() -> ();
drop<u128>([7]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
store_temp<RangeCheck>([6]) -> ([12]);
store_temp<core::bool>([11]) -> ([13]);
jump() { 56() };
branch_align() -> ();
drop<u128>([9]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<RangeCheck>([8]) -> ([12]);
store_temp<core::bool>([15]) -> ([13]);
felt252_const<34494828803899176540909234021>() -> ([16]);
rename<core::bool>([13]) -> ([18]);
store_temp<felt252>([16]) -> ([19]);
function_call<user@core::assert>([18], [19]) -> ([17]);
enum_match<core::PanicResult::<((),)>>([17]) { fallthrough([20]) 158([21]) };
branch_align() -> ();
drop<Tuple<Unit>>([20]) -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 0>([22]) -> ([23]);
u128_const<18446744073709551616>() -> ([24]);
store_temp<u128>([24]) -> ([26]);
store_temp<core::bool>([23]) -> ([27]);
function_call<user@fp::types::fp::FixedImpl::new>([26], [27]) -> ([25]);
struct_construct<fp::types::fp::FixedType>([2], [3]) -> ([28]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<fp::types::fp::FixedType>([28]) -> ([32]);
dup<fp::types::fp::FixedType>([32]) -> ([32], [28]);
dup<fp::types::fp::FixedType>([28]) -> ([28], [33]);
store_temp<fp::types::fp::FixedType>([33]) -> ([33]);
function_call<user@fp::math::core::mul>([31], [32], [33]) -> ([29], [30]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([30]) { fallthrough([34]) 151([35]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([34]) -> ([36]);
store_temp<RangeCheck>([29]) -> ([39]);
store_temp<fp::types::fp::FixedType>([25]) -> ([40]);
store_temp<fp::types::fp::FixedType>([36]) -> ([41]);
function_call<user@fp::math::core::sub>([39], [40], [41]) -> ([37], [38]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([38]) { fallthrough([42]) 145([43]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([42]) -> ([44]);
store_temp<RangeCheck>([37]) -> ([47]);
store_temp<fp::types::fp::FixedType>([44]) -> ([48]);
function_call<user@fp::math::core::sqrt>([47], [48]) -> ([45], [46]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([46]) { fallthrough([49]) 139([50]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([49]) -> ([51]);
store_temp<RangeCheck>([45]) -> ([54]);
store_temp<fp::types::fp::FixedType>([51]) -> ([55]);
function_call<user@fp::math::trig::asin>([54], [55]) -> ([52], [53]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([53]) { fallthrough([56]) 133([57]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([56]) -> ([58]);
struct_deconstruct<fp::types::fp::FixedType>([28]) -> ([59], [60]);
drop<u128>([59]) -> ();
enum_match<core::bool>([60]) { fallthrough([61]) 108([62]) };
branch_align() -> ();
drop<Unit>([61]) -> ();
struct_construct<Tuple<fp::types::fp::FixedType>>([58]) -> ([63]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([63]) -> ([64]);
store_temp<RangeCheck>([52]) -> ([65]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([64]) -> ([66]);
return([65], [66]);
branch_align() -> ();
drop<Unit>([62]) -> ();
struct_construct<Unit>() -> ([67]);
enum_init<core::bool, 0>([67]) -> ([68]);
u128_const<57952155664616982739>() -> ([69]);
store_temp<u128>([69]) -> ([71]);
store_temp<core::bool>([68]) -> ([72]);
function_call<user@fp::types::fp::FixedImpl::new>([71], [72]) -> ([70]);
store_temp<RangeCheck>([52]) -> ([75]);
store_temp<fp::types::fp::FixedType>([70]) -> ([76]);
store_temp<fp::types::fp::FixedType>([58]) -> ([77]);
function_call<user@fp::math::core::sub>([75], [76], [77]) -> ([73], [74]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([74]) { fallthrough([78]) 128([79]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([78]) -> ([80]);
struct_construct<Tuple<fp::types::fp::FixedType>>([80]) -> ([81]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([81]) -> ([82]);
store_temp<RangeCheck>([73]) -> ([83]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([82]) -> ([84]);
return([83], [84]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([79]) -> ([85]);
store_temp<RangeCheck>([73]) -> ([86]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([85]) -> ([87]);
return([86], [87]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([28]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([57]) -> ([88]);
store_temp<RangeCheck>([52]) -> ([89]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([88]) -> ([90]);
return([89], [90]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([28]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([50]) -> ([91]);
store_temp<RangeCheck>([45]) -> ([92]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([91]) -> ([93]);
return([92], [93]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([28]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([43]) -> ([94]);
store_temp<RangeCheck>([37]) -> ([95]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([94]) -> ([96]);
return([95], [96]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([28]) -> ();
drop<fp::types::fp::FixedType>([25]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([35]) -> ([97]);
store_temp<RangeCheck>([29]) -> ([98]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([97]) -> ([99]);
return([98], [99]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<core::bool>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([21]) -> ([100]);
store_temp<RangeCheck>([12]) -> ([101]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([100]) -> ([102]);
return([101], [102]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([2], [3]);
u128_const<18446744073709551616>() -> ([4]);
dup<u128>([2]) -> ([2], [5]);
store_temp<u128>([4]) -> ([4]);
u128_overflowing_sub([0], [4], [5]) { fallthrough([6], [7]) 177([8], [9]) };
branch_align() -> ();
drop<u128>([7]) -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
store_temp<RangeCheck>([6]) -> ([12]);
store_temp<core::bool>([11]) -> ([13]);
jump() { 183() };
branch_align() -> ();
drop<u128>([9]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<RangeCheck>([8]) -> ([12]);
store_temp<core::bool>([15]) -> ([13]);
felt252_const<34494828803899176540909234021>() -> ([16]);
rename<core::bool>([13]) -> ([18]);
store_temp<felt252>([16]) -> ([19]);
function_call<user@core::assert>([18], [19]) -> ([17]);
enum_match<core::PanicResult::<((),)>>([17]) { fallthrough([20]) 281([21]) };
branch_align() -> ();
drop<Tuple<Unit>>([20]) -> ();
u128_const<18446744073709551616>() -> ([22]);
dup<u128>([2]) -> ([2], [23]);
u128_eq([23], [22]) { fallthrough() 270() };
branch_align() -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::bool, 0>([24]) -> ([25]);
u128_const<18446744073709551616>() -> ([26]);
store_temp<u128>([26]) -> ([28]);
store_temp<core::bool>([25]) -> ([29]);
function_call<user@fp::types::fp::FixedImpl::new>([28], [29]) -> ([27]);
struct_construct<fp::types::fp::FixedType>([2], [3]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([33]);
store_temp<fp::types::fp::FixedType>([30]) -> ([34]);
dup<fp::types::fp::FixedType>([34]) -> ([34], [30]);
dup<fp::types::fp::FixedType>([30]) -> ([30], [35]);
store_temp<fp::types::fp::FixedType>([35]) -> ([35]);
function_call<user@fp::math::core::mul>([33], [34], [35]) -> ([31], [32]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([32]) { fallthrough([36]) 263([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([36]) -> ([38]);
store_temp<RangeCheck>([31]) -> ([41]);
store_temp<fp::types::fp::FixedType>([27]) -> ([42]);
store_temp<fp::types::fp::FixedType>([38]) -> ([43]);
function_call<user@fp::math::core::sub>([41], [42], [43]) -> ([39], [40]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([40]) { fallthrough([44]) 257([45]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([44]) -> ([46]);
store_temp<RangeCheck>([39]) -> ([49]);
store_temp<fp::types::fp::FixedType>([46]) -> ([50]);
function_call<user@fp::math::core::sqrt>([49], [50]) -> ([47], [48]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([48]) { fallthrough([51]) 251([52]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([51]) -> ([53]);
store_temp<RangeCheck>([47]) -> ([56]);
store_temp<fp::types::fp::FixedType>([30]) -> ([57]);
store_temp<fp::types::fp::FixedType>([53]) -> ([58]);
function_call<user@fp::math::core::div>([56], [57], [58]) -> ([54], [55]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([55]) { fallthrough([59]) 246([60]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([59]) -> ([61]);
store_temp<RangeCheck>([54]) -> ([64]);
store_temp<fp::types::fp::FixedType>([61]) -> ([65]);
function_call<user@fp::math::trig::atan>([64], [65]) -> ([62], [63]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([63]) { fallthrough([66]) 241([67]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([66]) -> ([68]);
struct_construct<Tuple<fp::types::fp::FixedType>>([68]) -> ([69]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([69]) -> ([70]);
store_temp<RangeCheck>([62]) -> ([71]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([70]) -> ([72]);
return([71], [72]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([67]) -> ([73]);
store_temp<RangeCheck>([62]) -> ([74]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([73]) -> ([75]);
return([74], [75]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([60]) -> ([76]);
store_temp<RangeCheck>([54]) -> ([77]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([76]) -> ([78]);
return([77], [78]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([30]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([52]) -> ([79]);
store_temp<RangeCheck>([47]) -> ([80]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([79]) -> ([81]);
return([80], [81]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([30]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([45]) -> ([82]);
store_temp<RangeCheck>([39]) -> ([83]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([82]) -> ([84]);
return([83], [84]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([30]) -> ();
drop<fp::types::fp::FixedType>([27]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([37]) -> ([85]);
store_temp<RangeCheck>([31]) -> ([86]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([85]) -> ([87]);
return([86], [87]);
branch_align() -> ();
drop<u128>([2]) -> ();
u128_const<28976077832308491370>() -> ([88]);
store_temp<u128>([88]) -> ([90]);
store_temp<core::bool>([3]) -> ([91]);
function_call<user@fp::types::fp::FixedImpl::new>([90], [91]) -> ([89]);
struct_construct<Tuple<fp::types::fp::FixedType>>([89]) -> ([92]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([92]) -> ([93]);
store_temp<RangeCheck>([12]) -> ([94]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([93]) -> ([95]);
return([94], [95]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<core::bool>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([21]) -> ([96]);
store_temp<RangeCheck>([12]) -> ([97]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([96]) -> ([98]);
return([97], [98]);
dup<fp::types::fp::FixedType>([1]) -> ([1], [3]);
store_temp<fp::types::fp::FixedType>([3]) -> ([3]);
function_call<user@fp::math::core::abs>([3]) -> ([2]);
struct_construct<Unit>() -> ([4]);
enum_init<core::bool, 0>([4]) -> ([5]);
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
struct_deconstruct<fp::types::fp::FixedType>([2]) -> ([8], [9]);
u128_const<18446744073709551616>() -> ([10]);
dup<u128>([8]) -> ([8], [11]);
store_temp<u128>([10]) -> ([10]);
store_temp<core::bool>([5]) -> ([5]);
store_temp<core::bool>([7]) -> ([7]);
u128_overflowing_sub([0], [10], [11]) { fallthrough([12], [13]) 309([14], [15]) };
branch_align() -> ();
drop<u128>([13]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<RangeCheck>([12]) -> ([18]);
store_temp<core::bool>([17]) -> ([19]);
jump() { 315() };
branch_align() -> ();
drop<u128>([15]) -> ();
struct_construct<Unit>() -> ([20]);
enum_init<core::bool, 1>([20]) -> ([21]);
store_temp<RangeCheck>([14]) -> ([18]);
store_temp<core::bool>([21]) -> ([19]);
dup<u128>([8]) -> ([8], [22]);
dup<core::bool>([9]) -> ([9], [23]);
struct_construct<fp::types::fp::FixedType>([22], [23]) -> ([24]);
drop<fp::types::fp::FixedType>([24]) -> ();
enum_match<core::bool>([19]) { fallthrough([25]) 327([26]) };
branch_align() -> ();
drop<Unit>([25]) -> ();
struct_construct<fp::types::fp::FixedType>([8], [9]) -> ([27]);
store_temp<RangeCheck>([18]) -> ([28]);
store_temp<fp::types::fp::FixedType>([27]) -> ([29]);
store_temp<core::bool>([7]) -> ([30]);
jump() { 349() };
branch_align() -> ();
drop<Unit>([26]) -> ();
drop<core::bool>([7]) -> ();
struct_construct<Unit>() -> ([31]);
enum_init<core::bool, 0>([31]) -> ([32]);
u128_const<18446744073709551616>() -> ([33]);
store_temp<u128>([33]) -> ([35]);
store_temp<core::bool>([32]) -> ([36]);
function_call<user@fp::types::fp::FixedImpl::new>([35], [36]) -> ([34]);
struct_construct<fp::types::fp::FixedType>([8], [9]) -> ([37]);
store_temp<RangeCheck>([18]) -> ([40]);
store_temp<fp::types::fp::FixedType>([34]) -> ([41]);
store_temp<fp::types::fp::FixedType>([37]) -> ([42]);
function_call<user@fp::math::core::div>([40], [41], [42]) -> ([38], [39]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([39]) { fallthrough([43]) 987([44]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([43]) -> ([45]);
struct_construct<Unit>() -> ([46]);
enum_init<core::bool, 1>([46]) -> ([47]);
store_temp<RangeCheck>([38]) -> ([28]);
store_temp<fp::types::fp::FixedType>([45]) -> ([29]);
store_temp<core::bool>([47]) -> ([30]);
struct_deconstruct<fp::types::fp::FixedType>([29]) -> ([48], [49]);
u128_const<12912720851596686131>() -> ([50]);
dup<u128>([48]) -> ([48], [51]);
store_temp<u128>([50]) -> ([50]);
u128_overflowing_sub([28], [50], [51]) { fallthrough([52], [53]) 361([54], [55]) };
branch_align() -> ();
drop<u128>([53]) -> ();
struct_construct<Unit>() -> ([56]);
enum_init<core::bool, 0>([56]) -> ([57]);
store_temp<RangeCheck>([52]) -> ([58]);
store_temp<core::bool>([57]) -> ([59]);
jump() { 367() };
branch_align() -> ();
drop<u128>([55]) -> ();
struct_construct<Unit>() -> ([60]);
enum_init<core::bool, 1>([60]) -> ([61]);
store_temp<RangeCheck>([54]) -> ([58]);
store_temp<core::bool>([61]) -> ([59]);
dup<u128>([48]) -> ([48], [62]);
dup<core::bool>([49]) -> ([49], [63]);
struct_construct<fp::types::fp::FixedType>([62], [63]) -> ([64]);
drop<fp::types::fp::FixedType>([64]) -> ();
enum_match<core::bool>([59]) { fallthrough([65]) 379([66]) };
branch_align() -> ();
drop<Unit>([65]) -> ();
struct_construct<fp::types::fp::FixedType>([48], [49]) -> ([67]);
store_temp<RangeCheck>([58]) -> ([68]);
store_temp<fp::types::fp::FixedType>([67]) -> ([69]);
store_temp<core::bool>([5]) -> ([70]);
jump() { 430() };
branch_align() -> ();
drop<Unit>([66]) -> ();
drop<core::bool>([5]) -> ();
struct_construct<Unit>() -> ([71]);
enum_init<core::bool, 0>([71]) -> ([72]);
u128_const<10650232656328343401>() -> ([73]);
store_temp<u128>([73]) -> ([75]);
store_temp<core::bool>([72]) -> ([76]);
function_call<user@fp::types::fp::FixedImpl::new>([75], [76]) -> ([74]);
struct_construct<fp::types::fp::FixedType>([48], [49]) -> ([77]);
store_temp<RangeCheck>([58]) -> ([80]);
store_temp<fp::types::fp::FixedType>([77]) -> ([81]);
dup<fp::types::fp::FixedType>([81]) -> ([81], [77]);
dup<fp::types::fp::FixedType>([74]) -> ([74], [82]);
store_temp<fp::types::fp::FixedType>([82]) -> ([82]);
function_call<user@fp::math::core::sub>([80], [81], [82]) -> ([78], [79]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([79]) { fallthrough([83]) 978([84]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([83]) -> ([85]);
struct_construct<Unit>() -> ([86]);
enum_init<core::bool, 0>([86]) -> ([87]);
u128_const<18446744073709551616>() -> ([88]);
store_temp<u128>([88]) -> ([90]);
store_temp<core::bool>([87]) -> ([91]);
function_call<user@fp::types::fp::FixedImpl::new>([90], [91]) -> ([89]);
store_temp<RangeCheck>([78]) -> ([94]);
store_temp<fp::types::fp::FixedType>([77]) -> ([95]);
store_temp<fp::types::fp::FixedType>([74]) -> ([96]);
function_call<user@fp::math::core::mul>([94], [95], [96]) -> ([92], [93]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([93]) { fallthrough([97]) 969([98]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([97]) -> ([99]);
store_temp<RangeCheck>([92]) -> ([102]);
store_temp<fp::types::fp::FixedType>([89]) -> ([103]);
store_temp<fp::types::fp::FixedType>([99]) -> ([104]);
function_call<user@fp::math::core::add>([102], [103], [104]) -> ([100], [101]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([101]) { fallthrough([105]) 961([106]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([105]) -> ([107]);
store_temp<RangeCheck>([100]) -> ([110]);
store_temp<fp::types::fp::FixedType>([85]) -> ([111]);
store_temp<fp::types::fp::FixedType>([107]) -> ([112]);
function_call<user@fp::math::core::div>([110], [111], [112]) -> ([108], [109]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([109]) { fallthrough([113]) 954([114]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([113]) -> ([115]);
struct_construct<Unit>() -> ([116]);
enum_init<core::bool, 1>([116]) -> ([117]);
store_temp<RangeCheck>([108]) -> ([68]);
store_temp<fp::types::fp::FixedType>([115]) -> ([69]);
store_temp<core::bool>([117]) -> ([70]);
struct_construct<Unit>() -> ([118]);
enum_init<core::bool, 1>([118]) -> ([119]);
u128_const<33784601907694228>() -> ([120]);
store_temp<u128>([120]) -> ([122]);
store_temp<core::bool>([119]) -> ([123]);
function_call<user@fp::types::fp::FixedImpl::new>([122], [123]) -> ([121]);
struct_construct<Unit>() -> ([124]);
enum_init<core::bool, 1>([124]) -> ([125]);
u128_const<863077567022907619>() -> ([126]);
store_temp<u128>([126]) -> ([128]);
store_temp<core::bool>([125]) -> ([129]);
function_call<user@fp::types::fp::FixedImpl::new>([128], [129]) -> ([127]);
struct_construct<Unit>() -> ([130]);
enum_init<core::bool, 0>([130]) -> ([131]);
u128_const<3582351446937658863>() -> ([132]);
store_temp<u128>([132]) -> ([134]);
store_temp<core::bool>([131]) -> ([135]);
function_call<user@fp::types::fp::FixedImpl::new>([134], [135]) -> ([133]);
struct_construct<Unit>() -> ([136]);
enum_init<core::bool, 1>([136]) -> ([137]);
u128_const<4833057334070945981>() -> ([138]);
store_temp<u128>([138]) -> ([140]);
store_temp<core::bool>([137]) -> ([141]);
function_call<user@fp::types::fp::FixedImpl::new>([140], [141]) -> ([139]);
struct_construct<Unit>() -> ([142]);
enum_init<core::bool, 0>([142]) -> ([143]);
u128_const<806366139934153963>() -> ([144]);
store_temp<u128>([144]) -> ([146]);
store_temp<core::bool>([143]) -> ([147]);
function_call<user@fp::types::fp::FixedImpl::new>([146], [147]) -> ([145]);
struct_construct<Unit>() -> ([148]);
enum_init<core::bool, 0>([148]) -> ([149]);
u128_const<3505955710573417812>() -> ([150]);
store_temp<u128>([150]) -> ([152]);
store_temp<core::bool>([149]) -> ([153]);
function_call<user@fp::types::fp::FixedImpl::new>([152], [153]) -> ([151]);
struct_construct<Unit>() -> ([154]);
enum_init<core::bool, 0>([154]) -> ([155]);
u128_const<25330242983263508>() -> ([156]);
store_temp<u128>([156]) -> ([158]);
store_temp<core::bool>([155]) -> ([159]);
function_call<user@fp::types::fp::FixedImpl::new>([158], [159]) -> ([157]);
struct_construct<Unit>() -> ([160]);
enum_init<core::bool, 1>([160]) -> ([161]);
u128_const<6150896368532115927>() -> ([162]);
store_temp<u128>([162]) -> ([164]);
store_temp<core::bool>([161]) -> ([165]);
function_call<user@fp::types::fp::FixedImpl::new>([164], [165]) -> ([163]);
struct_construct<Unit>() -> ([166]);
enum_init<core::bool, 0>([166]) -> ([167]);
u128_const<75835542453775>() -> ([168]);
store_temp<u128>([168]) -> ([170]);
store_temp<core::bool>([167]) -> ([171]);
function_call<user@fp::types::fp::FixedImpl::new>([170], [171]) -> ([169]);
struct_construct<Unit>() -> ([172]);
enum_init<core::bool, 0>([172]) -> ([173]);
u128_const<18446743057812048409>() -> ([174]);
store_temp<u128>([174]) -> ([176]);
store_temp<core::bool>([173]) -> ([177]);
function_call<user@fp::types::fp::FixedImpl::new>([176], [177]) -> ([175]);
store_temp<RangeCheck>([68]) -> ([180]);
store_temp<fp::types::fp::FixedType>([121]) -> ([181]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [182]);
store_temp<fp::types::fp::FixedType>([182]) -> ([182]);
function_call<user@fp::math::core::mul>([180], [181], [182]) -> ([178], [179]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([179]) { fallthrough([183]) 936([184]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([183]) -> ([185]);
store_temp<RangeCheck>([178]) -> ([188]);
store_temp<fp::types::fp::FixedType>([185]) -> ([189]);
store_temp<fp::types::fp::FixedType>([127]) -> ([190]);
function_call<user@fp::math::core::add>([188], [189], [190]) -> ([186], [187]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([187]) { fallthrough([191]) 919([192]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([191]) -> ([193]);
store_temp<RangeCheck>([186]) -> ([196]);
store_temp<fp::types::fp::FixedType>([193]) -> ([197]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [198]);
store_temp<fp::types::fp::FixedType>([198]) -> ([198]);
function_call<user@fp::math::core::mul>([196], [197], [198]) -> ([194], [195]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([195]) { fallthrough([199]) 902([200]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([199]) -> ([201]);
store_temp<RangeCheck>([194]) -> ([204]);
store_temp<fp::types::fp::FixedType>([201]) -> ([205]);
store_temp<fp::types::fp::FixedType>([133]) -> ([206]);
function_call<user@fp::math::core::add>([204], [205], [206]) -> ([202], [203]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([203]) { fallthrough([207]) 886([208]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([207]) -> ([209]);
store_temp<RangeCheck>([202]) -> ([212]);
store_temp<fp::types::fp::FixedType>([209]) -> ([213]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [214]);
store_temp<fp::types::fp::FixedType>([214]) -> ([214]);
function_call<user@fp::math::core::mul>([212], [213], [214]) -> ([210], [211]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([211]) { fallthrough([215]) 870([216]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([215]) -> ([217]);
store_temp<RangeCheck>([210]) -> ([220]);
store_temp<fp::types::fp::FixedType>([217]) -> ([221]);
store_temp<fp::types::fp::FixedType>([139]) -> ([222]);
function_call<user@fp::math::core::add>([220], [221], [222]) -> ([218], [219]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([219]) { fallthrough([223]) 855([224]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([223]) -> ([225]);
store_temp<RangeCheck>([218]) -> ([228]);
store_temp<fp::types::fp::FixedType>([225]) -> ([229]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [230]);
store_temp<fp::types::fp::FixedType>([230]) -> ([230]);
function_call<user@fp::math::core::mul>([228], [229], [230]) -> ([226], [227]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([227]) { fallthrough([231]) 840([232]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([231]) -> ([233]);
store_temp<RangeCheck>([226]) -> ([236]);
store_temp<fp::types::fp::FixedType>([233]) -> ([237]);
store_temp<fp::types::fp::FixedType>([145]) -> ([238]);
function_call<user@fp::math::core::add>([236], [237], [238]) -> ([234], [235]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([235]) { fallthrough([239]) 826([240]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([239]) -> ([241]);
store_temp<RangeCheck>([234]) -> ([244]);
store_temp<fp::types::fp::FixedType>([241]) -> ([245]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [246]);
store_temp<fp::types::fp::FixedType>([246]) -> ([246]);
function_call<user@fp::math::core::mul>([244], [245], [246]) -> ([242], [243]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([243]) { fallthrough([247]) 812([248]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([247]) -> ([249]);
store_temp<RangeCheck>([242]) -> ([252]);
store_temp<fp::types::fp::FixedType>([249]) -> ([253]);
store_temp<fp::types::fp::FixedType>([151]) -> ([254]);
function_call<user@fp::math::core::add>([252], [253], [254]) -> ([250], [251]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([251]) { fallthrough([255]) 799([256]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([255]) -> ([257]);
store_temp<RangeCheck>([250]) -> ([260]);
store_temp<fp::types::fp::FixedType>([257]) -> ([261]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [262]);
store_temp<fp::types::fp::FixedType>([262]) -> ([262]);
function_call<user@fp::math::core::mul>([260], [261], [262]) -> ([258], [259]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([259]) { fallthrough([263]) 786([264]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([263]) -> ([265]);
store_temp<RangeCheck>([258]) -> ([268]);
store_temp<fp::types::fp::FixedType>([265]) -> ([269]);
store_temp<fp::types::fp::FixedType>([157]) -> ([270]);
function_call<user@fp::math::core::add>([268], [269], [270]) -> ([266], [267]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([267]) { fallthrough([271]) 774([272]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([271]) -> ([273]);
store_temp<RangeCheck>([266]) -> ([276]);
store_temp<fp::types::fp::FixedType>([273]) -> ([277]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [278]);
store_temp<fp::types::fp::FixedType>([278]) -> ([278]);
function_call<user@fp::math::core::mul>([276], [277], [278]) -> ([274], [275]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([275]) { fallthrough([279]) 762([280]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([279]) -> ([281]);
store_temp<RangeCheck>([274]) -> ([284]);
store_temp<fp::types::fp::FixedType>([281]) -> ([285]);
store_temp<fp::types::fp::FixedType>([163]) -> ([286]);
function_call<user@fp::math::core::add>([284], [285], [286]) -> ([282], [283]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([283]) { fallthrough([287]) 751([288]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([287]) -> ([289]);
store_temp<RangeCheck>([282]) -> ([292]);
store_temp<fp::types::fp::FixedType>([289]) -> ([293]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [294]);
store_temp<fp::types::fp::FixedType>([294]) -> ([294]);
function_call<user@fp::math::core::mul>([292], [293], [294]) -> ([290], [291]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([291]) { fallthrough([295]) 740([296]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([295]) -> ([297]);
store_temp<RangeCheck>([290]) -> ([300]);
store_temp<fp::types::fp::FixedType>([297]) -> ([301]);
store_temp<fp::types::fp::FixedType>([169]) -> ([302]);
function_call<user@fp::math::core::add>([300], [301], [302]) -> ([298], [299]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([299]) { fallthrough([303]) 730([304]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([303]) -> ([305]);
store_temp<RangeCheck>([298]) -> ([308]);
store_temp<fp::types::fp::FixedType>([305]) -> ([309]);
dup<fp::types::fp::FixedType>([69]) -> ([69], [310]);
store_temp<fp::types::fp::FixedType>([310]) -> ([310]);
function_call<user@fp::math::core::mul>([308], [309], [310]) -> ([306], [307]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([307]) { fallthrough([311]) 720([312]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([311]) -> ([313]);
store_temp<RangeCheck>([306]) -> ([316]);
store_temp<fp::types::fp::FixedType>([313]) -> ([317]);
store_temp<fp::types::fp::FixedType>([175]) -> ([318]);
function_call<user@fp::math::core::add>([316], [317], [318]) -> ([314], [315]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([315]) { fallthrough([319]) 711([320]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([319]) -> ([321]);
store_temp<RangeCheck>([314]) -> ([324]);
store_temp<fp::types::fp::FixedType>([321]) -> ([325]);
store_temp<fp::types::fp::FixedType>([69]) -> ([326]);
function_call<user@fp::math::core::mul>([324], [325], [326]) -> ([322], [323]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([323]) { fallthrough([327]) 703([328]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([327]) -> ([329]);
enum_match<core::bool>([70]) { fallthrough([330]) 638([331]) };
branch_align() -> ();
drop<Unit>([330]) -> ();
store_temp<RangeCheck>([322]) -> ([332]);
store_temp<fp::types::fp::FixedType>([329]) -> ([333]);
jump() { 655() };
branch_align() -> ();
drop<Unit>([331]) -> ();
struct_construct<Unit>() -> ([334]);
enum_init<core::bool, 0>([334]) -> ([335]);
u128_const<9658692610769497123>() -> ([336]);
store_temp<u128>([336]) -> ([338]);
store_temp<core::bool>([335]) -> ([339]);
function_call<user@fp::types::fp::FixedImpl::new>([338], [339]) -> ([337]);
store_temp<RangeCheck>([322]) -> ([342]);
store_temp<fp::types::fp::FixedType>([329]) -> ([343]);
store_temp<fp::types::fp::FixedType>([337]) -> ([344]);
function_call<user@fp::math::core::add>([342], [343], [344]) -> ([340], [341]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([341]) { fallthrough([345]) 696([346]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([345]) -> ([347]);
store_temp<RangeCheck>([340]) -> ([332]);
store_temp<fp::types::fp::FixedType>([347]) -> ([333]);
enum_match<core::bool>([30]) { fallthrough([348]) 661([349]) };
branch_align() -> ();
drop<Unit>([348]) -> ();
store_temp<RangeCheck>([332]) -> ([350]);
store_temp<fp::types::fp::FixedType>([333]) -> ([351]);
jump() { 678() };
branch_align() -> ();
drop<Unit>([349]) -> ();
struct_construct<Unit>() -> ([352]);
enum_init<core::bool, 0>([352]) -> ([353]);
u128_const<28976077832308491370>() -> ([354]);
store_temp<u128>([354]) -> ([356]);
store_temp<core::bool>([353]) -> ([357]);
function_call<user@fp::types::fp::FixedImpl::new>([356], [357]) -> ([355]);
store_temp<RangeCheck>([332]) -> ([360]);
store_temp<fp::types::fp::FixedType>([333]) -> ([361]);
store_temp<fp::types::fp::FixedType>([355]) -> ([362]);
function_call<user@fp::math::core::sub>([360], [361], [362]) -> ([358], [359]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([359]) { fallthrough([363]) 690([364]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([363]) -> ([365]);
store_temp<RangeCheck>([358]) -> ([350]);
store_temp<fp::types::fp::FixedType>([365]) -> ([351]);
struct_deconstruct<fp::types::fp::FixedType>([351]) -> ([366], [367]);
drop<core::bool>([367]) -> ();
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([368], [369]);
drop<u128>([368]) -> ();
store_temp<u128>([366]) -> ([371]);
store_temp<core::bool>([369]) -> ([372]);
function_call<user@fp::types::fp::FixedImpl::new>([371], [372]) -> ([370]);
struct_construct<Tuple<fp::types::fp::FixedType>>([370]) -> ([373]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([373]) -> ([374]);
store_temp<RangeCheck>([350]) -> ([375]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([374]) -> ([376]);
return([375], [376]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([364]) -> ([377]);
store_temp<RangeCheck>([358]) -> ([378]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([377]) -> ([379]);
return([378], [379]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([346]) -> ([380]);
store_temp<RangeCheck>([340]) -> ([381]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([380]) -> ([382]);
return([381], [382]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([328]) -> ([383]);
store_temp<RangeCheck>([322]) -> ([384]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([383]) -> ([385]);
return([384], [385]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([320]) -> ([386]);
store_temp<RangeCheck>([314]) -> ([387]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([386]) -> ([388]);
return([387], [388]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([312]) -> ([389]);
store_temp<RangeCheck>([306]) -> ([390]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([389]) -> ([391]);
return([390], [391]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([304]) -> ([392]);
store_temp<RangeCheck>([298]) -> ([393]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([392]) -> ([394]);
return([393], [394]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([296]) -> ([395]);
store_temp<RangeCheck>([290]) -> ([396]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([395]) -> ([397]);
return([396], [397]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([288]) -> ([398]);
store_temp<RangeCheck>([282]) -> ([399]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([398]) -> ([400]);
return([399], [400]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([280]) -> ([401]);
store_temp<RangeCheck>([274]) -> ([402]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([401]) -> ([403]);
return([402], [403]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([272]) -> ([404]);
store_temp<RangeCheck>([266]) -> ([405]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([404]) -> ([406]);
return([405], [406]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([264]) -> ([407]);
store_temp<RangeCheck>([258]) -> ([408]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([407]) -> ([409]);
return([408], [409]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([256]) -> ([410]);
store_temp<RangeCheck>([250]) -> ([411]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([410]) -> ([412]);
return([411], [412]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([248]) -> ([413]);
store_temp<RangeCheck>([242]) -> ([414]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([413]) -> ([415]);
return([414], [415]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([240]) -> ([416]);
store_temp<RangeCheck>([234]) -> ([417]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([416]) -> ([418]);
return([417], [418]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([232]) -> ([419]);
store_temp<RangeCheck>([226]) -> ([420]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([419]) -> ([421]);
return([420], [421]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([224]) -> ([422]);
store_temp<RangeCheck>([218]) -> ([423]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([422]) -> ([424]);
return([423], [424]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
drop<fp::types::fp::FixedType>([139]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([216]) -> ([425]);
store_temp<RangeCheck>([210]) -> ([426]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([425]) -> ([427]);
return([426], [427]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
drop<fp::types::fp::FixedType>([139]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([208]) -> ([428]);
store_temp<RangeCheck>([202]) -> ([429]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([428]) -> ([430]);
return([429], [430]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
drop<fp::types::fp::FixedType>([139]) -> ();
drop<fp::types::fp::FixedType>([133]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([200]) -> ([431]);
store_temp<RangeCheck>([194]) -> ([432]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([431]) -> ([433]);
return([432], [433]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
drop<fp::types::fp::FixedType>([139]) -> ();
drop<fp::types::fp::FixedType>([133]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([192]) -> ([434]);
store_temp<RangeCheck>([186]) -> ([435]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([434]) -> ([436]);
return([435], [436]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([70]) -> ();
drop<fp::types::fp::FixedType>([69]) -> ();
drop<fp::types::fp::FixedType>([175]) -> ();
drop<fp::types::fp::FixedType>([169]) -> ();
drop<fp::types::fp::FixedType>([163]) -> ();
drop<fp::types::fp::FixedType>([157]) -> ();
drop<fp::types::fp::FixedType>([151]) -> ();
drop<fp::types::fp::FixedType>([145]) -> ();
drop<fp::types::fp::FixedType>([139]) -> ();
drop<fp::types::fp::FixedType>([133]) -> ();
drop<fp::types::fp::FixedType>([127]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([184]) -> ([437]);
store_temp<RangeCheck>([178]) -> ([438]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([437]) -> ([439]);
return([438], [439]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([114]) -> ([440]);
store_temp<RangeCheck>([108]) -> ([441]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([440]) -> ([442]);
return([441], [442]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<fp::types::fp::FixedType>([85]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([106]) -> ([443]);
store_temp<RangeCheck>([100]) -> ([444]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([443]) -> ([445]);
return([444], [445]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<fp::types::fp::FixedType>([85]) -> ();
drop<fp::types::fp::FixedType>([89]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([98]) -> ([446]);
store_temp<RangeCheck>([92]) -> ([447]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([446]) -> ([448]);
return([447], [448]);
branch_align() -> ();
drop<core::bool>([30]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<fp::types::fp::FixedType>([77]) -> ();
drop<fp::types::fp::FixedType>([74]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([84]) -> ([449]);
store_temp<RangeCheck>([78]) -> ([450]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([449]) -> ([451]);
return([450], [451]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<core::bool>([5]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([44]) -> ([452]);
store_temp<RangeCheck>([38]) -> ([453]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([452]) -> ([454]);
return([453], [454]);
store_temp<fp::types::fp::FixedType>([1]) -> ([4]);
function_call<user@fp::types::fp::FixedInto::into>([4]) -> ([3]);
store_temp<fp::types::fp::FixedType>([2]) -> ([6]);
function_call<user@fp::types::fp::FixedInto::into>([6]) -> ([5]);
felt252_add([3], [5]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<felt252>([7]) -> ([11]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([10], [11]) -> ([8], [9]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([9]) { fallthrough([12]) 1010([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([12]) -> ([14]);
struct_construct<Tuple<fp::types::fp::FixedType>>([14]) -> ([15]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([15]) -> ([16]);
store_temp<RangeCheck>([8]) -> ([17]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([16]) -> ([18]);
return([17], [18]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([13]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([19]) -> ([21]);
return([20], [21]);
struct_deconstruct<fp::types::fp::FixedType>([0]) -> ([1], [2]);
drop<core::bool>([2]) -> ();
struct_construct<Unit>() -> ([3]);
enum_init<core::bool, 0>([3]) -> ([4]);
store_temp<u128>([1]) -> ([6]);
store_temp<core::bool>([4]) -> ([7]);
function_call<user@fp::types::fp::FixedImpl::new>([6], [7]) -> ([5]);
rename<fp::types::fp::FixedType>([5]) -> ([8]);
return([8]);
store_temp<RangeCheck>([0]) -> ([4]);
dup<fp::types::fp::FixedType>([1]) -> ([1], [5]);
store_temp<fp::types::fp::FixedType>([5]) -> ([5]);
function_call<user@fp::math::core::_split_unsigned>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([3]) { fallthrough([6]) 1105([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<Tuple<u128, u128>>>([6]) -> ([8]);
struct_deconstruct<Tuple<u128, u128>>([8]) -> ([9], [10]);
u128_const<0>() -> ([11]);
u128_eq([10], [11]) { fallthrough() 1098() };
branch_align() -> ();
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([12], [13]);
drop<u128>([12]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([15]);
bool_eq([13], [15]) { fallthrough() 1065() };
branch_align() -> ();
u128_to_felt252([9]) -> ([16]);
felt252_const<-1>() -> ([17]);
felt252_const<1>() -> ([18]);
store_temp<felt252>([18]) -> ([18]);
felt252_mul([18], [17]) -> ([19]);
store_temp<felt252>([19]) -> ([19]);
felt252_mul([16], [19]) -> ([20]);
store_temp<RangeCheck>([2]) -> ([23]);
store_temp<felt252>([20]) -> ([24]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([23], [24]) -> ([21], [22]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([22]) { fallthrough([25]) 1060([26]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([25]) -> ([27]);
struct_construct<Tuple<fp::types::fp::FixedType>>([27]) -> ([28]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([28]) -> ([29]);
store_temp<RangeCheck>([21]) -> ([30]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([29]) -> ([31]);
return([30], [31]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([26]) -> ([32]);
store_temp<RangeCheck>([21]) -> ([33]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([32]) -> ([34]);
return([33], [34]);
branch_align() -> ();
u128_const<1>() -> ([35]);
store_temp<RangeCheck>([2]) -> ([38]);
store_temp<u128>([9]) -> ([39]);
store_temp<u128>([35]) -> ([40]);
function_call<user@core::integer::U128Add::add>([38], [39], [40]) -> ([36], [37]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([37]) { fallthrough([41]) 1093([42]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([41]) -> ([43]);
struct_construct<Unit>() -> ([44]);
enum_init<core::bool, 0>([44]) -> ([45]);
store_temp<RangeCheck>([36]) -> ([48]);
store_temp<u128>([43]) -> ([49]);
store_temp<core::bool>([45]) -> ([50]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([48], [49], [50]) -> ([46], [47]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([47]) { fallthrough([51]) 1088([52]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([51]) -> ([53]);
struct_construct<Tuple<fp::types::fp::FixedType>>([53]) -> ([54]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([54]) -> ([55]);
store_temp<RangeCheck>([46]) -> ([56]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([55]) -> ([57]);
return([56], [57]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([52]) -> ([58]);
store_temp<RangeCheck>([46]) -> ([59]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([58]) -> ([60]);
return([59], [60]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([42]) -> ([61]);
store_temp<RangeCheck>([36]) -> ([62]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([61]) -> ([63]);
return([62], [63]);
branch_align() -> ();
drop<u128>([9]) -> ();
struct_construct<Tuple<fp::types::fp::FixedType>>([1]) -> ([64]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([64]) -> ([65]);
store_temp<RangeCheck>([2]) -> ([66]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([65]) -> ([67]);
return([66], [67]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([7]) -> ([68]);
store_temp<RangeCheck>([2]) -> ([69]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([68]) -> ([70]);
return([69], [70]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([3], [4]);
struct_deconstruct<fp::types::fp::FixedType>([2]) -> ([5], [6]);
bool_xor_impl([4], [6]) -> ([7]);
u128_const<18446744073709551616>() -> ([8]);
store_temp<u128>([8]) -> ([8]);
u128_guarantee_mul([3], [8]) -> ([9], [10], [11]);
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<U128MulGuarantee>([11]) -> ([15]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([14], [15]) -> ([12], [13]);
drop<Unit>([13]) -> ();
struct_construct<Tuple<u128, u128>>([9], [10]) -> ([16]);
struct_deconstruct<Tuple<u128, u128>>([16]) -> ([17], [18]);
struct_construct<core::integer::u256>([18], [17]) -> ([19]);
u128_const<0>() -> ([20]);
struct_construct<core::integer::u256>([5], [20]) -> ([21]);
store_temp<RangeCheck>([12]) -> ([24]);
store_temp<core::integer::u256>([19]) -> ([25]);
store_temp<core::integer::u256>([21]) -> ([26]);
function_call<user@core::integer::U256Div::div>([24], [25], [26]) -> ([22], [23]);
store_temp<core::bool>([7]) -> ([7]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([23]) { fallthrough([27]) 1168([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([27]) -> ([29]);
struct_deconstruct<core::integer::u256>([29]) -> ([30], [31]);
u128_const<0>() -> ([32]);
u128_eq([31], [32]) { fallthrough() 1142() };
branch_align() -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<core::bool>([34]) -> ([35]);
jump() { 1146() };
branch_align() -> ();
struct_construct<Unit>() -> ([36]);
enum_init<core::bool, 1>([36]) -> ([37]);
store_temp<core::bool>([37]) -> ([35]);
felt252_const<593979512822486839219413268164276087>() -> ([38]);
rename<core::bool>([35]) -> ([40]);
store_temp<felt252>([38]) -> ([41]);
function_call<user@core::assert>([40], [41]) -> ([39]);
enum_match<core::PanicResult::<((),)>>([39]) { fallthrough([42]) 1161([43]) };
branch_align() -> ();
drop<Tuple<Unit>>([42]) -> ();
store_temp<u128>([30]) -> ([45]);
store_temp<core::bool>([7]) -> ([46]);
function_call<user@fp::types::fp::FixedImpl::new>([45], [46]) -> ([44]);
struct_construct<Tuple<fp::types::fp::FixedType>>([44]) -> ([47]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([47]) -> ([48]);
store_temp<RangeCheck>([22]) -> ([49]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([48]) -> ([50]);
return([49], [50]);
branch_align() -> ();
drop<core::bool>([7]) -> ();
drop<u128>([30]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([43]) -> ([51]);
store_temp<RangeCheck>([22]) -> ([52]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([51]) -> ([53]);
return([52], [53]);
branch_align() -> ();
drop<core::bool>([7]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([28]) -> ([54]);
store_temp<RangeCheck>([22]) -> ([55]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([54]) -> ([56]);
return([55], [56]);
store_temp<RangeCheck>([0]) -> ([4]);
dup<fp::types::fp::FixedType>([1]) -> ([1], [5]);
store_temp<fp::types::fp::FixedType>([5]) -> ([5]);
function_call<user@fp::math::core::_split_unsigned>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([3]) { fallthrough([6]) 1245([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<Tuple<u128, u128>>>([6]) -> ([8]);
struct_deconstruct<Tuple<u128, u128>>([8]) -> ([9], [10]);
u128_const<0>() -> ([11]);
u128_eq([10], [11]) { fallthrough() 1238() };
branch_align() -> ();
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([12], [13]);
drop<u128>([12]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([15]);
bool_eq([13], [15]) { fallthrough() 1218() };
branch_align() -> ();
u128_to_felt252([9]) -> ([16]);
felt252_const<1>() -> ([17]);
store_temp<felt252>([17]) -> ([17]);
felt252_mul([17], [16]) -> ([18]);
felt252_const<-1>() -> ([19]);
store_temp<felt252>([18]) -> ([18]);
felt252_mul([18], [19]) -> ([20]);
felt252_const<1>() -> ([21]);
store_temp<felt252>([20]) -> ([20]);
felt252_sub([20], [21]) -> ([22]);
store_temp<RangeCheck>([2]) -> ([25]);
store_temp<felt252>([22]) -> ([26]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([25], [26]) -> ([23], [24]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([24]) { fallthrough([27]) 1213([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([27]) -> ([29]);
struct_construct<Tuple<fp::types::fp::FixedType>>([29]) -> ([30]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([23]) -> ([32]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([31]) -> ([33]);
return([32], [33]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([28]) -> ([34]);
store_temp<RangeCheck>([23]) -> ([35]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([34]) -> ([36]);
return([35], [36]);
branch_align() -> ();
struct_construct<Unit>() -> ([37]);
enum_init<core::bool, 0>([37]) -> ([38]);
store_temp<RangeCheck>([2]) -> ([41]);
store_temp<u128>([9]) -> ([42]);
store_temp<core::bool>([38]) -> ([43]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([41], [42], [43]) -> ([39], [40]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([40]) { fallthrough([44]) 1233([45]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([44]) -> ([46]);
struct_construct<Tuple<fp::types::fp::FixedType>>([46]) -> ([47]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([47]) -> ([48]);
store_temp<RangeCheck>([39]) -> ([49]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([48]) -> ([50]);
return([49], [50]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([45]) -> ([51]);
store_temp<RangeCheck>([39]) -> ([52]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([51]) -> ([53]);
return([52], [53]);
branch_align() -> ();
drop<u128>([9]) -> ();
struct_construct<Tuple<fp::types::fp::FixedType>>([1]) -> ([54]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([54]) -> ([55]);
store_temp<RangeCheck>([2]) -> ([56]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([55]) -> ([57]);
return([56], [57]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([7]) -> ([58]);
store_temp<RangeCheck>([2]) -> ([59]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([58]) -> ([60]);
return([59], [60]);
struct_deconstruct<fp::types::fp::FixedType>([0]) -> ([2], [3]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([4], [5]);
u128_eq([2], [4]) { fallthrough() 1259() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 1263() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
bool_eq([3], [5]) { fallthrough() 1269() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 1273() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
bool_and_impl([8], [13]) -> ([16]);
store_temp<core::bool>([16]) -> ([17]);
return([17]);
disable_ap_tracking() -> ();
struct_construct<Unit>() -> ([3]);
enum_init<core::bool, 0>([3]) -> ([4]);
u128_const<26613026195688644984>() -> ([5]);
store_temp<u128>([5]) -> ([7]);
store_temp<core::bool>([4]) -> ([8]);
function_call<user@fp::types::fp::FixedImpl::new>([7], [8]) -> ([6]);
store_temp<RangeCheck>([0]) -> ([11]);
store_temp<fp::types::fp::FixedType>([6]) -> ([12]);
store_temp<fp::types::fp::FixedType>([2]) -> ([13]);
function_call<user@fp::math::core::mul>([11], [12], [13]) -> ([9], [10]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([10]) { fallthrough([14]) 1309([15]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([14]) -> ([16]);
store_temp<RangeCheck>([9]) -> ([20]);
store_temp<GasBuiltin>([1]) -> ([21]);
store_temp<fp::types::fp::FixedType>([16]) -> ([22]);
function_call<user@fp::math::core::exp2>([20], [21], [22]) -> ([17], [18], [19]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([19]) { fallthrough([23]) 1303([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([23]) -> ([25]);
struct_construct<Tuple<fp::types::fp::FixedType>>([25]) -> ([26]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([26]) -> ([27]);
store_temp<RangeCheck>([17]) -> ([28]);
store_temp<GasBuiltin>([18]) -> ([29]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([27]) -> ([30]);
return([28], [29], [30]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([24]) -> ([31]);
store_temp<RangeCheck>([17]) -> ([32]);
store_temp<GasBuiltin>([18]) -> ([33]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([31]) -> ([34]);
return([32], [33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([15]) -> ([35]);
store_temp<RangeCheck>([9]) -> ([36]);
store_temp<GasBuiltin>([1]) -> ([37]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([35]) -> ([38]);
return([36], [37], [38]);
alloc_local<fp::types::fp::FixedType>() -> ([4]);
alloc_local<u128>() -> ([6]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
struct_deconstruct<fp::types::fp::FixedType>([2]) -> ([7], [8]);
u128_const<0>() -> ([9]);
dup<u128>([7]) -> ([7], [10]);
u128_eq([10], [9]) { fallthrough() 1803() };
branch_align() -> ();
struct_construct<fp::types::fp::FixedType>([7], [8]) -> ([3]);
store_temp<RangeCheck>([0]) -> ([13]);
store_local<fp::types::fp::FixedType>([4], [3]) -> ([3]);
dup<fp::types::fp::FixedType>([3]) -> ([3], [14]);
store_temp<fp::types::fp::FixedType>([14]) -> ([14]);
function_call<user@fp::math::core::_split_unsigned>([13], [14]) -> ([11], [12]);
enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([12]) { fallthrough([15]) 1795([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<Tuple<u128, u128>>>([15]) -> ([17]);
struct_deconstruct<Tuple<u128, u128>>([17]) -> ([18], [5]);
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 0>([19]) -> ([20]);
u128_const<2>() -> ([21]);
store_temp<RangeCheck>([11]) -> ([24]);
store_temp<u128>([21]) -> ([25]);
store_temp<core::bool>([20]) -> ([26]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([24], [25], [26]) -> ([22], [23]);
store_local<u128>([6], [5]) -> ([5]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([23]) { fallthrough([27]) 1786([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([27]) -> ([29]);
struct_construct<Unit>() -> ([30]);
enum_init<core::bool, 0>([30]) -> ([31]);
store_temp<RangeCheck>([22]) -> ([35]);
store_temp<GasBuiltin>([1]) -> ([36]);
store_temp<fp::types::fp::FixedType>([29]) -> ([37]);
store_temp<u128>([18]) -> ([38]);
store_temp<core::bool>([31]) -> ([39]);
function_call<user@fp::math::core::_pow_int>([35], [36], [37], [38], [39]) -> ([32], [33], [34]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([34]) { fallthrough([40]) 1778([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([40]) -> ([42]);
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
u128_const<41691949755436>() -> ([45]);
store_temp<u128>([45]) -> ([47]);
store_temp<core::bool>([44]) -> ([48]);
function_call<user@fp::types::fp::FixedImpl::new>([47], [48]) -> ([46]);
struct_construct<Unit>() -> ([49]);
enum_init<core::bool, 0>([49]) -> ([50]);
u128_const<231817862090993>() -> ([51]);
store_temp<u128>([51]) -> ([53]);
store_temp<core::bool>([50]) -> ([54]);
function_call<user@fp::types::fp::FixedImpl::new>([53], [54]) -> ([52]);
struct_construct<Unit>() -> ([55]);
enum_init<core::bool, 0>([55]) -> ([56]);
u128_const<2911875592466782>() -> ([57]);
store_temp<u128>([57]) -> ([59]);
store_temp<core::bool>([56]) -> ([60]);
function_call<user@fp::types::fp::FixedImpl::new>([59], [60]) -> ([58]);
struct_construct<Unit>() -> ([61]);
enum_init<core::bool, 0>([61]) -> ([62]);
u128_const<24539637786416367>() -> ([63]);
store_temp<u128>([63]) -> ([65]);
store_temp<core::bool>([62]) -> ([66]);
function_call<user@fp::types::fp::FixedImpl::new>([65], [66]) -> ([64]);
struct_construct<Unit>() -> ([67]);
enum_init<core::bool, 0>([67]) -> ([68]);
u128_const<177449490038807528>() -> ([69]);
store_temp<u128>([69]) -> ([71]);
store_temp<core::bool>([68]) -> ([72]);
function_call<user@fp::types::fp::FixedImpl::new>([71], [72]) -> ([70]);
struct_construct<Unit>() -> ([73]);
enum_init<core::bool, 0>([73]) -> ([74]);
u128_const<1023863119786103800>() -> ([75]);
store_temp<u128>([75]) -> ([77]);
store_temp<core::bool>([74]) -> ([78]);
function_call<user@fp::types::fp::FixedImpl::new>([77], [78]) -> ([76]);
struct_construct<Unit>() -> ([79]);
enum_init<core::bool, 0>([79]) -> ([80]);
u128_const<4431397849999009866>() -> ([81]);
store_temp<u128>([81]) -> ([83]);
store_temp<core::bool>([80]) -> ([84]);
function_call<user@fp::types::fp::FixedImpl::new>([83], [84]) -> ([82]);
struct_construct<Unit>() -> ([85]);
enum_init<core::bool, 0>([85]) -> ([86]);
u128_const<12786308590235521577>() -> ([87]);
store_temp<u128>([87]) -> ([89]);
store_temp<core::bool>([86]) -> ([90]);
function_call<user@fp::types::fp::FixedImpl::new>([89], [90]) -> ([88]);
struct_construct<Unit>() -> ([91]);
enum_init<core::bool, 0>([91]) -> ([92]);
store_temp<u128>([5]) -> ([94]);
store_temp<core::bool>([92]) -> ([95]);
function_call<user@fp::types::fp::FixedImpl::new>([94], [95]) -> ([93]);
store_temp<RangeCheck>([32]) -> ([98]);
store_temp<fp::types::fp::FixedType>([46]) -> ([99]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [100]);
store_temp<fp::types::fp::FixedType>([100]) -> ([100]);
function_call<user@fp::math::core::mul>([98], [99], [100]) -> ([96], [97]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([97]) { fallthrough([101]) 1762([102]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([101]) -> ([103]);
store_temp<RangeCheck>([96]) -> ([106]);
store_temp<fp::types::fp::FixedType>([103]) -> ([107]);
store_temp<fp::types::fp::FixedType>([52]) -> ([108]);
function_call<user@fp::math::core::add>([106], [107], [108]) -> ([104], [105]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([105]) { fallthrough([109]) 1747([110]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([109]) -> ([111]);
store_temp<RangeCheck>([104]) -> ([114]);
store_temp<fp::types::fp::FixedType>([111]) -> ([115]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [116]);
store_temp<fp::types::fp::FixedType>([116]) -> ([116]);
function_call<user@fp::math::core::mul>([114], [115], [116]) -> ([112], [113]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([113]) { fallthrough([117]) 1732([118]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([117]) -> ([119]);
store_temp<RangeCheck>([112]) -> ([122]);
store_temp<fp::types::fp::FixedType>([119]) -> ([123]);
store_temp<fp::types::fp::FixedType>([58]) -> ([124]);
function_call<user@fp::math::core::add>([122], [123], [124]) -> ([120], [121]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([121]) { fallthrough([125]) 1718([126]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([125]) -> ([127]);
store_temp<RangeCheck>([120]) -> ([130]);
store_temp<fp::types::fp::FixedType>([127]) -> ([131]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [132]);
store_temp<fp::types::fp::FixedType>([132]) -> ([132]);
function_call<user@fp::math::core::mul>([130], [131], [132]) -> ([128], [129]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([129]) { fallthrough([133]) 1704([134]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([133]) -> ([135]);
store_temp<RangeCheck>([128]) -> ([138]);
store_temp<fp::types::fp::FixedType>([135]) -> ([139]);
store_temp<fp::types::fp::FixedType>([64]) -> ([140]);
function_call<user@fp::math::core::add>([138], [139], [140]) -> ([136], [137]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([137]) { fallthrough([141]) 1691([142]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([141]) -> ([143]);
store_temp<RangeCheck>([136]) -> ([146]);
store_temp<fp::types::fp::FixedType>([143]) -> ([147]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [148]);
store_temp<fp::types::fp::FixedType>([148]) -> ([148]);
function_call<user@fp::math::core::mul>([146], [147], [148]) -> ([144], [145]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([145]) { fallthrough([149]) 1678([150]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([149]) -> ([151]);
store_temp<RangeCheck>([144]) -> ([154]);
store_temp<fp::types::fp::FixedType>([151]) -> ([155]);
store_temp<fp::types::fp::FixedType>([70]) -> ([156]);
function_call<user@fp::math::core::add>([154], [155], [156]) -> ([152], [153]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([153]) { fallthrough([157]) 1666([158]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([157]) -> ([159]);
store_temp<RangeCheck>([152]) -> ([162]);
store_temp<fp::types::fp::FixedType>([159]) -> ([163]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [164]);
store_temp<fp::types::fp::FixedType>([164]) -> ([164]);
function_call<user@fp::math::core::mul>([162], [163], [164]) -> ([160], [161]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([161]) { fallthrough([165]) 1654([166]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([165]) -> ([167]);
store_temp<RangeCheck>([160]) -> ([170]);
store_temp<fp::types::fp::FixedType>([167]) -> ([171]);
store_temp<fp::types::fp::FixedType>([76]) -> ([172]);
function_call<user@fp::math::core::add>([170], [171], [172]) -> ([168], [169]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([169]) { fallthrough([173]) 1643([174]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([173]) -> ([175]);
store_temp<RangeCheck>([168]) -> ([178]);
store_temp<fp::types::fp::FixedType>([175]) -> ([179]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [180]);
store_temp<fp::types::fp::FixedType>([180]) -> ([180]);
function_call<user@fp::math::core::mul>([178], [179], [180]) -> ([176], [177]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([177]) { fallthrough([181]) 1632([182]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([181]) -> ([183]);
store_temp<RangeCheck>([176]) -> ([186]);
store_temp<fp::types::fp::FixedType>([183]) -> ([187]);
store_temp<fp::types::fp::FixedType>([82]) -> ([188]);
function_call<user@fp::math::core::add>([186], [187], [188]) -> ([184], [185]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([185]) { fallthrough([189]) 1622([190]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([189]) -> ([191]);
store_temp<RangeCheck>([184]) -> ([194]);
store_temp<fp::types::fp::FixedType>([191]) -> ([195]);
dup<fp::types::fp::FixedType>([93]) -> ([93], [196]);
store_temp<fp::types::fp::FixedType>([196]) -> ([196]);
function_call<user@fp::math::core::mul>([194], [195], [196]) -> ([192], [193]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([193]) { fallthrough([197]) 1612([198]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([197]) -> ([199]);
store_temp<RangeCheck>([192]) -> ([202]);
store_temp<fp::types::fp::FixedType>([199]) -> ([203]);
store_temp<fp::types::fp::FixedType>([88]) -> ([204]);
function_call<user@fp::math::core::add>([202], [203], [204]) -> ([200], [201]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([201]) { fallthrough([205]) 1603([206]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([205]) -> ([207]);
store_temp<RangeCheck>([200]) -> ([210]);
store_temp<fp::types::fp::FixedType>([207]) -> ([211]);
store_temp<fp::types::fp::FixedType>([93]) -> ([212]);
function_call<user@fp::math::core::mul>([210], [211], [212]) -> ([208], [209]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([209]) { fallthrough([213]) 1595([214]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([213]) -> ([215]);
struct_construct<Unit>() -> ([216]);
enum_init<core::bool, 0>([216]) -> ([217]);
u128_const<18446744073709551616>() -> ([218]);
store_temp<u128>([218]) -> ([220]);
store_temp<core::bool>([217]) -> ([221]);
function_call<user@fp::types::fp::FixedImpl::new>([220], [221]) -> ([219]);
store_temp<RangeCheck>([208]) -> ([224]);
store_temp<fp::types::fp::FixedType>([215]) -> ([225]);
store_temp<fp::types::fp::FixedType>([219]) -> ([226]);
function_call<user@fp::math::core::add>([224], [225], [226]) -> ([222], [223]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([223]) { fallthrough([227]) 1587([228]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([227]) -> ([229]);
store_temp<RangeCheck>([222]) -> ([232]);
store_temp<fp::types::fp::FixedType>([42]) -> ([233]);
store_temp<fp::types::fp::FixedType>([229]) -> ([234]);
function_call<user@fp::math::core::mul>([232], [233], [234]) -> ([230], [231]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([231]) { fallthrough([235]) 1580([236]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([235]) -> ([237]);
struct_deconstruct<fp::types::fp::FixedType>([3]) -> ([238], [239]);
drop<u128>([238]) -> ();
struct_construct<Unit>() -> ([240]);
enum_init<core::bool, 1>([240]) -> ([241]);
store_temp<core::bool>([241]) -> ([241]);
bool_eq([239], [241]) { fallthrough() 1554() };
branch_align() -> ();
struct_construct<Tuple<fp::types::fp::FixedType>>([237]) -> ([242]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([242]) -> ([243]);
store_temp<RangeCheck>([230]) -> ([244]);
store_temp<GasBuiltin>([33]) -> ([245]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([243]) -> ([246]);
return([244], [245], [246]);
branch_align() -> ();
struct_construct<Unit>() -> ([247]);
enum_init<core::bool, 0>([247]) -> ([248]);
u128_const<18446744073709551616>() -> ([249]);
store_temp<u128>([249]) -> ([251]);
store_temp<core::bool>([248]) -> ([252]);
function_call<user@fp::types::fp::FixedImpl::new>([251], [252]) -> ([250]);
store_temp<RangeCheck>([230]) -> ([255]);
store_temp<fp::types::fp::FixedType>([250]) -> ([256]);
store_temp<fp::types::fp::FixedType>([237]) -> ([257]);
function_call<user@fp::math::core::div>([255], [256], [257]) -> ([253], [254]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([254]) { fallthrough([258]) 1574([259]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([258]) -> ([260]);
struct_construct<Tuple<fp::types::fp::FixedType>>([260]) -> ([261]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([261]) -> ([262]);
store_temp<RangeCheck>([253]) -> ([263]);
store_temp<GasBuiltin>([33]) -> ([264]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([262]) -> ([265]);
return([263], [264], [265]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([259]) -> ([266]);
store_temp<RangeCheck>([253]) -> ([267]);
store_temp<GasBuiltin>([33]) -> ([268]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([266]) -> ([269]);
return([267], [268], [269]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([236]) -> ([270]);
store_temp<RangeCheck>([230]) -> ([271]);
store_temp<GasBuiltin>([33]) -> ([272]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([270]) -> ([273]);
return([271], [272], [273]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([228]) -> ([274]);
store_temp<RangeCheck>([222]) -> ([275]);
store_temp<GasBuiltin>([33]) -> ([276]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([274]) -> ([277]);
return([275], [276], [277]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([214]) -> ([278]);
store_temp<RangeCheck>([208]) -> ([279]);
store_temp<GasBuiltin>([33]) -> ([280]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([278]) -> ([281]);
return([279], [280], [281]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([206]) -> ([282]);
store_temp<RangeCheck>([200]) -> ([283]);
store_temp<GasBuiltin>([33]) -> ([284]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([282]) -> ([285]);
return([283], [284], [285]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([198]) -> ([286]);
store_temp<RangeCheck>([192]) -> ([287]);
store_temp<GasBuiltin>([33]) -> ([288]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([286]) -> ([289]);
return([287], [288], [289]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([190]) -> ([290]);
store_temp<RangeCheck>([184]) -> ([291]);
store_temp<GasBuiltin>([33]) -> ([292]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([290]) -> ([293]);
return([291], [292], [293]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([182]) -> ([294]);
store_temp<RangeCheck>([176]) -> ([295]);
store_temp<GasBuiltin>([33]) -> ([296]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([294]) -> ([297]);
return([295], [296], [297]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([174]) -> ([298]);
store_temp<RangeCheck>([168]) -> ([299]);
store_temp<GasBuiltin>([33]) -> ([300]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([298]) -> ([301]);
return([299], [300], [301]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([166]) -> ([302]);
store_temp<RangeCheck>([160]) -> ([303]);
store_temp<GasBuiltin>([33]) -> ([304]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([302]) -> ([305]);
return([303], [304], [305]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([158]) -> ([306]);
store_temp<RangeCheck>([152]) -> ([307]);
store_temp<GasBuiltin>([33]) -> ([308]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([306]) -> ([309]);
return([307], [308], [309]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([150]) -> ([310]);
store_temp<RangeCheck>([144]) -> ([311]);
store_temp<GasBuiltin>([33]) -> ([312]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([310]) -> ([313]);
return([311], [312], [313]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([142]) -> ([314]);
store_temp<RangeCheck>([136]) -> ([315]);
store_temp<GasBuiltin>([33]) -> ([316]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([314]) -> ([317]);
return([315], [316], [317]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
drop<fp::types::fp::FixedType>([64]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([134]) -> ([318]);
store_temp<RangeCheck>([128]) -> ([319]);
store_temp<GasBuiltin>([33]) -> ([320]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([318]) -> ([321]);
return([319], [320], [321]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
drop<fp::types::fp::FixedType>([64]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([126]) -> ([322]);
store_temp<RangeCheck>([120]) -> ([323]);
store_temp<GasBuiltin>([33]) -> ([324]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([322]) -> ([325]);
return([323], [324], [325]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
drop<fp::types::fp::FixedType>([64]) -> ();
drop<fp::types::fp::FixedType>([58]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([118]) -> ([326]);
store_temp<RangeCheck>([112]) -> ([327]);
store_temp<GasBuiltin>([33]) -> ([328]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([326]) -> ([329]);
return([327], [328], [329]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
drop<fp::types::fp::FixedType>([64]) -> ();
drop<fp::types::fp::FixedType>([58]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([110]) -> ([330]);
store_temp<RangeCheck>([104]) -> ([331]);
store_temp<GasBuiltin>([33]) -> ([332]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([330]) -> ([333]);
return([331], [332], [333]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([42]) -> ();
drop<fp::types::fp::FixedType>([93]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([82]) -> ();
drop<fp::types::fp::FixedType>([76]) -> ();
drop<fp::types::fp::FixedType>([70]) -> ();
drop<fp::types::fp::FixedType>([64]) -> ();
drop<fp::types::fp::FixedType>([58]) -> ();
drop<fp::types::fp::FixedType>([52]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([102]) -> ([334]);
store_temp<RangeCheck>([96]) -> ([335]);
store_temp<GasBuiltin>([33]) -> ([336]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([334]) -> ([337]);
return([335], [336], [337]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<u128>([5]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([41]) -> ([338]);
store_temp<RangeCheck>([32]) -> ([339]);
store_temp<GasBuiltin>([33]) -> ([340]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([338]) -> ([341]);
return([339], [340], [341]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<u128>([5]) -> ();
drop<u128>([18]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([28]) -> ([342]);
store_temp<RangeCheck>([22]) -> ([343]);
store_temp<GasBuiltin>([1]) -> ([344]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([342]) -> ([345]);
return([343], [344], [345]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<Uninitialized<u128>>([6]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([16]) -> ([346]);
store_temp<RangeCheck>([11]) -> ([347]);
store_temp<GasBuiltin>([1]) -> ([348]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([346]) -> ([349]);
return([347], [348], [349]);
branch_align() -> ();
drop<Uninitialized<u128>>([6]) -> ();
drop<Uninitialized<fp::types::fp::FixedType>>([4]) -> ();
drop<core::bool>([8]) -> ();
drop<u128>([7]) -> ();
struct_construct<Unit>() -> ([350]);
enum_init<core::bool, 0>([350]) -> ([351]);
u128_const<18446744073709551616>() -> ([352]);
store_temp<u128>([352]) -> ([354]);
store_temp<core::bool>([351]) -> ([355]);
function_call<user@fp::types::fp::FixedImpl::new>([354], [355]) -> ([353]);
struct_construct<Tuple<fp::types::fp::FixedType>>([353]) -> ([356]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([356]) -> ([357]);
store_temp<RangeCheck>([0]) -> ([358]);
store_temp<GasBuiltin>([1]) -> ([359]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([357]) -> ([360]);
return([358], [359], [360]);
alloc_local<fp::types::fp::FixedType>() -> ([4]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
struct_construct<Unit>() -> ([5]);
enum_init<core::bool, 0>([5]) -> ([6]);
u128_const<12786308645202655660>() -> ([7]);
store_temp<u128>([7]) -> ([8]);
store_temp<core::bool>([6]) -> ([9]);
function_call<user@fp::types::fp::FixedImpl::new>([8], [9]) -> ([3]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<GasBuiltin>([1]) -> ([14]);
store_temp<fp::types::fp::FixedType>([2]) -> ([15]);
store_local<fp::types::fp::FixedType>([4], [3]) -> ([3]);
function_call<user@fp::math::core::log2>([13], [14], [15]) -> ([10], [11], [12]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([12]) { fallthrough([16]) 1856([17]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([16]) -> ([18]);
store_temp<RangeCheck>([10]) -> ([21]);
store_temp<fp::types::fp::FixedType>([3]) -> ([22]);
store_temp<fp::types::fp::FixedType>([18]) -> ([23]);
function_call<user@fp::math::core::mul>([21], [22], [23]) -> ([19], [20]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([20]) { fallthrough([24]) 1850([25]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([24]) -> ([26]);
struct_construct<Tuple<fp::types::fp::FixedType>>([26]) -> ([27]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([27]) -> ([28]);
store_temp<RangeCheck>([19]) -> ([29]);
store_temp<GasBuiltin>([11]) -> ([30]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([28]) -> ([31]);
return([29], [30], [31]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([25]) -> ([32]);
store_temp<RangeCheck>([19]) -> ([33]);
store_temp<GasBuiltin>([11]) -> ([34]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([32]) -> ([35]);
return([33], [34], [35]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([17]) -> ([36]);
store_temp<RangeCheck>([10]) -> ([37]);
store_temp<GasBuiltin>([11]) -> ([38]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([36]) -> ([39]);
return([37], [38], [39]);
alloc_local<u128>() -> ([4]);
finalize_locals() -> ();
get_builtin_costs() -> ([5]);
store_temp<BuiltinCosts>([5]) -> ([5]);
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 2495([8], [9]) };
branch_align() -> ();
get_builtin_costs() -> ([10]);
store_temp<BuiltinCosts>([10]) -> ([10]);
withdraw_gas_all([6], [7], [10]) { fallthrough([11], [12]) 2482([13], [14]) };
branch_align() -> ();
struct_deconstruct<fp::types::fp::FixedType>([2]) -> ([15], [16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
dup<core::bool>([16]) -> ([16], [19]);
store_temp<core::bool>([18]) -> ([18]);
store_temp<RangeCheck>([11]) -> ([11]);
bool_eq([19], [18]) { fallthrough() 1885() };
branch_align() -> ();
struct_construct<Unit>() -> ([20]);
enum_init<core::bool, 0>([20]) -> ([21]);
store_temp<core::bool>([21]) -> ([22]);
jump() { 1889() };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::bool, 1>([23]) -> ([24]);
store_temp<core::bool>([24]) -> ([22]);
felt252_const<145495691950598149177832629628683515493>() -> ([25]);
rename<core::bool>([22]) -> ([27]);
store_temp<felt252>([25]) -> ([28]);
function_call<user@core::assert>([27], [28]) -> ([26]);
enum_match<core::PanicResult::<((),)>>([26]) { fallthrough([29]) 2472([30]) };
branch_align() -> ();
drop<Tuple<Unit>>([29]) -> ();
u128_const<18446744073709551616>() -> ([31]);
dup<u128>([15]) -> ([15], [32]);
u128_eq([32], [31]) { fallthrough() 2455() };
branch_align() -> ();
u128_const<18446744073709551616>() -> ([33]);
dup<u128>([15]) -> ([15], [34]);
store_temp<u128>([33]) -> ([33]);
u128_overflowing_sub([11], [34], [33]) { fallthrough([35], [36]) 2396([37], [38]) };
branch_align() -> ();
drop<u128>([36]) -> ();
u128_const<2>() -> ([39]);
store_temp<RangeCheck>([35]) -> ([42]);
dup<u128>([15]) -> ([15], [43]);
store_temp<u128>([43]) -> ([43]);
store_temp<u128>([39]) -> ([44]);
function_call<user@core::integer::U128Div::div>([42], [43], [44]) -> ([40], [41]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([41]) { fallthrough([45]) 2386([46]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_deconstruct<Tuple<u128>>([45]) -> ([47]);
store_temp<RangeCheck>([40]) -> ([51]);
store_temp<GasBuiltin>([12]) -> ([52]);
store_temp<u128>([47]) -> ([53]);
function_call<user@fp::math::core::_msb>([51], [52], [53]) -> ([48], [49], [50]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([50]) { fallthrough([54]) 2377([55]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([54]) -> ([3]);
struct_construct<Unit>() -> ([56]);
enum_init<core::bool, 0>([56]) -> ([57]);
u128_const<2>() -> ([58]);
store_temp<RangeCheck>([48]) -> ([61]);
store_temp<u128>([58]) -> ([62]);
store_temp<core::bool>([57]) -> ([63]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([61], [62], [63]) -> ([59], [60]);
store_local<u128>([4], [3]) -> ([3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([60]) { fallthrough([64]) 2368([65]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([64]) -> ([66]);
struct_construct<Unit>() -> ([67]);
enum_init<core::bool, 0>([67]) -> ([68]);
store_temp<RangeCheck>([59]) -> ([72]);
store_temp<GasBuiltin>([49]) -> ([73]);
store_temp<fp::types::fp::FixedType>([66]) -> ([74]);
dup<u128>([3]) -> ([3], [75]);
store_temp<u128>([75]) -> ([75]);
store_temp<core::bool>([68]) -> ([76]);
function_call<user@fp::math::core::_pow_int>([72], [73], [74], [75], [76]) -> ([69], [70], [71]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([71]) { fallthrough([77]) 2359([78]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([77]) -> ([79]);
struct_construct<fp::types::fp::FixedType>([15], [16]) -> ([80]);
store_temp<RangeCheck>([69]) -> ([83]);
store_temp<fp::types::fp::FixedType>([80]) -> ([84]);
store_temp<fp::types::fp::FixedType>([79]) -> ([85]);
function_call<user@fp::math::core::div>([83], [84], [85]) -> ([81], [82]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([82]) { fallthrough([86]) 2352([87]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([86]) -> ([88]);
struct_construct<Unit>() -> ([89]);
enum_init<core::bool, 1>([89]) -> ([90]);
u128_const<167660832607149504>() -> ([91]);
store_temp<u128>([91]) -> ([93]);
store_temp<core::bool>([90]) -> ([94]);
function_call<user@fp::types::fp::FixedImpl::new>([93], [94]) -> ([92]);
struct_construct<Unit>() -> ([95]);
enum_init<core::bool, 0>([95]) -> ([96]);
u128_const<2284550827067371376>() -> ([97]);
store_temp<u128>([97]) -> ([99]);
store_temp<core::bool>([96]) -> ([100]);
function_call<user@fp::types::fp::FixedImpl::new>([99], [100]) -> ([98]);
struct_construct<Unit>() -> ([101]);
enum_init<core::bool, 1>([101]) -> ([102]);
u128_const<13804762162529339368>() -> ([103]);
store_temp<u128>([103]) -> ([105]);
store_temp<core::bool>([102]) -> ([106]);
function_call<user@fp::types::fp::FixedImpl::new>([105], [106]) -> ([104]);
struct_construct<Unit>() -> ([107]);
enum_init<core::bool, 0>([107]) -> ([108]);
u128_const<48676798788932142400>() -> ([109]);
store_temp<u128>([109]) -> ([111]);
store_temp<core::bool>([108]) -> ([112]);
function_call<user@fp::types::fp::FixedImpl::new>([111], [112]) -> ([110]);
struct_construct<Unit>() -> ([113]);
enum_init<core::bool, 1>([113]) -> ([114]);
u128_const<110928274989790216568>() -> ([115]);
store_temp<u128>([115]) -> ([117]);
store_temp<core::bool>([114]) -> ([118]);
function_call<user@fp::types::fp::FixedImpl::new>([117], [118]) -> ([116]);
struct_construct<Unit>() -> ([119]);
enum_init<core::bool, 0>([119]) -> ([120]);
u128_const<171296190111888966192>() -> ([121]);
store_temp<u128>([121]) -> ([123]);
store_temp<core::bool>([120]) -> ([124]);
function_call<user@fp::types::fp::FixedImpl::new>([123], [124]) -> ([122]);
struct_construct<Unit>() -> ([125]);
enum_init<core::bool, 1>([125]) -> ([126]);
u128_const<184599081115266689944>() -> ([127]);
store_temp<u128>([127]) -> ([129]);
store_temp<core::bool>([126]) -> ([130]);
function_call<user@fp::types::fp::FixedImpl::new>([129], [130]) -> ([128]);
struct_construct<Unit>() -> ([131]);
enum_init<core::bool, 0>([131]) -> ([132]);
u128_const<150429590981271126408>() -> ([133]);
store_temp<u128>([133]) -> ([135]);
store_temp<core::bool>([132]) -> ([136]);
function_call<user@fp::types::fp::FixedImpl::new>([135], [136]) -> ([134]);
struct_construct<Unit>() -> ([137]);
enum_init<core::bool, 1>([137]) -> ([138]);
u128_const<63187350828072553424>() -> ([139]);
store_temp<u128>([139]) -> ([141]);
store_temp<core::bool>([138]) -> ([142]);
function_call<user@fp::types::fp::FixedImpl::new>([141], [142]) -> ([140]);
store_temp<RangeCheck>([81]) -> ([145]);
store_temp<fp::types::fp::FixedType>([92]) -> ([146]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [147]);
store_temp<fp::types::fp::FixedType>([147]) -> ([147]);
function_call<user@fp::math::core::mul>([145], [146], [147]) -> ([143], [144]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([144]) { fallthrough([148]) 2336([149]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([148]) -> ([150]);
store_temp<RangeCheck>([143]) -> ([153]);
store_temp<fp::types::fp::FixedType>([150]) -> ([154]);
store_temp<fp::types::fp::FixedType>([98]) -> ([155]);
function_call<user@fp::math::core::add>([153], [154], [155]) -> ([151], [152]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([152]) { fallthrough([156]) 2321([157]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([156]) -> ([158]);
store_temp<RangeCheck>([151]) -> ([161]);
store_temp<fp::types::fp::FixedType>([158]) -> ([162]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [163]);
store_temp<fp::types::fp::FixedType>([163]) -> ([163]);
function_call<user@fp::math::core::mul>([161], [162], [163]) -> ([159], [160]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([160]) { fallthrough([164]) 2306([165]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([164]) -> ([166]);
store_temp<RangeCheck>([159]) -> ([169]);
store_temp<fp::types::fp::FixedType>([166]) -> ([170]);
store_temp<fp::types::fp::FixedType>([104]) -> ([171]);
function_call<user@fp::math::core::add>([169], [170], [171]) -> ([167], [168]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([168]) { fallthrough([172]) 2292([173]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([172]) -> ([174]);
store_temp<RangeCheck>([167]) -> ([177]);
store_temp<fp::types::fp::FixedType>([174]) -> ([178]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [179]);
store_temp<fp::types::fp::FixedType>([179]) -> ([179]);
function_call<user@fp::math::core::mul>([177], [178], [179]) -> ([175], [176]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([176]) { fallthrough([180]) 2278([181]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([180]) -> ([182]);
store_temp<RangeCheck>([175]) -> ([185]);
store_temp<fp::types::fp::FixedType>([182]) -> ([186]);
store_temp<fp::types::fp::FixedType>([110]) -> ([187]);
function_call<user@fp::math::core::add>([185], [186], [187]) -> ([183], [184]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([184]) { fallthrough([188]) 2265([189]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([188]) -> ([190]);
store_temp<RangeCheck>([183]) -> ([193]);
store_temp<fp::types::fp::FixedType>([190]) -> ([194]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [195]);
store_temp<fp::types::fp::FixedType>([195]) -> ([195]);
function_call<user@fp::math::core::mul>([193], [194], [195]) -> ([191], [192]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([192]) { fallthrough([196]) 2252([197]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([196]) -> ([198]);
store_temp<RangeCheck>([191]) -> ([201]);
store_temp<fp::types::fp::FixedType>([198]) -> ([202]);
store_temp<fp::types::fp::FixedType>([116]) -> ([203]);
function_call<user@fp::math::core::add>([201], [202], [203]) -> ([199], [200]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([200]) { fallthrough([204]) 2240([205]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([204]) -> ([206]);
store_temp<RangeCheck>([199]) -> ([209]);
store_temp<fp::types::fp::FixedType>([206]) -> ([210]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [211]);
store_temp<fp::types::fp::FixedType>([211]) -> ([211]);
function_call<user@fp::math::core::mul>([209], [210], [211]) -> ([207], [208]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([208]) { fallthrough([212]) 2228([213]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([212]) -> ([214]);
store_temp<RangeCheck>([207]) -> ([217]);
store_temp<fp::types::fp::FixedType>([214]) -> ([218]);
store_temp<fp::types::fp::FixedType>([122]) -> ([219]);
function_call<user@fp::math::core::add>([217], [218], [219]) -> ([215], [216]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([216]) { fallthrough([220]) 2217([221]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([220]) -> ([222]);
store_temp<RangeCheck>([215]) -> ([225]);
store_temp<fp::types::fp::FixedType>([222]) -> ([226]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [227]);
store_temp<fp::types::fp::FixedType>([227]) -> ([227]);
function_call<user@fp::math::core::mul>([225], [226], [227]) -> ([223], [224]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([224]) { fallthrough([228]) 2206([229]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([228]) -> ([230]);
store_temp<RangeCheck>([223]) -> ([233]);
store_temp<fp::types::fp::FixedType>([230]) -> ([234]);
store_temp<fp::types::fp::FixedType>([128]) -> ([235]);
function_call<user@fp::math::core::add>([233], [234], [235]) -> ([231], [232]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([232]) { fallthrough([236]) 2196([237]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([236]) -> ([238]);
store_temp<RangeCheck>([231]) -> ([241]);
store_temp<fp::types::fp::FixedType>([238]) -> ([242]);
dup<fp::types::fp::FixedType>([88]) -> ([88], [243]);
store_temp<fp::types::fp::FixedType>([243]) -> ([243]);
function_call<user@fp::math::core::mul>([241], [242], [243]) -> ([239], [240]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([240]) { fallthrough([244]) 2186([245]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([244]) -> ([246]);
store_temp<RangeCheck>([239]) -> ([249]);
store_temp<fp::types::fp::FixedType>([246]) -> ([250]);
store_temp<fp::types::fp::FixedType>([134]) -> ([251]);
function_call<user@fp::math::core::add>([249], [250], [251]) -> ([247], [248]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([248]) { fallthrough([252]) 2177([253]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([252]) -> ([254]);
store_temp<RangeCheck>([247]) -> ([257]);
store_temp<fp::types::fp::FixedType>([254]) -> ([258]);
store_temp<fp::types::fp::FixedType>([88]) -> ([259]);
function_call<user@fp::math::core::mul>([257], [258], [259]) -> ([255], [256]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([256]) { fallthrough([260]) 2169([261]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([260]) -> ([262]);
store_temp<RangeCheck>([255]) -> ([265]);
store_temp<fp::types::fp::FixedType>([262]) -> ([266]);
store_temp<fp::types::fp::FixedType>([140]) -> ([267]);
function_call<user@fp::math::core::add>([265], [266], [267]) -> ([263], [264]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([264]) { fallthrough([268]) 2162([269]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([268]) -> ([270]);
struct_construct<Unit>() -> ([271]);
enum_init<core::bool, 0>([271]) -> ([272]);
store_temp<RangeCheck>([263]) -> ([275]);
store_temp<u128>([3]) -> ([276]);
store_temp<core::bool>([272]) -> ([277]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([275], [276], [277]) -> ([273], [274]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([274]) { fallthrough([278]) 2155([279]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([278]) -> ([280]);
store_temp<RangeCheck>([273]) -> ([283]);
store_temp<fp::types::fp::FixedType>([270]) -> ([284]);
store_temp<fp::types::fp::FixedType>([280]) -> ([285]);
function_call<user@fp::math::core::add>([283], [284], [285]) -> ([281], [282]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([282]) { fallthrough([286]) 2149([287]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([286]) -> ([288]);
struct_construct<Tuple<fp::types::fp::FixedType>>([288]) -> ([289]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([289]) -> ([290]);
store_temp<RangeCheck>([281]) -> ([291]);
store_temp<GasBuiltin>([70]) -> ([292]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([290]) -> ([293]);
return([291], [292], [293]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([287]) -> ([294]);
store_temp<RangeCheck>([281]) -> ([295]);
store_temp<GasBuiltin>([70]) -> ([296]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([294]) -> ([297]);
return([295], [296], [297]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([270]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([279]) -> ([298]);
store_temp<RangeCheck>([273]) -> ([299]);
store_temp<GasBuiltin>([70]) -> ([300]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([298]) -> ([301]);
return([299], [300], [301]);
branch_align() -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([269]) -> ([302]);
store_temp<RangeCheck>([263]) -> ([303]);
store_temp<GasBuiltin>([70]) -> ([304]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([302]) -> ([305]);
return([303], [304], [305]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([261]) -> ([306]);
store_temp<RangeCheck>([255]) -> ([307]);
store_temp<GasBuiltin>([70]) -> ([308]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([306]) -> ([309]);
return([307], [308], [309]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([253]) -> ([310]);
store_temp<RangeCheck>([247]) -> ([311]);
store_temp<GasBuiltin>([70]) -> ([312]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([310]) -> ([313]);
return([311], [312], [313]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([245]) -> ([314]);
store_temp<RangeCheck>([239]) -> ([315]);
store_temp<GasBuiltin>([70]) -> ([316]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([314]) -> ([317]);
return([315], [316], [317]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([237]) -> ([318]);
store_temp<RangeCheck>([231]) -> ([319]);
store_temp<GasBuiltin>([70]) -> ([320]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([318]) -> ([321]);
return([319], [320], [321]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([229]) -> ([322]);
store_temp<RangeCheck>([223]) -> ([323]);
store_temp<GasBuiltin>([70]) -> ([324]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([322]) -> ([325]);
return([323], [324], [325]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([221]) -> ([326]);
store_temp<RangeCheck>([215]) -> ([327]);
store_temp<GasBuiltin>([70]) -> ([328]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([326]) -> ([329]);
return([327], [328], [329]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([213]) -> ([330]);
store_temp<RangeCheck>([207]) -> ([331]);
store_temp<GasBuiltin>([70]) -> ([332]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([330]) -> ([333]);
return([331], [332], [333]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([205]) -> ([334]);
store_temp<RangeCheck>([199]) -> ([335]);
store_temp<GasBuiltin>([70]) -> ([336]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([334]) -> ([337]);
return([335], [336], [337]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([197]) -> ([338]);
store_temp<RangeCheck>([191]) -> ([339]);
store_temp<GasBuiltin>([70]) -> ([340]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([338]) -> ([341]);
return([339], [340], [341]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([189]) -> ([342]);
store_temp<RangeCheck>([183]) -> ([343]);
store_temp<GasBuiltin>([70]) -> ([344]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([342]) -> ([345]);
return([343], [344], [345]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
drop<fp::types::fp::FixedType>([110]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([181]) -> ([346]);
store_temp<RangeCheck>([175]) -> ([347]);
store_temp<GasBuiltin>([70]) -> ([348]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([346]) -> ([349]);
return([347], [348], [349]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
drop<fp::types::fp::FixedType>([110]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([173]) -> ([350]);
store_temp<RangeCheck>([167]) -> ([351]);
store_temp<GasBuiltin>([70]) -> ([352]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([350]) -> ([353]);
return([351], [352], [353]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
drop<fp::types::fp::FixedType>([110]) -> ();
drop<fp::types::fp::FixedType>([104]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([165]) -> ([354]);
store_temp<RangeCheck>([159]) -> ([355]);
store_temp<GasBuiltin>([70]) -> ([356]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([354]) -> ([357]);
return([355], [356], [357]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
drop<fp::types::fp::FixedType>([110]) -> ();
drop<fp::types::fp::FixedType>([104]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([157]) -> ([358]);
store_temp<RangeCheck>([151]) -> ([359]);
store_temp<GasBuiltin>([70]) -> ([360]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([358]) -> ([361]);
return([359], [360], [361]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<fp::types::fp::FixedType>([140]) -> ();
drop<fp::types::fp::FixedType>([88]) -> ();
drop<fp::types::fp::FixedType>([134]) -> ();
drop<fp::types::fp::FixedType>([128]) -> ();
drop<fp::types::fp::FixedType>([122]) -> ();
drop<fp::types::fp::FixedType>([116]) -> ();
drop<fp::types::fp::FixedType>([110]) -> ();
drop<fp::types::fp::FixedType>([104]) -> ();
drop<fp::types::fp::FixedType>([98]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([149]) -> ([362]);
store_temp<RangeCheck>([143]) -> ([363]);
store_temp<GasBuiltin>([70]) -> ([364]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([362]) -> ([365]);
return([363], [364], [365]);
branch_align() -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([87]) -> ([366]);
store_temp<RangeCheck>([81]) -> ([367]);
store_temp<GasBuiltin>([70]) -> ([368]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([366]) -> ([369]);
return([367], [368], [369]);
branch_align() -> ();
drop<u128>([3]) -> ();
drop<u128>([15]) -> ();
drop<core::bool>([16]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([78]) -> ([370]);
store_temp<RangeCheck>([69]) -> ([371]);
store_temp<GasBuiltin>([70]) -> ([372]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([370]) -> ([373]);
return([371], [372], [373]);
branch_align() -> ();
drop<core::bool>([16]) -> ();
drop<u128>([3]) -> ();
drop<u128>([15]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([65]) -> ([374]);
store_temp<RangeCheck>([59]) -> ([375]);
store_temp<GasBuiltin>([49]) -> ([376]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([374]) -> ([377]);
return([375], [376], [377]);
branch_align() -> ();
drop<core::bool>([16]) -> ();
drop<u128>([15]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([55]) -> ([378]);
store_temp<RangeCheck>([48]) -> ([379]);
store_temp<GasBuiltin>([49]) -> ([380]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([378]) -> ([381]);
return([379], [380], [381]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::bool>([16]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
drop<u128>([15]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([46]) -> ([382]);
store_temp<RangeCheck>([40]) -> ([383]);
store_temp<GasBuiltin>([12]) -> ([384]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([382]) -> ([385]);
return([383], [384], [385]);
branch_align() -> ();
drop<u128>([38]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
struct_construct<Unit>() -> ([386]);
enum_init<core::bool, 0>([386]) -> ([387]);
u128_const<1>() -> ([388]);
store_temp<RangeCheck>([37]) -> ([391]);
store_temp<u128>([388]) -> ([392]);
store_temp<core::bool>([387]) -> ([393]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([391], [392], [393]) -> ([389], [390]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([390]) { fallthrough([394]) 2446([395]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([394]) -> ([396]);
struct_construct<fp::types::fp::FixedType>([15], [16]) -> ([397]);
store_temp<RangeCheck>([389]) -> ([400]);
store_temp<fp::types::fp::FixedType>([396]) -> ([401]);
store_temp<fp::types::fp::FixedType>([397]) -> ([402]);
function_call<user@fp::math::core::div>([400], [401], [402]) -> ([398], [399]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([399]) { fallthrough([403]) 2439([404]) };
branch_align() -> ();
disable_ap_tracking() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([403]) -> ([405]);
store_temp<RangeCheck>([398]) -> ([409]);
store_temp<GasBuiltin>([12]) -> ([410]);
store_temp<fp::types::fp::FixedType>([405]) -> ([411]);
function_call<user@fp::math::core::log2>([409], [410], [411]) -> ([406], [407], [408]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([408]) { fallthrough([412]) 2433([413]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([412]) -> ([414]);
store_temp<fp::types::fp::FixedType>([414]) -> ([416]);
function_call<user@fp::math::core::neg>([416]) -> ([415]);
struct_construct<Tuple<fp::types::fp::FixedType>>([415]) -> ([417]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([417]) -> ([418]);
store_temp<RangeCheck>([406]) -> ([419]);
store_temp<GasBuiltin>([407]) -> ([420]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([418]) -> ([421]);
return([419], [420], [421]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([413]) -> ([422]);
store_temp<RangeCheck>([406]) -> ([423]);
store_temp<GasBuiltin>([407]) -> ([424]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([422]) -> ([425]);
return([423], [424], [425]);
branch_align() -> ();
disable_ap_tracking() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([404]) -> ([426]);
store_temp<RangeCheck>([398]) -> ([427]);
store_temp<GasBuiltin>([12]) -> ([428]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([426]) -> ([429]);
return([427], [428], [429]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<u128>([15]) -> ();
drop<core::bool>([16]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([395]) -> ([430]);
store_temp<RangeCheck>([389]) -> ([431]);
store_temp<GasBuiltin>([12]) -> ([432]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([430]) -> ([433]);
return([431], [432], [433]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::bool>([16]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
drop<u128>([15]) -> ();
struct_construct<Unit>() -> ([434]);
enum_init<core::bool, 0>([434]) -> ([435]);
u128_const<0>() -> ([436]);
store_temp<u128>([436]) -> ([438]);
store_temp<core::bool>([435]) -> ([439]);
function_call<user@fp::types::fp::FixedImpl::new>([438], [439]) -> ([437]);
struct_construct<Tuple<fp::types::fp::FixedType>>([437]) -> ([440]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([440]) -> ([441]);
store_temp<RangeCheck>([11]) -> ([442]);
store_temp<GasBuiltin>([12]) -> ([443]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([441]) -> ([444]);
return([442], [443], [444]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::bool>([16]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
drop<u128>([15]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([30]) -> ([445]);
store_temp<RangeCheck>([11]) -> ([446]);
store_temp<GasBuiltin>([12]) -> ([447]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([445]) -> ([448]);
return([446], [447], [448]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
array_new<felt252>() -> ([449]);
felt252_const<5197639>() -> ([450]);
store_temp<felt252>([450]) -> ([450]);
array_append<felt252>([449], [450]) -> ([451]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([451]) -> ([452]);
store_temp<RangeCheck>([13]) -> ([453]);
store_temp<GasBuiltin>([14]) -> ([454]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([452]) -> ([455]);
return([453], [454], [455]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<Uninitialized<u128>>([4]) -> ();
array_new<felt252>() -> ([456]);
felt252_const<375233589013918064796019>() -> ([457]);
store_temp<felt252>([457]) -> ([457]);
array_append<felt252>([456], [457]) -> ([458]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([458]) -> ([459]);
store_temp<RangeCheck>([8]) -> ([460]);
store_temp<GasBuiltin>([9]) -> ([461]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([459]) -> ([462]);
return([460], [461], [462]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([3], [4]);
struct_deconstruct<fp::types::fp::FixedType>([2]) -> ([5], [6]);
bool_xor_impl([4], [6]) -> ([7]);
u128_guarantee_mul([3], [5]) -> ([8], [9], [10]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<U128MulGuarantee>([10]) -> ([14]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([13], [14]) -> ([11], [12]);
drop<Unit>([12]) -> ();
struct_construct<Tuple<u128, u128>>([8], [9]) -> ([15]);
struct_deconstruct<Tuple<u128, u128>>([15]) -> ([16], [17]);
struct_construct<core::integer::u256>([17], [16]) -> ([18]);
u128_const<18446744073709551616>() -> ([19]);
u128_const<0>() -> ([20]);
struct_construct<core::integer::u256>([19], [20]) -> ([21]);
store_temp<core::integer::u256>([21]) -> ([23]);
function_call<user@core::integer::u256_as_non_zero>([23]) -> ([22]);
store_temp<core::bool>([7]) -> ([7]);
store_temp<core::integer::u256>([18]) -> ([18]);
enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([22]) { fallthrough([24]) 2566([25]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<core::integer::u256>>>([24]) -> ([26]);
u256_safe_divmod([11], [18], [26]) -> ([27], [28], [29]);
drop<core::integer::u256>([29]) -> ();
struct_deconstruct<core::integer::u256>([28]) -> ([30], [31]);
u128_const<0>() -> ([32]);
store_temp<RangeCheck>([27]) -> ([27]);
u128_eq([31], [32]) { fallthrough() 2540() };
branch_align() -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<core::bool>([34]) -> ([35]);
jump() { 2544() };
branch_align() -> ();
struct_construct<Unit>() -> ([36]);
enum_init<core::bool, 1>([36]) -> ([37]);
store_temp<core::bool>([37]) -> ([35]);
felt252_const<593979512822486839219413268164276087>() -> ([38]);
rename<core::bool>([35]) -> ([40]);
store_temp<felt252>([38]) -> ([41]);
function_call<user@core::assert>([40], [41]) -> ([39]);
enum_match<core::PanicResult::<((),)>>([39]) { fallthrough([42]) 2559([43]) };
branch_align() -> ();
drop<Tuple<Unit>>([42]) -> ();
store_temp<u128>([30]) -> ([45]);
store_temp<core::bool>([7]) -> ([46]);
function_call<user@fp::types::fp::FixedImpl::new>([45], [46]) -> ([44]);
struct_construct<Tuple<fp::types::fp::FixedType>>([44]) -> ([47]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([47]) -> ([48]);
store_temp<RangeCheck>([27]) -> ([49]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([48]) -> ([50]);
return([49], [50]);
branch_align() -> ();
drop<core::bool>([7]) -> ();
drop<u128>([30]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([43]) -> ([51]);
store_temp<RangeCheck>([27]) -> ([52]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([51]) -> ([53]);
return([52], [53]);
branch_align() -> ();
drop<core::bool>([7]) -> ();
drop<core::integer::u256>([18]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([25]) -> ([54]);
store_temp<RangeCheck>([11]) -> ([55]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([54]) -> ([56]);
return([55], [56]);
struct_deconstruct<fp::types::fp::FixedType>([0]) -> ([2], [3]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([4], [5]);
u128_eq([2], [4]) { fallthrough() 2581() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 2585() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
bool_not_impl([8]) -> ([11]);
store_temp<core::bool>([11]) -> ([11]);
bool_eq([3], [5]) { fallthrough() 2593() };
branch_align() -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::bool, 0>([12]) -> ([13]);
store_temp<core::bool>([13]) -> ([14]);
jump() { 2597() };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::bool, 1>([15]) -> ([16]);
store_temp<core::bool>([16]) -> ([14]);
bool_not_impl([14]) -> ([17]);
store_temp<core::bool>([17]) -> ([17]);
bool_or_impl([11], [17]) -> ([18]);
store_temp<core::bool>([18]) -> ([19]);
return([19]);
struct_deconstruct<fp::types::fp::FixedType>([0]) -> ([1], [2]);
struct_construct<Unit>() -> ([3]);
enum_init<core::bool, 0>([3]) -> ([4]);
store_temp<core::bool>([4]) -> ([4]);
bool_eq([2], [4]) { fallthrough() 2615() };
branch_align() -> ();
struct_construct<Unit>() -> ([5]);
enum_init<core::bool, 0>([5]) -> ([6]);
store_temp<u128>([1]) -> ([8]);
store_temp<core::bool>([6]) -> ([9]);
function_call<user@fp::types::fp::FixedImpl::new>([8], [9]) -> ([7]);
rename<fp::types::fp::FixedType>([7]) -> ([10]);
return([10]);
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 1>([11]) -> ([12]);
store_temp<u128>([1]) -> ([14]);
store_temp<core::bool>([12]) -> ([15]);
function_call<user@fp::types::fp::FixedImpl::new>([14], [15]) -> ([13]);
rename<fp::types::fp::FixedType>([13]) -> ([16]);
return([16]);
disable_ap_tracking() -> ();
store_temp<RangeCheck>([0]) -> ([6]);
dup<fp::types::fp::FixedType>([3]) -> ([3], [7]);
store_temp<fp::types::fp::FixedType>([7]) -> ([7]);
function_call<user@fp::math::core::_split_unsigned>([6], [7]) -> ([4], [5]);
enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([5]) { fallthrough([8]) 2721([9]) };
branch_align() -> ();
struct_deconstruct<Tuple<Tuple<u128, u128>>>([8]) -> ([10]);
struct_deconstruct<Tuple<u128, u128>>([10]) -> ([11], [12]);
drop<u128>([11]) -> ();
u128_const<0>() -> ([13]);
u128_eq([12], [13]) { fallthrough() 2682() };
branch_align() -> ();
store_temp<RangeCheck>([4]) -> ([17]);
store_temp<GasBuiltin>([1]) -> ([18]);
store_temp<fp::types::fp::FixedType>([2]) -> ([19]);
function_call<user@fp::math::core::ln>([17], [18], [19]) -> ([14], [15], [16]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([16]) { fallthrough([20]) 2675([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([20]) -> ([22]);
store_temp<RangeCheck>([14]) -> ([25]);
store_temp<fp::types::fp::FixedType>([3]) -> ([26]);
store_temp<fp::types::fp::FixedType>([22]) -> ([27]);
function_call<user@fp::math::core::mul>([25], [26], [27]) -> ([23], [24]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([24]) { fallthrough([28]) 2669([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([28]) -> ([30]);
store_temp<RangeCheck>([23]) -> ([34]);
store_temp<GasBuiltin>([15]) -> ([35]);
store_temp<fp::types::fp::FixedType>([30]) -> ([36]);
function_call<user@fp::math::core::exp>([34], [35], [36]) -> ([31], [32], [33]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([33]) { fallthrough([37]) 2663([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([37]) -> ([39]);
struct_construct<Tuple<fp::types::fp::FixedType>>([39]) -> ([40]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([40]) -> ([41]);
store_temp<RangeCheck>([31]) -> ([42]);
store_temp<GasBuiltin>([32]) -> ([43]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([41]) -> ([44]);
return([42], [43], [44]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([38]) -> ([45]);
store_temp<RangeCheck>([31]) -> ([46]);
store_temp<GasBuiltin>([32]) -> ([47]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([45]) -> ([48]);
return([46], [47], [48]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([29]) -> ([49]);
store_temp<RangeCheck>([23]) -> ([50]);
store_temp<GasBuiltin>([15]) -> ([51]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([49]) -> ([52]);
return([50], [51], [52]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([21]) -> ([53]);
store_temp<RangeCheck>([14]) -> ([54]);
store_temp<GasBuiltin>([15]) -> ([55]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([53]) -> ([56]);
return([54], [55], [56]);
branch_align() -> ();
struct_deconstruct<fp::types::fp::FixedType>([3]) -> ([57], [58]);
u128_const<18446744073709551616>() -> ([59]);
store_temp<RangeCheck>([4]) -> ([62]);
store_temp<u128>([57]) -> ([63]);
store_temp<u128>([59]) -> ([64]);
function_call<user@core::integer::U128Div::div>([62], [63], [64]) -> ([60], [61]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([61]) { fallthrough([65]) 2713([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([65]) -> ([67]);
store_temp<RangeCheck>([60]) -> ([71]);
store_temp<GasBuiltin>([1]) -> ([72]);
store_temp<fp::types::fp::FixedType>([2]) -> ([73]);
store_temp<u128>([67]) -> ([74]);
store_temp<core::bool>([58]) -> ([75]);
function_call<user@fp::math::core::_pow_int>([71], [72], [73], [74], [75]) -> ([68], [69], [70]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([70]) { fallthrough([76]) 2707([77]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([76]) -> ([78]);
struct_construct<Tuple<fp::types::fp::FixedType>>([78]) -> ([79]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([79]) -> ([80]);
store_temp<RangeCheck>([68]) -> ([81]);
store_temp<GasBuiltin>([69]) -> ([82]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([80]) -> ([83]);
return([81], [82], [83]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([77]) -> ([84]);
store_temp<RangeCheck>([68]) -> ([85]);
store_temp<GasBuiltin>([69]) -> ([86]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([84]) -> ([87]);
return([85], [86], [87]);
branch_align() -> ();
drop<core::bool>([58]) -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([66]) -> ([88]);
store_temp<RangeCheck>([60]) -> ([89]);
store_temp<GasBuiltin>([1]) -> ([90]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([88]) -> ([91]);
return([89], [90], [91]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([3]) -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([9]) -> ([92]);
store_temp<RangeCheck>([4]) -> ([93]);
store_temp<GasBuiltin>([1]) -> ([94]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([92]) -> ([95]);
return([93], [94], [95]);
store_temp<RangeCheck>([0]) -> ([4]);
dup<fp::types::fp::FixedType>([1]) -> ([1], [5]);
store_temp<fp::types::fp::FixedType>([5]) -> ([5]);
function_call<user@fp::math::core::_split_unsigned>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([3]) { fallthrough([6]) 2806([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<Tuple<u128, u128>>>([6]) -> ([8]);
struct_deconstruct<Tuple<u128, u128>>([8]) -> ([9], [10]);
u128_const<9223372036854775808>() -> ([11]);
store_temp<u128>([11]) -> ([11]);
u128_overflowing_sub([2], [10], [11]) { fallthrough([12], [13]) 2780([14], [15]) };
branch_align() -> ();
drop<u128>([13]) -> ();
u128_const<1>() -> ([16]);
store_temp<RangeCheck>([12]) -> ([19]);
store_temp<u128>([9]) -> ([20]);
store_temp<u128>([16]) -> ([21]);
function_call<user@core::integer::U128Add::add>([19], [20], [21]) -> ([17], [18]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([18]) { fallthrough([22]) 2774([23]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([22]) -> ([24]);
u128_const<18446744073709551616>() -> ([25]);
store_temp<RangeCheck>([17]) -> ([28]);
store_temp<u128>([25]) -> ([29]);
store_temp<u128>([24]) -> ([30]);
function_call<user@core::integer::U128Mul::mul>([28], [29], [30]) -> ([26], [27]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([27]) { fallthrough([31]) 2768([32]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([31]) -> ([33]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([34], [35]);
drop<u128>([34]) -> ();
store_temp<u128>([33]) -> ([37]);
store_temp<core::bool>([35]) -> ([38]);
function_call<user@fp::types::fp::FixedImpl::new>([37], [38]) -> ([36]);
struct_construct<Tuple<fp::types::fp::FixedType>>([36]) -> ([39]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([39]) -> ([40]);
store_temp<RangeCheck>([26]) -> ([41]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([40]) -> ([42]);
return([41], [42]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([32]) -> ([43]);
store_temp<RangeCheck>([26]) -> ([44]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([43]) -> ([45]);
return([44], [45]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([23]) -> ([46]);
store_temp<RangeCheck>([17]) -> ([47]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([46]) -> ([48]);
return([47], [48]);
branch_align() -> ();
drop<u128>([15]) -> ();
u128_const<18446744073709551616>() -> ([49]);
store_temp<RangeCheck>([14]) -> ([52]);
store_temp<u128>([49]) -> ([53]);
store_temp<u128>([9]) -> ([54]);
function_call<user@core::integer::U128Mul::mul>([52], [53], [54]) -> ([50], [51]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([51]) { fallthrough([55]) 2800([56]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([55]) -> ([57]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([58], [59]);
drop<u128>([58]) -> ();
store_temp<u128>([57]) -> ([61]);
store_temp<core::bool>([59]) -> ([62]);
function_call<user@fp::types::fp::FixedImpl::new>([61], [62]) -> ([60]);
struct_construct<Tuple<fp::types::fp::FixedType>>([60]) -> ([63]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([63]) -> ([64]);
store_temp<RangeCheck>([50]) -> ([65]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([64]) -> ([66]);
return([65], [66]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([56]) -> ([67]);
store_temp<RangeCheck>([50]) -> ([68]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([67]) -> ([69]);
return([68], [69]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([7]) -> ([70]);
store_temp<RangeCheck>([2]) -> ([71]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([70]) -> ([72]);
return([71], [72]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([2], [3]);
struct_construct<Unit>() -> ([4]);
enum_init<core::bool, 0>([4]) -> ([5]);
store_temp<core::bool>([5]) -> ([5]);
bool_eq([3], [5]) { fallthrough() 2822() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 2826() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
felt252_const<145495691950598149177832629628683515493>() -> ([11]);
rename<core::bool>([8]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::assert>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<((),)>>([12]) { fallthrough([15]) 2875([16]) };
branch_align() -> ();
drop<Tuple<Unit>>([15]) -> ();
u128_sqrt([0], [2]) -> ([17], [18]);
u128_const<18446744073709551616>() -> ([19]);
store_temp<u128>([19]) -> ([19]);
u128_sqrt([17], [19]) -> ([20], [21]);
upcast<u64, u128>([18]) -> ([22]);
u128_const<18446744073709551616>() -> ([23]);
store_temp<RangeCheck>([20]) -> ([26]);
store_temp<u128>([22]) -> ([27]);
store_temp<u128>([23]) -> ([28]);
function_call<user@core::integer::U128Mul::mul>([26], [27], [28]) -> ([24], [25]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([25]) { fallthrough([29]) 2869([30]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([29]) -> ([31]);
upcast<u64, u128>([21]) -> ([32]);
store_temp<RangeCheck>([24]) -> ([35]);
store_temp<u128>([31]) -> ([36]);
store_temp<u128>([32]) -> ([37]);
function_call<user@core::integer::U128Div::div>([35], [36], [37]) -> ([33], [34]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([34]) { fallthrough([38]) 2864([39]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([38]) -> ([40]);
struct_construct<Unit>() -> ([41]);
enum_init<core::bool, 0>([41]) -> ([42]);
store_temp<u128>([40]) -> ([44]);
store_temp<core::bool>([42]) -> ([45]);
function_call<user@fp::types::fp::FixedImpl::new>([44], [45]) -> ([43]);
struct_construct<Tuple<fp::types::fp::FixedType>>([43]) -> ([46]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([46]) -> ([47]);
store_temp<RangeCheck>([33]) -> ([48]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([47]) -> ([49]);
return([48], [49]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([39]) -> ([50]);
store_temp<RangeCheck>([33]) -> ([51]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([50]) -> ([52]);
return([51], [52]);
branch_align() -> ();
drop<u64>([21]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([30]) -> ([53]);
store_temp<RangeCheck>([24]) -> ([54]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([53]) -> ([55]);
return([54], [55]);
branch_align() -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([16]) -> ([56]);
store_temp<RangeCheck>([0]) -> ([57]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([56]) -> ([58]);
return([57], [58]);
store_temp<fp::types::fp::FixedType>([1]) -> ([4]);
function_call<user@fp::types::fp::FixedInto::into>([4]) -> ([3]);
store_temp<fp::types::fp::FixedType>([2]) -> ([6]);
function_call<user@fp::types::fp::FixedInto::into>([6]) -> ([5]);
felt252_sub([3], [5]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<felt252>([7]) -> ([11]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([10], [11]) -> ([8], [9]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([9]) { fallthrough([12]) 2897([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([12]) -> ([14]);
struct_construct<Tuple<fp::types::fp::FixedType>>([14]) -> ([15]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([15]) -> ([16]);
store_temp<RangeCheck>([8]) -> ([17]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([16]) -> ([18]);
return([17], [18]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([13]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([19]) -> ([21]);
return([20], [21]);
disable_ap_tracking() -> ();
get_builtin_costs() -> ([3]);
store_temp<BuiltinCosts>([3]) -> ([3]);
withdraw_gas_all([0], [1], [3]) { fallthrough([4], [5]) 2985([6], [7]) };
branch_align() -> ();
get_builtin_costs() -> ([8]);
store_temp<BuiltinCosts>([8]) -> ([8]);
withdraw_gas_all([4], [5], [8]) { fallthrough([9], [10]) 2974([11], [12]) };
branch_align() -> ();
u128_const<18446744073709551616>() -> ([13]);
dup<u128>([2]) -> ([2], [14]);
store_temp<u128>([13]) -> ([13]);
u128_overflowing_sub([9], [13], [14]) { fallthrough([15], [16]) 2925([17], [18]) };
branch_align() -> ();
drop<u128>([16]) -> ();
drop<u128>([2]) -> ();
u128_const<0>() -> ([19]);
struct_construct<Tuple<u128>>([19]) -> ([20]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([20]) -> ([21]);
store_temp<RangeCheck>([15]) -> ([22]);
store_temp<GasBuiltin>([10]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([21]) -> ([24]);
return([22], [23], [24]);
branch_align() -> ();
drop<u128>([18]) -> ();
u128_const<2>() -> ([25]);
store_temp<RangeCheck>([17]) -> ([28]);
store_temp<u128>([2]) -> ([29]);
store_temp<u128>([25]) -> ([30]);
function_call<user@core::integer::U128Div::div>([28], [29], [30]) -> ([26], [27]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([27]) { fallthrough([31]) 2968([32]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([31]) -> ([33]);
store_temp<RangeCheck>([26]) -> ([37]);
store_temp<GasBuiltin>([10]) -> ([38]);
store_temp<u128>([33]) -> ([39]);
function_call<user@fp::math::core::_msb>([37], [38], [39]) -> ([34], [35], [36]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([36]) { fallthrough([40]) 2962([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([40]) -> ([42]);
u128_const<1>() -> ([43]);
store_temp<RangeCheck>([34]) -> ([46]);
store_temp<u128>([43]) -> ([47]);
store_temp<u128>([42]) -> ([48]);
function_call<user@core::integer::U128Add::add>([46], [47], [48]) -> ([44], [45]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([45]) { fallthrough([49]) 2956([50]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([49]) -> ([51]);
struct_construct<Tuple<u128>>([51]) -> ([52]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([52]) -> ([53]);
store_temp<RangeCheck>([44]) -> ([54]);
store_temp<GasBuiltin>([35]) -> ([55]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([53]) -> ([56]);
return([54], [55], [56]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([50]) -> ([57]);
store_temp<RangeCheck>([44]) -> ([58]);
store_temp<GasBuiltin>([35]) -> ([59]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([57]) -> ([60]);
return([58], [59], [60]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([41]) -> ([61]);
store_temp<RangeCheck>([34]) -> ([62]);
store_temp<GasBuiltin>([35]) -> ([63]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([61]) -> ([64]);
return([62], [63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([32]) -> ([65]);
store_temp<RangeCheck>([26]) -> ([66]);
store_temp<GasBuiltin>([10]) -> ([67]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([65]) -> ([68]);
return([66], [67], [68]);
branch_align() -> ();
drop<u128>([2]) -> ();
array_new<felt252>() -> ([69]);
felt252_const<5197639>() -> ([70]);
store_temp<felt252>([70]) -> ([70]);
array_append<felt252>([69], [70]) -> ([71]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([71]) -> ([72]);
store_temp<RangeCheck>([11]) -> ([73]);
store_temp<GasBuiltin>([12]) -> ([74]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([72]) -> ([75]);
return([73], [74], [75]);
branch_align() -> ();
drop<u128>([2]) -> ();
array_new<felt252>() -> ([76]);
felt252_const<375233589013918064796019>() -> ([77]);
store_temp<felt252>([77]) -> ([77]);
array_append<felt252>([76], [77]) -> ([78]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([6]) -> ([80]);
store_temp<GasBuiltin>([7]) -> ([81]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([79]) -> ([82]);
return([80], [81], [82]);
alloc_local<fp::types::fp::FixedType>() -> ([6]);
finalize_locals() -> ();
disable_ap_tracking() -> ();
get_builtin_costs() -> ([7]);
store_temp<BuiltinCosts>([7]) -> ([7]);
withdraw_gas_all([0], [1], [7]) { fallthrough([8], [9]) 3205([10], [11]) };
branch_align() -> ();
get_builtin_costs() -> ([12]);
store_temp<BuiltinCosts>([12]) -> ([12]);
withdraw_gas_all([8], [9], [12]) { fallthrough([13], [14]) 3191([15], [16]) };
branch_align() -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 1>([17]) -> ([18]);
store_temp<core::bool>([18]) -> ([18]);
store_temp<RangeCheck>([13]) -> ([13]);
bool_eq([4], [18]) { fallthrough() 3146() };
branch_align() -> ();
drop<Uninitialized<fp::types::fp::FixedType>>([6]) -> ();
u128_const<2>() -> ([19]);
store_temp<u128>([19]) -> ([21]);
function_call<user@core::integer::u128_as_non_zero>([21]) -> ([20]);
enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>([20]) { fallthrough([22]) 3138([23]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<u128>>>([22]) -> ([24]);
dup<u128>([3]) -> ([3], [28]);
u128_safe_divmod([13], [28], [24]) -> ([25], [26], [27]);
u128_const<0>() -> ([29]);
store_temp<RangeCheck>([25]) -> ([25]);
u128_eq([3], [29]) { fallthrough() 3122() };
branch_align() -> ();
u128_const<0>() -> ([30]);
u128_eq([27], [30]) { fallthrough() 3083() };
branch_align() -> ();
store_temp<RangeCheck>([25]) -> ([33]);
dup<fp::types::fp::FixedType>([2]) -> ([2], [34]);
store_temp<fp::types::fp::FixedType>([34]) -> ([34]);
dup<fp::types::fp::FixedType>([2]) -> ([2], [35]);
store_temp<fp::types::fp::FixedType>([35]) -> ([35]);
function_call<user@fp::math::core::mul>([33], [34], [35]) -> ([31], [32]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([32]) { fallthrough([36]) 3075([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([36]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 0>([39]) -> ([40]);
store_temp<RangeCheck>([31]) -> ([44]);
store_temp<GasBuiltin>([14]) -> ([45]);
store_temp<fp::types::fp::FixedType>([38]) -> ([46]);
store_temp<u128>([26]) -> ([47]);
store_temp<core::bool>([40]) -> ([48]);
function_call<user@fp::math::core::_pow_int>([44], [45], [46], [47], [48]) -> ([41], [42], [43]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([43]) { fallthrough([49]) 3068([50]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([49]) -> ([51]);
store_temp<RangeCheck>([41]) -> ([54]);
store_temp<fp::types::fp::FixedType>([2]) -> ([55]);
store_temp<fp::types::fp::FixedType>([51]) -> ([56]);
function_call<user@fp::math::core::mul>([54], [55], [56]) -> ([52], [53]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([53]) { fallthrough([57]) 3062([58]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([57]) -> ([59]);
struct_construct<Tuple<fp::types::fp::FixedType>>([59]) -> ([60]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([60]) -> ([61]);
store_temp<RangeCheck>([52]) -> ([62]);
store_temp<GasBuiltin>([42]) -> ([63]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([61]) -> ([64]);
return([62], [63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([58]) -> ([65]);
store_temp<RangeCheck>([52]) -> ([66]);
store_temp<GasBuiltin>([42]) -> ([67]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([65]) -> ([68]);
return([66], [67], [68]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([50]) -> ([69]);
store_temp<RangeCheck>([41]) -> ([70]);
store_temp<GasBuiltin>([42]) -> ([71]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([69]) -> ([72]);
return([70], [71], [72]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<u128>([26]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([37]) -> ([73]);
store_temp<RangeCheck>([31]) -> ([74]);
store_temp<GasBuiltin>([14]) -> ([75]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([73]) -> ([76]);
return([74], [75], [76]);
branch_align() -> ();
store_temp<RangeCheck>([25]) -> ([79]);
dup<fp::types::fp::FixedType>([2]) -> ([2], [80]);
store_temp<fp::types::fp::FixedType>([80]) -> ([80]);
store_temp<fp::types::fp::FixedType>([2]) -> ([81]);
function_call<user@fp::math::core::mul>([79], [80], [81]) -> ([77], [78]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([78]) { fallthrough([82]) 3115([83]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([82]) -> ([84]);
struct_construct<Unit>() -> ([85]);
enum_init<core::bool, 0>([85]) -> ([86]);
store_temp<RangeCheck>([77]) -> ([90]);
store_temp<GasBuiltin>([14]) -> ([91]);
store_temp<fp::types::fp::FixedType>([84]) -> ([92]);
store_temp<u128>([26]) -> ([93]);
store_temp<core::bool>([86]) -> ([94]);
function_call<user@fp::math::core::_pow_int>([90], [91], [92], [93], [94]) -> ([87], [88], [89]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([89]) { fallthrough([95]) 3109([96]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([95]) -> ([97]);
struct_construct<Tuple<fp::types::fp::FixedType>>([97]) -> ([98]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([98]) -> ([99]);
store_temp<RangeCheck>([87]) -> ([100]);
store_temp<GasBuiltin>([88]) -> ([101]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([99]) -> ([102]);
return([100], [101], [102]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([96]) -> ([103]);
store_temp<RangeCheck>([87]) -> ([104]);
store_temp<GasBuiltin>([88]) -> ([105]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([103]) -> ([106]);
return([104], [105], [106]);
branch_align() -> ();
drop<u128>([26]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([83]) -> ([107]);
store_temp<RangeCheck>([77]) -> ([108]);
store_temp<GasBuiltin>([14]) -> ([109]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([107]) -> ([110]);
return([108], [109], [110]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<u128>([26]) -> ();
drop<u128>([27]) -> ();
struct_construct<Unit>() -> ([111]);
enum_init<core::bool, 0>([111]) -> ([112]);
u128_const<18446744073709551616>() -> ([113]);
store_temp<u128>([113]) -> ([115]);
store_temp<core::bool>([112]) -> ([116]);
function_call<user@fp::types::fp::FixedImpl::new>([115], [116]) -> ([114]);
struct_construct<Tuple<fp::types::fp::FixedType>>([114]) -> ([117]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([117]) -> ([118]);
store_temp<RangeCheck>([25]) -> ([119]);
store_temp<GasBuiltin>([14]) -> ([120]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([118]) -> ([121]);
return([119], [120], [121]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([23]) -> ([122]);
store_temp<RangeCheck>([13]) -> ([123]);
store_temp<GasBuiltin>([14]) -> ([124]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([122]) -> ([125]);
return([123], [124], [125]);
branch_align() -> ();
struct_construct<Unit>() -> ([126]);
enum_init<core::bool, 0>([126]) -> ([127]);
u128_const<18446744073709551616>() -> ([128]);
store_temp<u128>([128]) -> ([129]);
store_temp<core::bool>([127]) -> ([130]);
function_call<user@fp::types::fp::FixedImpl::new>([129], [130]) -> ([5]);
struct_construct<Unit>() -> ([131]);
enum_init<core::bool, 0>([131]) -> ([132]);
store_temp<RangeCheck>([13]) -> ([136]);
store_temp<GasBuiltin>([14]) -> ([137]);
store_temp<fp::types::fp::FixedType>([2]) -> ([138]);
store_temp<u128>([3]) -> ([139]);
store_temp<core::bool>([132]) -> ([140]);
store_local<fp::types::fp::FixedType>([6], [5]) -> ([5]);
function_call<user@fp::math::core::_pow_int>([136], [137], [138], [139], [140]) -> ([133], [134], [135]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([135]) { fallthrough([141]) 3184([142]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([141]) -> ([143]);
store_temp<RangeCheck>([133]) -> ([146]);
store_temp<fp::types::fp::FixedType>([5]) -> ([147]);
store_temp<fp::types::fp::FixedType>([143]) -> ([148]);
function_call<user@fp::math::core::div>([146], [147], [148]) -> ([144], [145]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([145]) { fallthrough([149]) 3178([150]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([149]) -> ([151]);
struct_construct<Tuple<fp::types::fp::FixedType>>([151]) -> ([152]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([152]) -> ([153]);
store_temp<RangeCheck>([144]) -> ([154]);
store_temp<GasBuiltin>([134]) -> ([155]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([153]) -> ([156]);
return([154], [155], [156]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([150]) -> ([157]);
store_temp<RangeCheck>([144]) -> ([158]);
store_temp<GasBuiltin>([134]) -> ([159]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([157]) -> ([160]);
return([158], [159], [160]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([5]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([142]) -> ([161]);
store_temp<RangeCheck>([133]) -> ([162]);
store_temp<GasBuiltin>([134]) -> ([163]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([161]) -> ([164]);
return([162], [163], [164]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<Uninitialized<fp::types::fp::FixedType>>([6]) -> ();
drop<u128>([3]) -> ();
drop<core::bool>([4]) -> ();
array_new<felt252>() -> ([165]);
felt252_const<5197639>() -> ([166]);
store_temp<felt252>([166]) -> ([166]);
array_append<felt252>([165], [166]) -> ([167]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([167]) -> ([168]);
store_temp<RangeCheck>([15]) -> ([169]);
store_temp<GasBuiltin>([16]) -> ([170]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([168]) -> ([171]);
return([169], [170], [171]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([2]) -> ();
drop<Uninitialized<fp::types::fp::FixedType>>([6]) -> ();
drop<u128>([3]) -> ();
drop<core::bool>([4]) -> ();
array_new<felt252>() -> ([172]);
felt252_const<375233589013918064796019>() -> ([173]);
store_temp<felt252>([173]) -> ([173]);
array_append<felt252>([172], [173]) -> ([174]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([174]) -> ([175]);
store_temp<RangeCheck>([10]) -> ([176]);
store_temp<GasBuiltin>([11]) -> ([177]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([175]) -> ([178]);
return([176], [177], [178]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([2], [3]);
drop<core::bool>([3]) -> ();
u128_const<18446744073709551616>() -> ([4]);
store_temp<u128>([4]) -> ([6]);
function_call<user@core::integer::u128_as_non_zero>([6]) -> ([5]);
enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>([5]) { fallthrough([7]) 3234([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<u128>>>([7]) -> ([9]);
u128_safe_divmod([0], [2], [9]) -> ([10], [11], [12]);
struct_construct<Tuple<u128, u128>>([11], [12]) -> ([13]);
struct_construct<Tuple<Tuple<u128, u128>>>([13]) -> ([14]);
enum_init<core::PanicResult::<((core::integer::u128, core::integer::u128),)>, 0>([14]) -> ([15]);
store_temp<RangeCheck>([10]) -> ([16]);
store_temp<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([15]) -> ([17]);
return([16], [17]);
branch_align() -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<((core::integer::u128, core::integer::u128),)>, 1>([8]) -> ([18]);
store_temp<RangeCheck>([0]) -> ([19]);
store_temp<core::PanicResult::<((core::integer::u128, core::integer::u128),)>>([18]) -> ([20]);
return([19], [20]);
felt252_const<5>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([3]) { fallthrough([6]) 3285([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([6]) -> ([8]);
store_temp<fp::types::fp::FixedType>([8]) -> ([10]);
function_call<user@fp::types::fp::FixedInto::into>([10]) -> ([9]);
felt252_const<5>() -> ([11]);
felt252_const<18446744073709551616>() -> ([12]);
store_temp<felt252>([11]) -> ([11]);
felt252_mul([11], [12]) -> ([13]);
store_temp<felt252>([13]) -> ([13]);
felt252_sub([9], [13]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
felt252_is_zero([14]) { fallthrough() 3262([15]) };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
store_temp<core::bool>([17]) -> ([18]);
jump() { 3267() };
branch_align() -> ();
drop<NonZero<felt252>>([15]) -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 0>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([18]);
felt252_const<2138404743268917596156934978104436>() -> ([21]);
rename<core::bool>([18]) -> ([23]);
store_temp<felt252>([21]) -> ([24]);
function_call<user@core::assert>([23], [24]) -> ([22]);
enum_match<core::PanicResult::<((),)>>([22]) { fallthrough([25]) 3280([26]) };
branch_align() -> ();
drop<Tuple<Unit>>([25]) -> ();
struct_construct<Unit>() -> ([27]);
struct_construct<Tuple<Unit>>([27]) -> ([28]);
enum_init<core::PanicResult::<((),)>, 0>([28]) -> ([29]);
store_temp<RangeCheck>([2]) -> ([30]);
store_temp<core::PanicResult::<((),)>>([29]) -> ([31]);
return([30], [31]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([26]) -> ([32]);
store_temp<RangeCheck>([2]) -> ([33]);
store_temp<core::PanicResult::<((),)>>([32]) -> ([34]);
return([33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([35]);
store_temp<RangeCheck>([2]) -> ([36]);
store_temp<core::PanicResult::<((),)>>([35]) -> ([37]);
return([36], [37]);
struct_construct<Unit>() -> ([1]);
enum_init<core::bool, 0>([1]) -> ([2]);
u128_const<5>() -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<u128>([3]) -> ([7]);
store_temp<core::bool>([2]) -> ([8]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([6], [7], [8]) -> ([4], [5]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([5]) { fallthrough([9]) 3530([10]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([9]) -> ([11]);
store_temp<RangeCheck>([4]) -> ([14]);
store_temp<fp::types::fp::FixedType>([11]) -> ([15]);
function_call<user@fp::types::fp::FixedTryIntoU128::try_into>([14], [15]) -> ([12], [13]);
enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([13]) { fallthrough([16]) 3525([17]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>>([16]) -> ([18]);
enum_match<core::option::Option::<core::integer::u128>>([18]) { fallthrough([19]) 3515([20]) };
branch_align() -> ();
u128_const<5>() -> ([21]);
u128_eq([19], [21]) { fallthrough() 3315() };
branch_align() -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 0>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([24]);
jump() { 3319() };
branch_align() -> ();
struct_construct<Unit>() -> ([25]);
enum_init<core::bool, 1>([25]) -> ([26]);
store_temp<core::bool>([26]) -> ([24]);
felt252_const<2138404743268917596156934978104436>() -> ([27]);
rename<core::bool>([24]) -> ([29]);
store_temp<felt252>([27]) -> ([30]);
function_call<user@core::assert>([29], [30]) -> ([28]);
enum_match<core::PanicResult::<((),)>>([28]) { fallthrough([31]) 3510([32]) };
branch_align() -> ();
drop<Tuple<Unit>>([31]) -> ();
u128_const<5>() -> ([33]);
u128_const<18446744073709551616>() -> ([34]);
store_temp<RangeCheck>([12]) -> ([37]);
store_temp<u128>([33]) -> ([38]);
store_temp<u128>([34]) -> ([39]);
function_call<user@core::integer::U128Mul::mul>([37], [38], [39]) -> ([35], [36]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([36]) { fallthrough([40]) 3505([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([40]) -> ([42]);
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
store_temp<u128>([42]) -> ([46]);
store_temp<core::bool>([44]) -> ([47]);
function_call<user@fp::types::fp::FixedImpl::new>([46], [47]) -> ([45]);
store_temp<RangeCheck>([35]) -> ([50]);
store_temp<fp::types::fp::FixedType>([45]) -> ([51]);
function_call<user@fp::types::fp::FixedTryIntoU128::try_into>([50], [51]) -> ([48], [49]);
enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([49]) { fallthrough([52]) 3500([53]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>>([52]) -> ([54]);
enum_match<core::option::Option::<core::integer::u128>>([54]) { fallthrough([55]) 3490([56]) };
branch_align() -> ();
u128_const<5>() -> ([57]);
u128_eq([55], [57]) { fallthrough() 3355() };
branch_align() -> ();
struct_construct<Unit>() -> ([58]);
enum_init<core::bool, 0>([58]) -> ([59]);
store_temp<core::bool>([59]) -> ([60]);
jump() { 3359() };
branch_align() -> ();
struct_construct<Unit>() -> ([61]);
enum_init<core::bool, 1>([61]) -> ([62]);
store_temp<core::bool>([62]) -> ([60]);
felt252_const<2138404743268917596156934978104436>() -> ([63]);
rename<core::bool>([60]) -> ([65]);
store_temp<felt252>([63]) -> ([66]);
function_call<user@core::assert>([65], [66]) -> ([64]);
enum_match<core::PanicResult::<((),)>>([64]) { fallthrough([67]) 3485([68]) };
branch_align() -> ();
drop<Tuple<Unit>>([67]) -> ();
struct_construct<Unit>() -> ([69]);
enum_init<core::bool, 0>([69]) -> ([70]);
u128_const<57952155664616982739>() -> ([71]);
store_temp<u128>([71]) -> ([73]);
store_temp<core::bool>([70]) -> ([74]);
function_call<user@fp::types::fp::FixedImpl::new>([73], [74]) -> ([72]);
store_temp<RangeCheck>([48]) -> ([77]);
store_temp<fp::types::fp::FixedType>([72]) -> ([78]);
function_call<user@fp::types::fp::FixedTryIntoU128::try_into>([77], [78]) -> ([75], [76]);
enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([76]) { fallthrough([79]) 3480([80]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>>([79]) -> ([81]);
enum_match<core::option::Option::<core::integer::u128>>([81]) { fallthrough([82]) 3470([83]) };
branch_align() -> ();
u128_const<3>() -> ([84]);
u128_eq([82], [84]) { fallthrough() 3387() };
branch_align() -> ();
struct_construct<Unit>() -> ([85]);
enum_init<core::bool, 0>([85]) -> ([86]);
store_temp<core::bool>([86]) -> ([87]);
jump() { 3391() };
branch_align() -> ();
struct_construct<Unit>() -> ([88]);
enum_init<core::bool, 1>([88]) -> ([89]);
store_temp<core::bool>([89]) -> ([87]);
felt252_const<2138404743268917596156934978104436>() -> ([90]);
rename<core::bool>([87]) -> ([92]);
store_temp<felt252>([90]) -> ([93]);
function_call<user@core::assert>([92], [93]) -> ([91]);
enum_match<core::PanicResult::<((),)>>([91]) { fallthrough([94]) 3465([95]) };
branch_align() -> ();
drop<Tuple<Unit>>([94]) -> ();
struct_construct<Unit>() -> ([96]);
enum_init<core::bool, 0>([96]) -> ([97]);
u128_const<0>() -> ([98]);
store_temp<RangeCheck>([75]) -> ([101]);
store_temp<u128>([98]) -> ([102]);
store_temp<core::bool>([97]) -> ([103]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([101], [102], [103]) -> ([99], [100]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([100]) { fallthrough([104]) 3460([105]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([104]) -> ([106]);
store_temp<RangeCheck>([99]) -> ([109]);
store_temp<fp::types::fp::FixedType>([106]) -> ([110]);
function_call<user@fp::types::fp::FixedTryIntoU128::try_into>([109], [110]) -> ([107], [108]);
enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([108]) { fallthrough([111]) 3455([112]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>>([111]) -> ([113]);
enum_match<core::option::Option::<core::integer::u128>>([113]) { fallthrough([114]) 3445([115]) };
branch_align() -> ();
u128_const<0>() -> ([116]);
u128_eq([114], [116]) { fallthrough() 3423() };
branch_align() -> ();
struct_construct<Unit>() -> ([117]);
enum_init<core::bool, 0>([117]) -> ([118]);
store_temp<core::bool>([118]) -> ([119]);
jump() { 3427() };
branch_align() -> ();
struct_construct<Unit>() -> ([120]);
enum_init<core::bool, 1>([120]) -> ([121]);
store_temp<core::bool>([121]) -> ([119]);
felt252_const<2138404743268917596156934978104436>() -> ([122]);
rename<core::bool>([119]) -> ([124]);
store_temp<felt252>([122]) -> ([125]);
function_call<user@core::assert>([124], [125]) -> ([123]);
enum_match<core::PanicResult::<((),)>>([123]) { fallthrough([126]) 3440([127]) };
branch_align() -> ();
drop<Tuple<Unit>>([126]) -> ();
struct_construct<Unit>() -> ([128]);
struct_construct<Tuple<Unit>>([128]) -> ([129]);
enum_init<core::PanicResult::<((),)>, 0>([129]) -> ([130]);
store_temp<RangeCheck>([107]) -> ([131]);
store_temp<core::PanicResult::<((),)>>([130]) -> ([132]);
return([131], [132]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([127]) -> ([133]);
store_temp<RangeCheck>([107]) -> ([134]);
store_temp<core::PanicResult::<((),)>>([133]) -> ([135]);
return([134], [135]);
branch_align() -> ();
drop<Unit>([115]) -> ();
array_new<felt252>() -> ([136]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([137]);
store_temp<felt252>([137]) -> ([137]);
array_append<felt252>([136], [137]) -> ([138]);
enum_init<core::PanicResult::<((),)>, 1>([138]) -> ([139]);
store_temp<RangeCheck>([107]) -> ([140]);
store_temp<core::PanicResult::<((),)>>([139]) -> ([141]);
return([140], [141]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([112]) -> ([142]);
store_temp<RangeCheck>([107]) -> ([143]);
store_temp<core::PanicResult::<((),)>>([142]) -> ([144]);
return([143], [144]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([105]) -> ([145]);
store_temp<RangeCheck>([99]) -> ([146]);
store_temp<core::PanicResult::<((),)>>([145]) -> ([147]);
return([146], [147]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([95]) -> ([148]);
store_temp<RangeCheck>([75]) -> ([149]);
store_temp<core::PanicResult::<((),)>>([148]) -> ([150]);
return([149], [150]);
branch_align() -> ();
drop<Unit>([83]) -> ();
array_new<felt252>() -> ([151]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([152]);
store_temp<felt252>([152]) -> ([152]);
array_append<felt252>([151], [152]) -> ([153]);
enum_init<core::PanicResult::<((),)>, 1>([153]) -> ([154]);
store_temp<RangeCheck>([75]) -> ([155]);
store_temp<core::PanicResult::<((),)>>([154]) -> ([156]);
return([155], [156]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([80]) -> ([157]);
store_temp<RangeCheck>([75]) -> ([158]);
store_temp<core::PanicResult::<((),)>>([157]) -> ([159]);
return([158], [159]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([68]) -> ([160]);
store_temp<RangeCheck>([48]) -> ([161]);
store_temp<core::PanicResult::<((),)>>([160]) -> ([162]);
return([161], [162]);
branch_align() -> ();
drop<Unit>([56]) -> ();
array_new<felt252>() -> ([163]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([164]);
store_temp<felt252>([164]) -> ([164]);
array_append<felt252>([163], [164]) -> ([165]);
enum_init<core::PanicResult::<((),)>, 1>([165]) -> ([166]);
store_temp<RangeCheck>([48]) -> ([167]);
store_temp<core::PanicResult::<((),)>>([166]) -> ([168]);
return([167], [168]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([53]) -> ([169]);
store_temp<RangeCheck>([48]) -> ([170]);
store_temp<core::PanicResult::<((),)>>([169]) -> ([171]);
return([170], [171]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([41]) -> ([172]);
store_temp<RangeCheck>([35]) -> ([173]);
store_temp<core::PanicResult::<((),)>>([172]) -> ([174]);
return([173], [174]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([32]) -> ([175]);
store_temp<RangeCheck>([12]) -> ([176]);
store_temp<core::PanicResult::<((),)>>([175]) -> ([177]);
return([176], [177]);
branch_align() -> ();
drop<Unit>([20]) -> ();
array_new<felt252>() -> ([178]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([179]);
store_temp<felt252>([179]) -> ([179]);
array_append<felt252>([178], [179]) -> ([180]);
enum_init<core::PanicResult::<((),)>, 1>([180]) -> ([181]);
store_temp<RangeCheck>([12]) -> ([182]);
store_temp<core::PanicResult::<((),)>>([181]) -> ([183]);
return([182], [183]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([17]) -> ([184]);
store_temp<RangeCheck>([12]) -> ([185]);
store_temp<core::PanicResult::<((),)>>([184]) -> ([186]);
return([185], [186]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([10]) -> ([187]);
store_temp<RangeCheck>([4]) -> ([188]);
store_temp<core::PanicResult::<((),)>>([187]) -> ([189]);
return([188], [189]);
struct_construct<Unit>() -> ([1]);
enum_init<core::bool, 1>([1]) -> ([2]);
u128_const<1>() -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<u128>([3]) -> ([7]);
store_temp<core::bool>([2]) -> ([8]);
function_call<user@fp::types::fp::FixedImpl::new_unscaled>([6], [7], [8]) -> ([4], [5]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([5]) { fallthrough([9]) 3575([10]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([9]) -> ([11]);
store_temp<RangeCheck>([4]) -> ([14]);
store_temp<fp::types::fp::FixedType>([11]) -> ([15]);
function_call<user@fp::types::fp::FixedTryIntoU128::try_into>([14], [15]) -> ([12], [13]);
enum_match<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([13]) { fallthrough([16]) 3570([17]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::option::Option::<core::integer::u128>>>([16]) -> ([18]);
enum_match<core::option::Option::<core::integer::u128>>([18]) { fallthrough([19]) 3560([20]) };
branch_align() -> ();
drop<u128>([19]) -> ();
struct_construct<Unit>() -> ([21]);
struct_construct<Tuple<Unit>>([21]) -> ([22]);
enum_init<core::PanicResult::<((),)>, 0>([22]) -> ([23]);
store_temp<RangeCheck>([12]) -> ([24]);
store_temp<core::PanicResult::<((),)>>([23]) -> ([25]);
return([24], [25]);
branch_align() -> ();
drop<Unit>([20]) -> ();
array_new<felt252>() -> ([26]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([27]);
store_temp<felt252>([27]) -> ([27]);
array_append<felt252>([26], [27]) -> ([28]);
enum_init<core::PanicResult::<((),)>, 1>([28]) -> ([29]);
store_temp<RangeCheck>([12]) -> ([30]);
store_temp<core::PanicResult::<((),)>>([29]) -> ([31]);
return([30], [31]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([17]) -> ([32]);
store_temp<RangeCheck>([12]) -> ([33]);
store_temp<core::PanicResult::<((),)>>([32]) -> ([34]);
return([33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([10]) -> ([35]);
store_temp<RangeCheck>([4]) -> ([36]);
store_temp<core::PanicResult::<((),)>>([35]) -> ([37]);
return([36], [37]);
felt252_const<340282366920938463463374607431768211456>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([3]) { fallthrough([6]) 3593([7]) };
branch_align() -> ();
drop<Tuple<fp::types::fp::FixedType>>([6]) -> ();
struct_construct<Unit>() -> ([8]);
struct_construct<Tuple<Unit>>([8]) -> ([9]);
enum_init<core::PanicResult::<((),)>, 0>([9]) -> ([10]);
store_temp<RangeCheck>([2]) -> ([11]);
store_temp<core::PanicResult::<((),)>>([10]) -> ([12]);
return([11], [12]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([13]);
store_temp<RangeCheck>([2]) -> ([14]);
store_temp<core::PanicResult::<((),)>>([13]) -> ([15]);
return([14], [15]);
felt252_const<-1>() -> ([1]);
felt252_const<340282366920938463463374607431768211456>() -> ([2]);
store_temp<felt252>([2]) -> ([2]);
felt252_mul([2], [1]) -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<felt252>([3]) -> ([7]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([6], [7]) -> ([4], [5]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([5]) { fallthrough([8]) 3614([9]) };
branch_align() -> ();
drop<Tuple<fp::types::fp::FixedType>>([8]) -> ();
struct_construct<Unit>() -> ([10]);
struct_construct<Tuple<Unit>>([10]) -> ([11]);
enum_init<core::PanicResult::<((),)>, 0>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([13]);
store_temp<core::PanicResult::<((),)>>([12]) -> ([14]);
return([13], [14]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([9]) -> ([15]);
store_temp<RangeCheck>([4]) -> ([16]);
store_temp<core::PanicResult::<((),)>>([15]) -> ([17]);
return([16], [17]);
felt252_const<-1>() -> ([1]);
felt252_const<1809251394333065606848661391547535052811553607665798349986546028067936010240>() -> ([2]);
store_temp<felt252>([2]) -> ([2]);
felt252_mul([2], [1]) -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<felt252>([3]) -> ([7]);
function_call<user@fp::types::fp::_felt_sign>([6], [7]) -> ([4], [5]);
struct_construct<Unit>() -> ([8]);
enum_init<core::bool, 1>([8]) -> ([9]);
felt252_const<1809251394333065606848661391547535052811553607665798349986546028067936010240>() -> ([10]);
store_temp<core::bool>([9]) -> ([9]);
bool_eq([5], [9]) { fallthrough() 3636() };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<core::bool>([12]) -> ([13]);
jump() { 3640() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([13]);
felt252_const<2138404743268917596156934978104436>() -> ([16]);
rename<core::bool>([13]) -> ([18]);
store_temp<felt252>([16]) -> ([19]);
function_call<user@core::assert>([18], [19]) -> ([17]);
enum_match<core::PanicResult::<((),)>>([17]) { fallthrough([20]) 3774([21]) };
branch_align() -> ();
drop<Tuple<Unit>>([20]) -> ();
felt252_const<-1>() -> ([22]);
felt252_const<1>() -> ([23]);
store_temp<felt252>([23]) -> ([23]);
felt252_mul([23], [22]) -> ([24]);
store_temp<RangeCheck>([4]) -> ([27]);
store_temp<felt252>([24]) -> ([28]);
function_call<user@fp::types::fp::_felt_sign>([27], [28]) -> ([25], [26]);
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([30]);
bool_eq([26], [30]) { fallthrough() 3663() };
branch_align() -> ();
struct_construct<Unit>() -> ([31]);
enum_init<core::bool, 0>([31]) -> ([32]);
store_temp<core::bool>([32]) -> ([33]);
jump() { 3667() };
branch_align() -> ();
struct_construct<Unit>() -> ([34]);
enum_init<core::bool, 1>([34]) -> ([35]);
store_temp<core::bool>([35]) -> ([33]);
felt252_const<2138404743268917596156934978104436>() -> ([36]);
rename<core::bool>([33]) -> ([38]);
store_temp<felt252>([36]) -> ([39]);
function_call<user@core::assert>([38], [39]) -> ([37]);
enum_match<core::PanicResult::<((),)>>([37]) { fallthrough([40]) 3768([41]) };
branch_align() -> ();
drop<Tuple<Unit>>([40]) -> ();
felt252_const<0>() -> ([42]);
store_temp<RangeCheck>([25]) -> ([45]);
store_temp<felt252>([42]) -> ([46]);
function_call<user@fp::types::fp::_felt_sign>([45], [46]) -> ([43], [44]);
struct_construct<Unit>() -> ([47]);
enum_init<core::bool, 0>([47]) -> ([48]);
store_temp<core::bool>([48]) -> ([48]);
bool_eq([44], [48]) { fallthrough() 3687() };
branch_align() -> ();
struct_construct<Unit>() -> ([49]);
enum_init<core::bool, 0>([49]) -> ([50]);
store_temp<core::bool>([50]) -> ([51]);
jump() { 3691() };
branch_align() -> ();
struct_construct<Unit>() -> ([52]);
enum_init<core::bool, 1>([52]) -> ([53]);
store_temp<core::bool>([53]) -> ([51]);
felt252_const<2138404743268917596156934978104436>() -> ([54]);
rename<core::bool>([51]) -> ([56]);
store_temp<felt252>([54]) -> ([57]);
function_call<user@core::assert>([56], [57]) -> ([55]);
enum_match<core::PanicResult::<((),)>>([55]) { fallthrough([58]) 3762([59]) };
branch_align() -> ();
drop<Tuple<Unit>>([58]) -> ();
felt252_const<1>() -> ([60]);
store_temp<RangeCheck>([43]) -> ([63]);
store_temp<felt252>([60]) -> ([64]);
function_call<user@fp::types::fp::_felt_sign>([63], [64]) -> ([61], [62]);
struct_construct<Unit>() -> ([65]);
enum_init<core::bool, 0>([65]) -> ([66]);
store_temp<core::bool>([66]) -> ([66]);
bool_eq([62], [66]) { fallthrough() 3711() };
branch_align() -> ();
struct_construct<Unit>() -> ([67]);
enum_init<core::bool, 0>([67]) -> ([68]);
store_temp<core::bool>([68]) -> ([69]);
jump() { 3715() };
branch_align() -> ();
struct_construct<Unit>() -> ([70]);
enum_init<core::bool, 1>([70]) -> ([71]);
store_temp<core::bool>([71]) -> ([69]);
felt252_const<2138404743268917596156934978104436>() -> ([72]);
rename<core::bool>([69]) -> ([74]);
store_temp<felt252>([72]) -> ([75]);
function_call<user@core::assert>([74], [75]) -> ([73]);
enum_match<core::PanicResult::<((),)>>([73]) { fallthrough([76]) 3756([77]) };
branch_align() -> ();
drop<Tuple<Unit>>([76]) -> ();
store_temp<RangeCheck>([61]) -> ([80]);
store_temp<felt252>([10]) -> ([81]);
function_call<user@fp::types::fp::_felt_sign>([80], [81]) -> ([78], [79]);
struct_construct<Unit>() -> ([82]);
enum_init<core::bool, 0>([82]) -> ([83]);
store_temp<core::bool>([83]) -> ([83]);
bool_eq([79], [83]) { fallthrough() 3734() };
branch_align() -> ();
struct_construct<Unit>() -> ([84]);
enum_init<core::bool, 0>([84]) -> ([85]);
store_temp<core::bool>([85]) -> ([86]);
jump() { 3738() };
branch_align() -> ();
struct_construct<Unit>() -> ([87]);
enum_init<core::bool, 1>([87]) -> ([88]);
store_temp<core::bool>([88]) -> ([86]);
felt252_const<2138404743268917596156934978104436>() -> ([89]);
rename<core::bool>([86]) -> ([91]);
store_temp<felt252>([89]) -> ([92]);
function_call<user@core::assert>([91], [92]) -> ([90]);
enum_match<core::PanicResult::<((),)>>([90]) { fallthrough([93]) 3751([94]) };
branch_align() -> ();
drop<Tuple<Unit>>([93]) -> ();
struct_construct<Unit>() -> ([95]);
struct_construct<Tuple<Unit>>([95]) -> ([96]);
enum_init<core::PanicResult::<((),)>, 0>([96]) -> ([97]);
store_temp<RangeCheck>([78]) -> ([98]);
store_temp<core::PanicResult::<((),)>>([97]) -> ([99]);
return([98], [99]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([94]) -> ([100]);
store_temp<RangeCheck>([78]) -> ([101]);
store_temp<core::PanicResult::<((),)>>([100]) -> ([102]);
return([101], [102]);
branch_align() -> ();
drop<felt252>([10]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([77]) -> ([103]);
store_temp<RangeCheck>([61]) -> ([104]);
store_temp<core::PanicResult::<((),)>>([103]) -> ([105]);
return([104], [105]);
branch_align() -> ();
drop<felt252>([10]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([59]) -> ([106]);
store_temp<RangeCheck>([43]) -> ([107]);
store_temp<core::PanicResult::<((),)>>([106]) -> ([108]);
return([107], [108]);
branch_align() -> ();
drop<felt252>([10]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([41]) -> ([109]);
store_temp<RangeCheck>([25]) -> ([110]);
store_temp<core::PanicResult::<((),)>>([109]) -> ([111]);
return([110], [111]);
branch_align() -> ();
drop<felt252>([10]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([21]) -> ([112]);
store_temp<RangeCheck>([4]) -> ([113]);
store_temp<core::PanicResult::<((),)>>([112]) -> ([114]);
return([113], [114]);
felt252_const<5>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::_felt_abs>([4], [5]) -> ([2], [3]);
felt252_const<5>() -> ([6]);
felt252_sub([3], [6]) -> ([7]);
store_temp<felt252>([7]) -> ([7]);
felt252_is_zero([7]) { fallthrough() 3793([8]) };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([11]);
jump() { 3798() };
branch_align() -> ();
drop<NonZero<felt252>>([8]) -> ();
struct_construct<Unit>() -> ([12]);
enum_init<core::bool, 0>([12]) -> ([13]);
store_temp<core::bool>([13]) -> ([11]);
felt252_const<2387862688623893971225018062752805883948424103049997348723>() -> ([14]);
rename<core::bool>([11]) -> ([16]);
store_temp<felt252>([14]) -> ([17]);
function_call<user@core::assert>([16], [17]) -> ([15]);
enum_match<core::PanicResult::<((),)>>([15]) { fallthrough([18]) 3874([19]) };
branch_align() -> ();
drop<Tuple<Unit>>([18]) -> ();
felt252_const<-1>() -> ([20]);
felt252_const<5>() -> ([21]);
store_temp<felt252>([21]) -> ([21]);
felt252_mul([21], [20]) -> ([22]);
store_temp<RangeCheck>([2]) -> ([25]);
store_temp<felt252>([22]) -> ([26]);
function_call<user@fp::types::fp::_felt_abs>([25], [26]) -> ([23], [24]);
felt252_const<5>() -> ([27]);
felt252_sub([24], [27]) -> ([28]);
store_temp<felt252>([28]) -> ([28]);
felt252_is_zero([28]) { fallthrough() 3821([29]) };
branch_align() -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::bool, 1>([30]) -> ([31]);
store_temp<core::bool>([31]) -> ([32]);
jump() { 3826() };
branch_align() -> ();
drop<NonZero<felt252>>([29]) -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<core::bool>([34]) -> ([32]);
felt252_const<2387862688623893970531098741390777380361094451627706838899>() -> ([35]);
rename<core::bool>([32]) -> ([37]);
store_temp<felt252>([35]) -> ([38]);
function_call<user@core::assert>([37], [38]) -> ([36]);
enum_match<core::PanicResult::<((),)>>([36]) { fallthrough([39]) 3869([40]) };
branch_align() -> ();
drop<Tuple<Unit>>([39]) -> ();
felt252_const<0>() -> ([41]);
store_temp<RangeCheck>([23]) -> ([44]);
store_temp<felt252>([41]) -> ([45]);
function_call<user@fp::types::fp::_felt_abs>([44], [45]) -> ([42], [43]);
felt252_const<0>() -> ([46]);
felt252_sub([43], [46]) -> ([47]);
store_temp<felt252>([47]) -> ([47]);
felt252_is_zero([47]) { fallthrough() 3846([48]) };
branch_align() -> ();
struct_construct<Unit>() -> ([49]);
enum_init<core::bool, 1>([49]) -> ([50]);
store_temp<core::bool>([50]) -> ([51]);
jump() { 3851() };
branch_align() -> ();
drop<NonZero<felt252>>([48]) -> ();
struct_construct<Unit>() -> ([52]);
enum_init<core::bool, 0>([52]) -> ([53]);
store_temp<core::bool>([53]) -> ([51]);
felt252_const<555967606749360903478679020927831129604990771248>() -> ([54]);
rename<core::bool>([51]) -> ([56]);
store_temp<felt252>([54]) -> ([57]);
function_call<user@core::assert>([56], [57]) -> ([55]);
enum_match<core::PanicResult::<((),)>>([55]) { fallthrough([58]) 3864([59]) };
branch_align() -> ();
drop<Tuple<Unit>>([58]) -> ();
struct_construct<Unit>() -> ([60]);
struct_construct<Tuple<Unit>>([60]) -> ([61]);
enum_init<core::PanicResult::<((),)>, 0>([61]) -> ([62]);
store_temp<RangeCheck>([42]) -> ([63]);
store_temp<core::PanicResult::<((),)>>([62]) -> ([64]);
return([63], [64]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([59]) -> ([65]);
store_temp<RangeCheck>([42]) -> ([66]);
store_temp<core::PanicResult::<((),)>>([65]) -> ([67]);
return([66], [67]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([40]) -> ([68]);
store_temp<RangeCheck>([23]) -> ([69]);
store_temp<core::PanicResult::<((),)>>([68]) -> ([70]);
return([69], [70]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([19]) -> ([71]);
store_temp<RangeCheck>([2]) -> ([72]);
store_temp<core::PanicResult::<((),)>>([71]) -> ([73]);
return([72], [73]);
struct_construct<Unit>() -> ([1]);
enum_init<core::bool, 0>([1]) -> ([2]);
u128_const<18446744073709551616>() -> ([3]);
store_temp<u128>([3]) -> ([5]);
store_temp<core::bool>([2]) -> ([6]);
function_call<user@fp::types::fp::FixedImpl::new>([5], [6]) -> ([4]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<fp::types::fp::FixedType>([4]) -> ([10]);
function_call<user@fp::math::trig::acos>([9], [10]) -> ([7], [8]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([8]) { fallthrough([11]) 3925([12]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([11]) -> ([13]);
store_temp<fp::types::fp::FixedType>([13]) -> ([15]);
function_call<user@fp::types::fp::FixedInto::into>([15]) -> ([14]);
felt252_const<0>() -> ([16]);
felt252_sub([14], [16]) -> ([17]);
store_temp<felt252>([17]) -> ([17]);
felt252_is_zero([17]) { fallthrough() 3902([18]) };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 1>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([21]);
jump() { 3907() };
branch_align() -> ();
drop<NonZero<felt252>>([18]) -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 0>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([21]);
felt252_const<127458855108554219970326117>() -> ([24]);
rename<core::bool>([21]) -> ([26]);
store_temp<felt252>([24]) -> ([27]);
function_call<user@core::assert>([26], [27]) -> ([25]);
enum_match<core::PanicResult::<((),)>>([25]) { fallthrough([28]) 3920([29]) };
branch_align() -> ();
drop<Tuple<Unit>>([28]) -> ();
struct_construct<Unit>() -> ([30]);
struct_construct<Tuple<Unit>>([30]) -> ([31]);
enum_init<core::PanicResult::<((),)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([7]) -> ([33]);
store_temp<core::PanicResult::<((),)>>([32]) -> ([34]);
return([33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([29]) -> ([35]);
store_temp<RangeCheck>([7]) -> ([36]);
store_temp<core::PanicResult::<((),)>>([35]) -> ([37]);
return([36], [37]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([12]) -> ([38]);
store_temp<RangeCheck>([7]) -> ([39]);
store_temp<core::PanicResult::<((),)>>([38]) -> ([40]);
return([39], [40]);
struct_construct<Unit>() -> ([1]);
enum_init<core::bool, 0>([1]) -> ([2]);
u128_const<18446744073709551616>() -> ([3]);
store_temp<u128>([3]) -> ([5]);
store_temp<core::bool>([2]) -> ([6]);
function_call<user@fp::types::fp::FixedImpl::new>([5], [6]) -> ([4]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<fp::types::fp::FixedType>([4]) -> ([10]);
function_call<user@fp::math::trig::asin>([9], [10]) -> ([7], [8]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([8]) { fallthrough([11]) 3976([12]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([11]) -> ([13]);
store_temp<fp::types::fp::FixedType>([13]) -> ([15]);
function_call<user@fp::types::fp::FixedInto::into>([15]) -> ([14]);
felt252_const<28976077832308491370>() -> ([16]);
felt252_sub([14], [16]) -> ([17]);
store_temp<felt252>([17]) -> ([17]);
felt252_is_zero([17]) { fallthrough() 3953([18]) };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 1>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([21]);
jump() { 3958() };
branch_align() -> ();
drop<NonZero<felt252>>([18]) -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 0>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([21]);
felt252_const<127458855108554219970326117>() -> ([24]);
rename<core::bool>([21]) -> ([26]);
store_temp<felt252>([24]) -> ([27]);
function_call<user@core::assert>([26], [27]) -> ([25]);
enum_match<core::PanicResult::<((),)>>([25]) { fallthrough([28]) 3971([29]) };
branch_align() -> ();
drop<Tuple<Unit>>([28]) -> ();
struct_construct<Unit>() -> ([30]);
struct_construct<Tuple<Unit>>([30]) -> ([31]);
enum_init<core::PanicResult::<((),)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([7]) -> ([33]);
store_temp<core::PanicResult::<((),)>>([32]) -> ([34]);
return([33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([29]) -> ([35]);
store_temp<RangeCheck>([7]) -> ([36]);
store_temp<core::PanicResult::<((),)>>([35]) -> ([37]);
return([36], [37]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([12]) -> ([38]);
store_temp<RangeCheck>([7]) -> ([39]);
store_temp<core::PanicResult::<((),)>>([38]) -> ([40]);
return([39], [40]);
u128_const<2>() -> ([1]);
u128_const<18446744073709551616>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u128>([1]) -> ([6]);
store_temp<u128>([2]) -> ([7]);
function_call<user@core::integer::U128Mul::mul>([5], [6], [7]) -> ([3], [4]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([4]) { fallthrough([8]) 4062([9]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([8]) -> ([10]);
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
store_temp<u128>([10]) -> ([14]);
store_temp<core::bool>([12]) -> ([15]);
function_call<user@fp::types::fp::FixedImpl::new>([14], [15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([18]);
dup<fp::types::fp::FixedType>([13]) -> ([13], [19]);
store_temp<fp::types::fp::FixedType>([19]) -> ([19]);
function_call<user@fp::math::trig::atan>([18], [19]) -> ([16], [17]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([17]) { fallthrough([20]) 4056([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([20]) -> ([22]);
struct_construct<Unit>() -> ([23]);
enum_init<core::option::Option::<core::integer::u128>, 1>([23]) -> ([24]);
felt252_const<20423289048683266000>() -> ([25]);
felt252_const<127458855108554219970656111>() -> ([26]);
store_temp<RangeCheck>([16]) -> ([29]);
store_temp<fp::types::fp::FixedType>([22]) -> ([30]);
store_temp<felt252>([25]) -> ([31]);
store_temp<felt252>([26]) -> ([32]);
store_temp<core::option::Option::<core::integer::u128>>([24]) -> ([33]);
function_call<user@fp::tests::helpers::assert_precise>([29], [30], [31], [32], [33]) -> ([27], [28]);
enum_match<core::PanicResult::<((),)>>([28]) { fallthrough([34]) 4050([35]) };
branch_align() -> ();
drop<Tuple<Unit>>([34]) -> ();
store_temp<RangeCheck>([27]) -> ([38]);
store_temp<fp::types::fp::FixedType>([13]) -> ([39]);
function_call<user@fp::math::trig::atan>([38], [39]) -> ([36], [37]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([37]) { fallthrough([40]) 4045([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([40]) -> ([42]);
u128_const<184467440737>() -> ([43]);
enum_init<core::option::Option::<core::integer::u128>, 0>([43]) -> ([44]);
felt252_const<20423289048683266000>() -> ([45]);
felt252_const<127458855108554219970656111>() -> ([46]);
store_temp<RangeCheck>([36]) -> ([49]);
store_temp<fp::types::fp::FixedType>([42]) -> ([50]);
store_temp<felt252>([45]) -> ([51]);
store_temp<felt252>([46]) -> ([52]);
store_temp<core::option::Option::<core::integer::u128>>([44]) -> ([53]);
function_call<user@fp::tests::helpers::assert_precise>([49], [50], [51], [52], [53]) -> ([47], [48]);
enum_match<core::PanicResult::<((),)>>([48]) { fallthrough([54]) 4040([55]) };
branch_align() -> ();
drop<Tuple<Unit>>([54]) -> ();
struct_construct<Unit>() -> ([56]);
struct_construct<Tuple<Unit>>([56]) -> ([57]);
enum_init<core::PanicResult::<((),)>, 0>([57]) -> ([58]);
store_temp<RangeCheck>([47]) -> ([59]);
store_temp<core::PanicResult::<((),)>>([58]) -> ([60]);
return([59], [60]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([55]) -> ([61]);
store_temp<RangeCheck>([47]) -> ([62]);
store_temp<core::PanicResult::<((),)>>([61]) -> ([63]);
return([62], [63]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([41]) -> ([64]);
store_temp<RangeCheck>([36]) -> ([65]);
store_temp<core::PanicResult::<((),)>>([64]) -> ([66]);
return([65], [66]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([13]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([35]) -> ([67]);
store_temp<RangeCheck>([27]) -> ([68]);
store_temp<core::PanicResult::<((),)>>([67]) -> ([69]);
return([68], [69]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([13]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([21]) -> ([70]);
store_temp<RangeCheck>([16]) -> ([71]);
store_temp<core::PanicResult::<((),)>>([70]) -> ([72]);
return([71], [72]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([9]) -> ([73]);
store_temp<RangeCheck>([3]) -> ([74]);
store_temp<core::PanicResult::<((),)>>([73]) -> ([75]);
return([74], [75]);
felt252_const<53495557813757699680>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([3]) { fallthrough([6]) 4123([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([6]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([11]);
store_temp<fp::types::fp::FixedType>([8]) -> ([12]);
function_call<user@fp::math::core::ceil>([11], [12]) -> ([9], [10]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([10]) { fallthrough([13]) 4118([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([13]) -> ([15]);
store_temp<fp::types::fp::FixedType>([15]) -> ([17]);
function_call<user@fp::types::fp::FixedInto::into>([17]) -> ([16]);
felt252_const<3>() -> ([18]);
felt252_const<18446744073709551616>() -> ([19]);
store_temp<felt252>([18]) -> ([18]);
felt252_mul([18], [19]) -> ([20]);
store_temp<felt252>([20]) -> ([20]);
felt252_sub([16], [20]) -> ([21]);
store_temp<felt252>([21]) -> ([21]);
felt252_is_zero([21]) { fallthrough() 4095([22]) };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::bool, 1>([23]) -> ([24]);
store_temp<core::bool>([24]) -> ([25]);
jump() { 4100() };
branch_align() -> ();
drop<NonZero<felt252>>([22]) -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([25]);
felt252_const<2351200880115526965453749945625035424647700844>() -> ([28]);
rename<core::bool>([25]) -> ([30]);
store_temp<felt252>([28]) -> ([31]);
function_call<user@core::assert>([30], [31]) -> ([29]);
enum_match<core::PanicResult::<((),)>>([29]) { fallthrough([32]) 4113([33]) };
branch_align() -> ();
drop<Tuple<Unit>>([32]) -> ();
struct_construct<Unit>() -> ([34]);
struct_construct<Tuple<Unit>>([34]) -> ([35]);
enum_init<core::PanicResult::<((),)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([9]) -> ([37]);
store_temp<core::PanicResult::<((),)>>([36]) -> ([38]);
return([37], [38]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([33]) -> ([39]);
store_temp<RangeCheck>([9]) -> ([40]);
store_temp<core::PanicResult::<((),)>>([39]) -> ([41]);
return([40], [41]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([14]) -> ([42]);
store_temp<RangeCheck>([9]) -> ([43]);
store_temp<core::PanicResult::<((),)>>([42]) -> ([44]);
return([43], [44]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([45]);
store_temp<RangeCheck>([2]) -> ([46]);
store_temp<core::PanicResult::<((),)>>([45]) -> ([47]);
return([46], [47]);
felt252_const<53495557813757699680>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([3]) { fallthrough([6]) 4184([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([6]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([11]);
store_temp<fp::types::fp::FixedType>([8]) -> ([12]);
function_call<user@fp::math::core::floor>([11], [12]) -> ([9], [10]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([10]) { fallthrough([13]) 4179([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([13]) -> ([15]);
store_temp<fp::types::fp::FixedType>([15]) -> ([17]);
function_call<user@fp::types::fp::FixedInto::into>([17]) -> ([16]);
felt252_const<2>() -> ([18]);
felt252_const<18446744073709551616>() -> ([19]);
store_temp<felt252>([18]) -> ([18]);
felt252_mul([18], [19]) -> ([20]);
store_temp<felt252>([20]) -> ([20]);
felt252_sub([16], [20]) -> ([21]);
store_temp<felt252>([21]) -> ([21]);
felt252_is_zero([21]) { fallthrough() 4156([22]) };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::bool, 1>([23]) -> ([24]);
store_temp<core::bool>([24]) -> ([25]);
jump() { 4161() };
branch_align() -> ();
drop<NonZero<felt252>>([22]) -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([25]);
felt252_const<2351200880115526965453749945625035424647700844>() -> ([28]);
rename<core::bool>([25]) -> ([30]);
store_temp<felt252>([28]) -> ([31]);
function_call<user@core::assert>([30], [31]) -> ([29]);
enum_match<core::PanicResult::<((),)>>([29]) { fallthrough([32]) 4174([33]) };
branch_align() -> ();
drop<Tuple<Unit>>([32]) -> ();
struct_construct<Unit>() -> ([34]);
struct_construct<Tuple<Unit>>([34]) -> ([35]);
enum_init<core::PanicResult::<((),)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([9]) -> ([37]);
store_temp<core::PanicResult::<((),)>>([36]) -> ([38]);
return([37], [38]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([33]) -> ([39]);
store_temp<RangeCheck>([9]) -> ([40]);
store_temp<core::PanicResult::<((),)>>([39]) -> ([41]);
return([40], [41]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([14]) -> ([42]);
store_temp<RangeCheck>([9]) -> ([43]);
store_temp<core::PanicResult::<((),)>>([42]) -> ([44]);
return([43], [44]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([45]);
store_temp<RangeCheck>([2]) -> ([46]);
store_temp<core::PanicResult::<((),)>>([45]) -> ([47]);
return([46], [47]);
felt252_const<53495557813757699680>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([3]) { fallthrough([6]) 4245([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([6]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([11]);
store_temp<fp::types::fp::FixedType>([8]) -> ([12]);
function_call<user@fp::math::core::round>([11], [12]) -> ([9], [10]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([10]) { fallthrough([13]) 4240([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([13]) -> ([15]);
store_temp<fp::types::fp::FixedType>([15]) -> ([17]);
function_call<user@fp::types::fp::FixedInto::into>([17]) -> ([16]);
felt252_const<3>() -> ([18]);
felt252_const<18446744073709551616>() -> ([19]);
store_temp<felt252>([18]) -> ([18]);
felt252_mul([18], [19]) -> ([20]);
store_temp<felt252>([20]) -> ([20]);
felt252_sub([16], [20]) -> ([21]);
store_temp<felt252>([21]) -> ([21]);
felt252_is_zero([21]) { fallthrough() 4217([22]) };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::bool, 1>([23]) -> ([24]);
store_temp<core::bool>([24]) -> ([25]);
jump() { 4222() };
branch_align() -> ();
drop<NonZero<felt252>>([22]) -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([25]);
felt252_const<2351200880115526965453749945625035424647700844>() -> ([28]);
rename<core::bool>([25]) -> ([30]);
store_temp<felt252>([28]) -> ([31]);
function_call<user@core::assert>([30], [31]) -> ([29]);
enum_match<core::PanicResult::<((),)>>([29]) { fallthrough([32]) 4235([33]) };
branch_align() -> ();
drop<Tuple<Unit>>([32]) -> ();
struct_construct<Unit>() -> ([34]);
struct_construct<Tuple<Unit>>([34]) -> ([35]);
enum_init<core::PanicResult::<((),)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([9]) -> ([37]);
store_temp<core::PanicResult::<((),)>>([36]) -> ([38]);
return([37], [38]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([33]) -> ([39]);
store_temp<RangeCheck>([9]) -> ([40]);
store_temp<core::PanicResult::<((),)>>([39]) -> ([41]);
return([40], [41]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([14]) -> ([42]);
store_temp<RangeCheck>([9]) -> ([43]);
store_temp<core::PanicResult::<((),)>>([42]) -> ([44]);
return([43], [44]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([45]);
store_temp<RangeCheck>([2]) -> ([46]);
store_temp<core::PanicResult::<((),)>>([45]) -> ([47]);
return([46], [47]);
felt252_const<-1>() -> ([1]);
felt252_const<25>() -> ([2]);
store_temp<felt252>([2]) -> ([2]);
felt252_mul([2], [1]) -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<felt252>([3]) -> ([7]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([6], [7]) -> ([4], [5]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([5]) { fallthrough([8]) 4277([9]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([8]) -> ([10]);
store_temp<RangeCheck>([4]) -> ([13]);
store_temp<fp::types::fp::FixedType>([10]) -> ([14]);
function_call<user@fp::math::core::sqrt>([13], [14]) -> ([11], [12]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([12]) { fallthrough([15]) 4272([16]) };
branch_align() -> ();
drop<Tuple<fp::types::fp::FixedType>>([15]) -> ();
struct_construct<Unit>() -> ([17]);
struct_construct<Tuple<Unit>>([17]) -> ([18]);
enum_init<core::PanicResult::<((),)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([11]) -> ([20]);
store_temp<core::PanicResult::<((),)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([11]) -> ([23]);
store_temp<core::PanicResult::<((),)>>([22]) -> ([24]);
return([23], [24]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([9]) -> ([25]);
store_temp<RangeCheck>([4]) -> ([26]);
store_temp<core::PanicResult::<((),)>>([25]) -> ([27]);
return([26], [27]);
felt252_const<0>() -> ([1]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([4], [5]) -> ([2], [3]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([3]) { fallthrough([6]) 4334([7]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([6]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([11]);
store_temp<fp::types::fp::FixedType>([8]) -> ([12]);
function_call<user@fp::math::core::sqrt>([11], [12]) -> ([9], [10]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([10]) { fallthrough([13]) 4329([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([13]) -> ([15]);
store_temp<fp::types::fp::FixedType>([15]) -> ([17]);
function_call<user@fp::types::fp::FixedInto::into>([17]) -> ([16]);
felt252_const<0>() -> ([18]);
felt252_sub([16], [18]) -> ([19]);
store_temp<felt252>([19]) -> ([19]);
felt252_is_zero([19]) { fallthrough() 4306([20]) };
branch_align() -> ();
struct_construct<Unit>() -> ([21]);
enum_init<core::bool, 1>([21]) -> ([22]);
store_temp<core::bool>([22]) -> ([23]);
jump() { 4311() };
branch_align() -> ();
drop<NonZero<felt252>>([20]) -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::bool, 0>([24]) -> ([25]);
store_temp<core::bool>([25]) -> ([23]);
felt252_const<35876478273247176597073241689804579499892>() -> ([26]);
rename<core::bool>([23]) -> ([28]);
store_temp<felt252>([26]) -> ([29]);
function_call<user@core::assert>([28], [29]) -> ([27]);
enum_match<core::PanicResult::<((),)>>([27]) { fallthrough([30]) 4324([31]) };
branch_align() -> ();
drop<Tuple<Unit>>([30]) -> ();
struct_construct<Unit>() -> ([32]);
struct_construct<Tuple<Unit>>([32]) -> ([33]);
enum_init<core::PanicResult::<((),)>, 0>([33]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<core::PanicResult::<((),)>>([34]) -> ([36]);
return([35], [36]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([31]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<core::PanicResult::<((),)>>([37]) -> ([39]);
return([38], [39]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([14]) -> ([40]);
store_temp<RangeCheck>([9]) -> ([41]);
store_temp<core::PanicResult::<((),)>>([40]) -> ([42]);
return([41], [42]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([7]) -> ([43]);
store_temp<RangeCheck>([2]) -> ([44]);
store_temp<core::PanicResult::<((),)>>([43]) -> ([45]);
return([44], [45]);
disable_ap_tracking() -> ();
felt252_const<3>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<felt252>([2]) -> ([6]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([5], [6]) -> ([3], [4]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([4]) { fallthrough([7]) 4419([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([7]) -> ([9]);
felt252_const<4>() -> ([10]);
store_temp<RangeCheck>([3]) -> ([13]);
store_temp<felt252>([10]) -> ([14]);
function_call<user@fp::types::fp::FixedImpl::from_unscaled_felt>([13], [14]) -> ([11], [12]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([12]) { fallthrough([15]) 4412([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([15]) -> ([17]);
store_temp<RangeCheck>([11]) -> ([21]);
store_temp<GasBuiltin>([1]) -> ([22]);
store_temp<fp::types::fp::FixedType>([9]) -> ([23]);
store_temp<fp::types::fp::FixedType>([17]) -> ([24]);
function_call<user@fp::math::core::pow>([21], [22], [23], [24]) -> ([18], [19], [20]);
enable_ap_tracking() -> ();
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([20]) { fallthrough([25]) 4405([26]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([25]) -> ([27]);
store_temp<fp::types::fp::FixedType>([27]) -> ([29]);
function_call<user@fp::types::fp::FixedInto::into>([29]) -> ([28]);
felt252_const<81>() -> ([30]);
felt252_const<18446744073709551616>() -> ([31]);
store_temp<felt252>([30]) -> ([30]);
felt252_mul([30], [31]) -> ([32]);
store_temp<felt252>([32]) -> ([32]);
felt252_sub([28], [32]) -> ([33]);
store_temp<felt252>([33]) -> ([33]);
felt252_is_zero([33]) { fallthrough() 4378([34]) };
branch_align() -> ();
struct_construct<Unit>() -> ([35]);
enum_init<core::bool, 1>([35]) -> ([36]);
store_temp<core::bool>([36]) -> ([37]);
jump() { 4383() };
branch_align() -> ();
drop<NonZero<felt252>>([34]) -> ();
struct_construct<Unit>() -> ([38]);
enum_init<core::bool, 0>([38]) -> ([39]);
store_temp<core::bool>([39]) -> ([37]);
felt252_const<39446605025088300853242100847729956958735173621867890>() -> ([40]);
rename<core::bool>([37]) -> ([42]);
store_temp<felt252>([40]) -> ([43]);
function_call<user@core::assert>([42], [43]) -> ([41]);
enum_match<core::PanicResult::<((),)>>([41]) { fallthrough([44]) 4398([45]) };
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Tuple<Unit>>([44]) -> ();
struct_construct<Unit>() -> ([46]);
struct_construct<Tuple<Unit>>([46]) -> ([47]);
enum_init<core::PanicResult::<((),)>, 0>([47]) -> ([48]);
store_temp<RangeCheck>([18]) -> ([49]);
store_temp<GasBuiltin>([19]) -> ([50]);
store_temp<core::PanicResult::<((),)>>([48]) -> ([51]);
return([49], [50], [51]);
branch_align() -> ();
disable_ap_tracking() -> ();
enum_init<core::PanicResult::<((),)>, 1>([45]) -> ([52]);
store_temp<RangeCheck>([18]) -> ([53]);
store_temp<GasBuiltin>([19]) -> ([54]);
store_temp<core::PanicResult::<((),)>>([52]) -> ([55]);
return([53], [54], [55]);
branch_align() -> ();
disable_ap_tracking() -> ();
enum_init<core::PanicResult::<((),)>, 1>([26]) -> ([56]);
store_temp<RangeCheck>([18]) -> ([57]);
store_temp<GasBuiltin>([19]) -> ([58]);
store_temp<core::PanicResult::<((),)>>([56]) -> ([59]);
return([57], [58], [59]);
branch_align() -> ();
drop<fp::types::fp::FixedType>([9]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([16]) -> ([60]);
store_temp<RangeCheck>([11]) -> ([61]);
store_temp<GasBuiltin>([1]) -> ([62]);
store_temp<core::PanicResult::<((),)>>([60]) -> ([63]);
return([61], [62], [63]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([8]) -> ([64]);
store_temp<RangeCheck>([3]) -> ([65]);
store_temp<GasBuiltin>([1]) -> ([66]);
store_temp<core::PanicResult::<((),)>>([64]) -> ([67]);
return([65], [66], [67]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { fallthrough([5]) 4429([6]) };
branch_align() -> ();
store_temp<u128>([5]) -> ([7]);
jump() { 4433() };
branch_align() -> ();
drop<Unit>([6]) -> ();
u128_const<1844674407370>() -> ([8]);
store_temp<u128>([8]) -> ([7]);
store_temp<RangeCheck>([0]) -> ([11]);
store_temp<felt252>([2]) -> ([12]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([11], [12]) -> ([9], [10]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([10]) { fallthrough([13]) 4505([14]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([13]) -> ([15]);
store_temp<RangeCheck>([9]) -> ([18]);
dup<fp::types::fp::FixedType>([1]) -> ([1], [19]);
store_temp<fp::types::fp::FixedType>([19]) -> ([19]);
store_temp<fp::types::fp::FixedType>([15]) -> ([20]);
function_call<user@fp::math::core::sub>([18], [19], [20]) -> ([16], [17]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([17]) { fallthrough([21]) 4497([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([21]) -> ([23]);
struct_deconstruct<fp::types::fp::FixedType>([23]) -> ([24], [25]);
drop<core::bool>([25]) -> ();
dup<u128>([7]) -> ([7], [26]);
dup<u128>([24]) -> ([24], [27]);
u128_overflowing_sub([16], [26], [27]) { fallthrough([28], [29]) 4460([30], [31]) };
branch_align() -> ();
drop<u128>([29]) -> ();
drop<felt252>([3]) -> ();
drop<u128>([24]) -> ();
drop<u128>([7]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
store_temp<RangeCheck>([28]) -> ([32]);
jump() { 4486() };
branch_align() -> ();
drop<u128>([31]) -> ();
store_temp<fp::types::fp::FixedType>([1]) -> ([34]);
function_call<user@fp::types::fp::FixedPrint::print>([34]) -> ([33]);
drop<Unit>([33]) -> ();
u128_overflowing_sub([30], [7], [24]) { fallthrough([35], [36]) 4473([37], [38]) };
branch_align() -> ();
drop<u128>([36]) -> ();
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
store_temp<RangeCheck>([35]) -> ([41]);
store_temp<core::bool>([40]) -> ([42]);
jump() { 4479() };
branch_align() -> ();
drop<u128>([38]) -> ();
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
store_temp<RangeCheck>([37]) -> ([41]);
store_temp<core::bool>([44]) -> ([42]);
rename<core::bool>([42]) -> ([46]);
store_temp<felt252>([3]) -> ([47]);
function_call<user@core::assert>([46], [47]) -> ([45]);
enum_match<core::PanicResult::<((),)>>([45]) { fallthrough([48]) 4492([49]) };
branch_align() -> ();
drop<Tuple<Unit>>([48]) -> ();
store_temp<RangeCheck>([41]) -> ([32]);
struct_construct<Unit>() -> ([50]);
struct_construct<Tuple<Unit>>([50]) -> ([51]);
enum_init<core::PanicResult::<((),)>, 0>([51]) -> ([52]);
rename<RangeCheck>([32]) -> ([53]);
store_temp<core::PanicResult::<((),)>>([52]) -> ([54]);
return([53], [54]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([49]) -> ([55]);
store_temp<RangeCheck>([41]) -> ([56]);
store_temp<core::PanicResult::<((),)>>([55]) -> ([57]);
return([56], [57]);
branch_align() -> ();
drop<felt252>([3]) -> ();
drop<u128>([7]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([22]) -> ([58]);
store_temp<RangeCheck>([16]) -> ([59]);
store_temp<core::PanicResult::<((),)>>([58]) -> ([60]);
return([59], [60]);
branch_align() -> ();
drop<felt252>([3]) -> ();
drop<fp::types::fp::FixedType>([1]) -> ();
drop<u128>([7]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([14]) -> ([61]);
store_temp<RangeCheck>([9]) -> ([62]);
store_temp<core::PanicResult::<((),)>>([61]) -> ([63]);
return([62], [63]);
u128s_from_felt252([0], [1]) { fallthrough([2], [3]) 4520([4], [5], [6]) };
branch_align() -> ();
u128_const<0>() -> ([7]);
struct_construct<core::integer::u256>([3], [7]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([9]);
store_temp<core::integer::u256>([8]) -> ([10]);
jump() { 4524() };
branch_align() -> ();
struct_construct<core::integer::u256>([6], [5]) -> ([11]);
store_temp<RangeCheck>([4]) -> ([9]);
store_temp<core::integer::u256>([11]) -> ([10]);
rename<RangeCheck>([9]) -> ([12]);
rename<core::integer::u256>([10]) -> ([13]);
return([12], [13]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
dup<u128>([4]) -> ([4], [7]);
dup<u128>([6]) -> ([6], [8]);
u128_overflowing_sub([0], [7], [8]) { fallthrough([9], [10]) 4564([11], [12]) };
branch_align() -> ();
drop<u128>([10]) -> ();
store_temp<RangeCheck>([9]) -> ([9]);
u128_eq([4], [6]) { fallthrough() 4544() };
branch_align() -> ();
drop<u128>([5]) -> ();
drop<u128>([3]) -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 0>([13]) -> ([14]);
store_temp<RangeCheck>([9]) -> ([15]);
store_temp<core::bool>([14]) -> ([16]);
jump() { 4561() };
branch_align() -> ();
u128_overflowing_sub([9], [3], [5]) { fallthrough([17], [18]) 4553([19], [20]) };
branch_align() -> ();
drop<u128>([18]) -> ();
struct_construct<Unit>() -> ([21]);
enum_init<core::bool, 0>([21]) -> ([22]);
store_temp<RangeCheck>([17]) -> ([23]);
store_temp<core::bool>([22]) -> ([24]);
jump() { 4559() };
branch_align() -> ();
drop<u128>([20]) -> ();
struct_construct<Unit>() -> ([25]);
enum_init<core::bool, 1>([25]) -> ([26]);
store_temp<RangeCheck>([19]) -> ([23]);
store_temp<core::bool>([26]) -> ([24]);
rename<RangeCheck>([23]) -> ([15]);
rename<core::bool>([24]) -> ([16]);
rename<RangeCheck>([15]) -> ([27]);
rename<core::bool>([16]) -> ([28]);
jump() { 4574() };
branch_align() -> ();
drop<u128>([12]) -> ();
drop<u128>([4]) -> ();
drop<u128>([5]) -> ();
drop<u128>([3]) -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<RangeCheck>([11]) -> ([27]);
store_temp<core::bool>([30]) -> ([28]);
rename<RangeCheck>([27]) -> ([31]);
rename<core::bool>([28]) -> ([32]);
return([31], [32]);
bool_not_impl([0]) -> ([2]);
store_temp<core::bool>([2]) -> ([2]);
enum_match<core::bool>([2]) { fallthrough([3]) 4588([4]) };
branch_align() -> ();
drop<Unit>([3]) -> ();
drop<felt252>([1]) -> ();
struct_construct<Unit>() -> ([5]);
struct_construct<Tuple<Unit>>([5]) -> ([6]);
enum_init<core::PanicResult::<((),)>, 0>([6]) -> ([7]);
store_temp<core::PanicResult::<((),)>>([7]) -> ([8]);
return([8]);
branch_align() -> ();
drop<Unit>([4]) -> ();
array_new<felt252>() -> ([9]);
array_append<felt252>([9], [1]) -> ([10]);
enum_init<core::PanicResult::<((),)>, 1>([10]) -> ([11]);
store_temp<core::PanicResult::<((),)>>([11]) -> ([12]);
return([12]);
struct_construct<fp::types::fp::FixedType>([0], [1]) -> ([2]);
store_temp<fp::types::fp::FixedType>([2]) -> ([3]);
return([3]);
struct_deconstruct<fp::types::fp::FixedType>([0]) -> ([1], [2]);
u128_to_felt252([1]) -> ([3]);
enum_match<core::bool>([2]) { fallthrough([4]) 4607([5]) };
branch_align() -> ();
drop<Unit>([4]) -> ();
felt252_const<1>() -> ([6]);
felt252_mul([3], [6]) -> ([7]);
store_temp<felt252>([7]) -> ([8]);
return([8]);
branch_align() -> ();
drop<Unit>([5]) -> ();
felt252_const<-1>() -> ([9]);
felt252_const<1>() -> ([10]);
store_temp<felt252>([10]) -> ([10]);
felt252_mul([10], [9]) -> ([11]);
store_temp<felt252>([11]) -> ([11]);
felt252_mul([3], [11]) -> ([12]);
store_temp<felt252>([12]) -> ([13]);
return([13]);
store_temp<RangeCheck>([0]) -> ([4]);
dup<felt252>([1]) -> ([1], [5]);
store_temp<felt252>([5]) -> ([5]);
function_call<user@fp::types::fp::_felt_abs>([4], [5]) -> ([2], [3]);
rename<RangeCheck>([2]) -> ([8]);
rename<felt252>([3]) -> ([9]);
function_call<user@core::integer::u128_try_from_felt252>([8], [9]) -> ([6], [7]);
enum_match<core::option::Option::<core::integer::u128>>([7]) { fallthrough([10]) 4637([11]) };
branch_align() -> ();
store_temp<RangeCheck>([6]) -> ([14]);
store_temp<felt252>([1]) -> ([15]);
function_call<user@fp::types::fp::_felt_sign>([14], [15]) -> ([12], [13]);
store_temp<u128>([10]) -> ([17]);
store_temp<core::bool>([13]) -> ([18]);
function_call<user@fp::types::fp::FixedImpl::new>([17], [18]) -> ([16]);
struct_construct<Tuple<fp::types::fp::FixedType>>([16]) -> ([19]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([20]) -> ([22]);
return([21], [22]);
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<felt252>([1]) -> ();
array_new<felt252>() -> ([23]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([24]);
store_temp<felt252>([24]) -> ([24]);
array_append<felt252>([23], [24]) -> ([25]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([25]) -> ([26]);
store_temp<RangeCheck>([6]) -> ([27]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([26]) -> ([28]);
return([27], [28]);
felt252_const<18446744073709551616>() -> ([2]);
felt252_mul([1], [2]) -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<felt252>([3]) -> ([7]);
function_call<user@fp::types::fp::FixedImpl::from_felt>([6], [7]) -> ([4], [5]);
enum_match<core::PanicResult::<(fp::types::fp::FixedType,)>>([5]) { fallthrough([8]) 4661([9]) };
branch_align() -> ();
struct_deconstruct<Tuple<fp::types::fp::FixedType>>([8]) -> ([10]);
struct_construct<Tuple<fp::types::fp::FixedType>>([10]) -> ([11]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([13]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([12]) -> ([14]);
return([13], [14]);
branch_align() -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([9]) -> ([15]);
store_temp<RangeCheck>([4]) -> ([16]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([15]) -> ([17]);
return([16], [17]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 4672([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 4676() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 4688([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
u128_const<18446744073709551616>() -> ([3]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<u128>([1]) -> ([7]);
store_temp<u128>([3]) -> ([8]);
function_call<user@core::integer::U128Mul::mul>([6], [7], [8]) -> ([4], [5]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([5]) { fallthrough([9]) 4709([10]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([9]) -> ([11]);
store_temp<u128>([11]) -> ([13]);
store_temp<core::bool>([2]) -> ([14]);
function_call<user@fp::types::fp::FixedImpl::new>([13], [14]) -> ([12]);
struct_construct<Tuple<fp::types::fp::FixedType>>([12]) -> ([15]);
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 0>([15]) -> ([16]);
store_temp<RangeCheck>([4]) -> ([17]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([16]) -> ([18]);
return([17], [18]);
branch_align() -> ();
drop<core::bool>([2]) -> ();
enum_init<core::PanicResult::<(fp::types::fp::FixedType,)>, 1>([10]) -> ([19]);
store_temp<RangeCheck>([4]) -> ([20]);
store_temp<core::PanicResult::<(fp::types::fp::FixedType,)>>([19]) -> ([21]);
return([20], [21]);
u128_mul_guarantee_verify([0], [1]) -> ([2]);
struct_construct<Unit>() -> ([3]);
store_temp<RangeCheck>([2]) -> ([4]);
store_temp<Unit>([3]) -> ([5]);
return([4], [5]);
store_temp<core::integer::u256>([2]) -> ([4]);
function_call<user@core::integer::u256_as_non_zero>([4]) -> ([3]);
enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([3]) { fallthrough([5]) 4732([6]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<core::integer::u256>>>([5]) -> ([7]);
u256_safe_divmod([0], [1], [7]) -> ([8], [9], [10]);
drop<core::integer::u256>([10]) -> ();
struct_construct<Tuple<core::integer::u256>>([9]) -> ([11]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([11]) -> ([12]);
store_temp<RangeCheck>([8]) -> ([13]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([12]) -> ([14]);
return([13], [14]);
branch_align() -> ();
drop<core::integer::u256>([1]) -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([6]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([16]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([15]) -> ([17]);
return([16], [17]);
store_temp<u128>([2]) -> ([4]);
function_call<user@core::integer::u128_as_non_zero>([4]) -> ([3]);
enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>([3]) { fallthrough([5]) 4750([6]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<u128>>>([5]) -> ([7]);
u128_safe_divmod([0], [1], [7]) -> ([8], [9], [10]);
drop<u128>([10]) -> ();
struct_construct<Tuple<u128>>([9]) -> ([11]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([11]) -> ([12]);
store_temp<RangeCheck>([8]) -> ([13]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([12]) -> ([14]);
return([13], [14]);
branch_align() -> ();
drop<u128>([1]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([6]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([16]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([15]) -> ([17]);
return([16], [17]);
store_temp<core::integer::u256>([0]) -> ([2]);
function_call<user@core::integer::u256_try_as_non_zero>([2]) -> ([1]);
enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([1]) { fallthrough([3]) 4764([4]) };
branch_align() -> ();
struct_construct<Tuple<NonZero<core::integer::u256>>>([3]) -> ([5]);
enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0>([5]) -> ([6]);
store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([6]) -> ([7]);
return([7]);
branch_align() -> ();
drop<Unit>([4]) -> ();
array_new<felt252>() -> ([8]);
felt252_const<2161886914012515606576>() -> ([9]);
store_temp<felt252>([9]) -> ([9]);
array_append<felt252>([8], [9]) -> ([10]);
enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1>([10]) -> ([11]);
store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([11]) -> ([12]);
return([12]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u128>([1]) -> ([6]);
store_temp<u128>([2]) -> ([7]);
function_call<user@core::integer::u128_checked_mul>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { fallthrough([8]) 4784([9]) };
branch_align() -> ();
struct_construct<Tuple<u128>>([8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39878429859761676908720221312622923640695>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([3]) -> ([18]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([17]) -> ([19]);
return([18], [19]);
store_temp<u128>([0]) -> ([2]);
function_call<user@core::integer::u128_try_as_non_zero>([2]) -> ([1]);
enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>([1]) { fallthrough([3]) 4802([4]) };
branch_align() -> ();
struct_construct<Tuple<NonZero<u128>>>([3]) -> ([5]);
enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, 0>([5]) -> ([6]);
store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>([6]) -> ([7]);
return([7]);
branch_align() -> ();
drop<Unit>([4]) -> ();
array_new<felt252>() -> ([8]);
felt252_const<2161814014192570802224>() -> ([9]);
store_temp<felt252>([9]) -> ([9]);
array_append<felt252>([8], [9]) -> ([10]);
enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>, 1>([10]) -> ([11]);
store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>>([11]) -> ([12]);
return([12]);
struct_deconstruct<fp::types::fp::FixedType>([1]) -> ([2], [3]);
enum_match<core::bool>([3]) { fallthrough([4]) 4832([5]) };
branch_align() -> ();
drop<Unit>([4]) -> ();
u128_const<18446744073709551616>() -> ([6]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<u128>([2]) -> ([10]);
store_temp<u128>([6]) -> ([11]);
function_call<user@core::integer::U128Div::div>([9], [10], [11]) -> ([7], [8]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([8]) { fallthrough([12]) 4827([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([12]) -> ([14]);
enum_init<core::option::Option::<core::integer::u128>, 0>([14]) -> ([15]);
store_temp<RangeCheck>([7]) -> ([16]);
store_temp<core::option::Option::<core::integer::u128>>([15]) -> ([17]);
jump() { 4839() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, 1>([13]) -> ([18]);
store_temp<RangeCheck>([7]) -> ([19]);
store_temp<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([18]) -> ([20]);
return([19], [20]);
branch_align() -> ();
drop<Unit>([5]) -> ();
drop<u128>([2]) -> ();
struct_construct<Unit>() -> ([21]);
enum_init<core::option::Option::<core::integer::u128>, 1>([21]) -> ([22]);
store_temp<RangeCheck>([0]) -> ([16]);
store_temp<core::option::Option::<core::integer::u128>>([22]) -> ([17]);
struct_construct<Tuple<core::option::Option::<core::integer::u128>>>([17]) -> ([23]);
enum_init<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([16]) -> ([25]);
store_temp<core::PanicResult::<(core::option::Option::<core::integer::u128>,)>>([24]) -> ([26]);
return([25], [26]);
struct_deconstruct<fp::types::fp::FixedType>([0]) -> ([1], [2]);
store_temp<core::bool>([2]) -> ([4]);
function_call<user@core::debug::BoolPrintImpl::print>([4]) -> ([3]);
drop<Unit>([3]) -> ();
store_temp<u128>([1]) -> ([6]);
function_call<user@core::debug::U128PrintImpl::print>([6]) -> ([5]);
drop<Unit>([5]) -> ();
struct_construct<Unit>() -> ([7]);
store_temp<Unit>([7]) -> ([8]);
return([8]);
u128s_from_felt252([0], [1]) { fallthrough([2], [3]) 4860([4], [5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([3]) -> ([7]);
store_temp<RangeCheck>([2]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 4867() };
branch_align() -> ();
struct_construct<Tuple<u128, u128>>([5], [6]) -> ([10]);
drop<Tuple<u128, u128>>([10]) -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::option::Option::<core::integer::u128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([12]) -> ([9]);
rename<RangeCheck>([8]) -> ([13]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([14]);
return([13], [14]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 4877([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u128>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([8]) -> ([9]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([9]) -> ([10]);
return([10]);
u256_is_zero([0]) { fallthrough() 4890([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([3]) -> ([4]);
jump() { 4893() };
branch_align() -> ();
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([5]) -> ([4]);
rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([4]) -> ([6]);
return([6]);
u128_guarantee_mul([1], [2]) -> ([3], [4], [5]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<U128MulGuarantee>([5]) -> ([9]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Tuple<u128, u128>>([3], [4]) -> ([10]);
struct_deconstruct<Tuple<u128, u128>>([10]) -> ([11], [12]);
u128_to_felt252([11]) -> ([13]);
store_temp<felt252>([13]) -> ([13]);
store_temp<u128>([12]) -> ([12]);
felt252_is_zero([13]) { fallthrough() 4910([14]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([12]) -> ([15]);
store_temp<core::option::Option::<core::integer::u128>>([15]) -> ([16]);
jump() { 4916() };
branch_align() -> ();
drop<NonZero<felt252>>([14]) -> ();
drop<u128>([12]) -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::option::Option::<core::integer::u128>, 1>([17]) -> ([18]);
store_temp<core::option::Option::<core::integer::u128>>([18]) -> ([16]);
store_temp<RangeCheck>([6]) -> ([19]);
store_temp<core::option::Option::<core::integer::u128>>([16]) -> ([20]);
return([19], [20]);
u128_is_zero([0]) { fallthrough() 4925([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>([3]) -> ([4]);
jump() { 4928() };
branch_align() -> ();
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>([5]) -> ([4]);
rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>>([4]) -> ([6]);
return([6]);
enum_match<core::bool>([0]) { fallthrough([1]) 4938([2]) };
branch_align() -> ();
drop<Unit>([1]) -> ();
felt252_const<439721161573>() -> ([3]);
store_temp<felt252>([3]) -> ([5]);
function_call<user@core::debug::Felt252PrintImpl::print>([5]) -> ([4]);
drop<Unit>([4]) -> ();
jump() { 4944() };
branch_align() -> ();
drop<Unit>([2]) -> ();
felt252_const<1953658213>() -> ([6]);
store_temp<felt252>([6]) -> ([8]);
function_call<user@core::debug::Felt252PrintImpl::print>([8]) -> ([7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([9]);
store_temp<Unit>([9]) -> ([10]);
return([10]);
u128_to_felt252([0]) -> ([1]);
store_temp<felt252>([1]) -> ([3]);
function_call<user@core::debug::Felt252PrintImpl::print>([3]) -> ([2]);
drop<Unit>([2]) -> ();
struct_construct<Unit>() -> ([4]);
store_temp<Unit>([4]) -> ([5]);
return([5]);
store_temp<felt252>([0]) -> ([2]);
function_call<user@core::debug::print_felt252>([2]) -> ([1]);
drop<Unit>([1]) -> ();
struct_construct<Unit>() -> ([3]);
store_temp<Unit>([3]) -> ([4]);
return([4]);
array_new<felt252>() -> ([1]);
array_append<felt252>([1], [0]) -> ([2]);
store_temp<Array<felt252>>([2]) -> ([2]);
print([2]) -> ();
struct_construct<Unit>() -> ([3]);
store_temp<Unit>([3]) -> ([4]);
return([4]);

fp::types::fp::_felt_sign@0([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::bool);
fp::types::fp::_felt_abs@14([0]: RangeCheck, [1]: felt252) -> (RangeCheck, felt252);
fp::math::trig::acos@38([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::trig::asin@165([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::trig::atan@288([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::add@994([0]: RangeCheck, [1]: fp::types::fp::FixedType, [2]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::abs@1015([0]: fp::types::fp::FixedType) -> (fp::types::fp::FixedType);
fp::math::core::ceil@1024([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::div@1111([0]: RangeCheck, [1]: fp::types::fp::FixedType, [2]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::floor@1174([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::eq@1251([0]: fp::types::fp::FixedType, [1]: fp::types::fp::FixedType) -> (core::bool);
fp::math::core::exp@1276([0]: RangeCheck, [1]: GasBuiltin, [2]: fp::types::fp::FixedType) -> (RangeCheck, GasBuiltin, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::exp2@1315([0]: RangeCheck, [1]: GasBuiltin, [2]: fp::types::fp::FixedType) -> (RangeCheck, GasBuiltin, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::ln@1820([0]: RangeCheck, [1]: GasBuiltin, [2]: fp::types::fp::FixedType) -> (RangeCheck, GasBuiltin, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::log2@1863([0]: RangeCheck, [1]: GasBuiltin, [2]: fp::types::fp::FixedType) -> (RangeCheck, GasBuiltin, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::mul@2508([0]: RangeCheck, [1]: fp::types::fp::FixedType, [2]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::ne@2573([0]: fp::types::fp::FixedType, [1]: fp::types::fp::FixedType) -> (core::bool);
fp::math::core::neg@2602([0]: fp::types::fp::FixedType) -> (fp::types::fp::FixedType);
fp::math::core::pow@2623([0]: RangeCheck, [1]: GasBuiltin, [2]: fp::types::fp::FixedType, [3]: fp::types::fp::FixedType) -> (RangeCheck, GasBuiltin, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::round@2729([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::sqrt@2812([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::sub@2881([0]: RangeCheck, [1]: fp::types::fp::FixedType, [2]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::_msb@2902([0]: RangeCheck, [1]: GasBuiltin, [2]: u128) -> (RangeCheck, GasBuiltin, core::PanicResult::<(core::integer::u128,)>);
fp::math::core::_pow_int@2996([0]: RangeCheck, [1]: GasBuiltin, [2]: fp::types::fp::FixedType, [3]: u128, [4]: core::bool) -> (RangeCheck, GasBuiltin, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::math::core::_split_unsigned@3219([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<((core::integer::u128, core::integer::u128),)>);
fp::tests::math_tests::core_tests::test_into@3240([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_try_into_u128@3290([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_negative_try_into_u128@3535([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_overflow_large@3580([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_overflow_small@3598([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_sign@3619([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_abs@3780([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_acos@3879([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_asin@3930([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_atan@3981([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_ceil@4067([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_floor@4128([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_round@4189([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_sqrt_fail@4250([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_sqrt@4282([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((),)>);
fp::tests::math_tests::core_tests::test_pow@4339([0]: RangeCheck, [1]: GasBuiltin) -> (RangeCheck, GasBuiltin, core::PanicResult::<((),)>);
fp::tests::helpers::assert_precise@4425([0]: RangeCheck, [1]: fp::types::fp::FixedType, [2]: felt252, [3]: felt252, [4]: core::option::Option::<core::integer::u128>) -> (RangeCheck, core::PanicResult::<((),)>);
core::integer::u256_from_felt252@4513([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::integer::u256);
core::integer::U256PartialOrd::lt@4527([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::bool);
core::assert@4577([0]: core::bool, [1]: felt252) -> (core::PanicResult::<((),)>);
fp::types::fp::FixedImpl::new@4595([0]: u128, [1]: core::bool) -> (fp::types::fp::FixedType);
fp::types::fp::FixedInto::into@4598([0]: fp::types::fp::FixedType) -> (felt252);
fp::types::fp::FixedImpl::from_felt@4617([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
fp::types::fp::FixedImpl::from_unscaled_felt@4648([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
core::integer::U128Add::add@4666([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
fp::types::fp::FixedImpl::new_unscaled@4693([0]: RangeCheck, [1]: u128, [2]: core::bool) -> (RangeCheck, core::PanicResult::<(fp::types::fp::FixedType,)>);
core::integer::U128MulGuaranteeDestruct::destruct@4715([0]: RangeCheck, [1]: U128MulGuarantee) -> (RangeCheck, Unit);
core::integer::U256Div::div@4720([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::U128Div::div@4738([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::u256_as_non_zero@4756([0]: core::integer::u256) -> (core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>);
core::integer::U128Mul::mul@4773([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::u128_as_non_zero@4794([0]: u128) -> (core::PanicResult::<(core::zeroable::NonZero::<core::integer::u128>,)>);
fp::types::fp::FixedTryIntoU128::try_into@4811([0]: RangeCheck, [1]: fp::types::fp::FixedType) -> (RangeCheck, core::PanicResult::<(core::option::Option::<core::integer::u128>,)>);
fp::types::fp::FixedPrint::print@4844([0]: fp::types::fp::FixedType) -> (Unit);
core::integer::u128_try_from_felt252@4854([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@4870([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::PanicResult::<(core::integer::u128,)>);
core::integer::u256_try_as_non_zero@4884([0]: core::integer::u256) -> (core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>);
core::integer::u128_checked_mul@4895([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::integer::u128_try_as_non_zero@4919([0]: u128) -> (core::option::Option::<core::zeroable::NonZero::<core::integer::u128>>);
core::debug::BoolPrintImpl::print@4930([0]: core::bool) -> (Unit);
core::debug::U128PrintImpl::print@4947([0]: u128) -> (Unit);
core::debug::Felt252PrintImpl::print@4954([0]: felt252) -> (Unit);
core::debug::print_felt252@4960([0]: felt252) -> (Unit);
